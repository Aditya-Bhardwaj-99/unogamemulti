{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners'; // import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket');\nconst gamearea = {\n  display: 'grid',\n  'grid-template-columns': 'auto',\n  height: 'auto',\n  width: 'auto'\n};\nconst mid = {\n  display: 'grid',\n  'grid-template-columns': 'auto 33% auto'\n};\nconst player = {\n  position: 'relative',\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '40%'\n};\nconst playerx = {\n  position: 'relative',\n  width: 'auto',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '40%'\n};\nconst stack = {\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split('-');\n      let left = document.getElementsByClassName('tablecard')[0].offsetLeft;\n      let top = document.getElementsByClassName('tablecard')[0].offsetTop;\n      await e.target.animate([{\n        top: e.target.offsetTop + 'px',\n        left: e.target.offsetLeft + 'px'\n      }, {\n        transform: 'rotate(0) translate3D(-50%, -50%, 0'\n      }, {\n        top: top + 'px',\n        left: left + 'px'\n      }, {\n        transform: 'rotate(360deg) translate3D(-50%, -50%, 0)'\n      }], {\n        duration: 3000,\n        iterations: 1\n      });\n\n      if (card[0] === 'black') {\n        this.putblackcard(card);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card);\n      } else if (this.state.tablecard.color === 'black') {\n        this.putcard(card);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.putblackcard = card => {\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      }); // if(this.state.playercards.length===0){\n      //     ws.send(JSON.stringify({action:'win',user:this.state.user}));\n      // }\n    };\n\n    this.putcard = card => {\n      if (card[1] === 'R') {\n        ws.send(JSON.stringify({\n          action: 'rplayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === 'S') {\n        ws.send(JSON.stringify({\n          action: 'splayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === '+2') {\n        ws.send(JSON.stringify({\n          action: '2played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else {\n        ws.send(JSON.stringify({\n          action: 'played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      }\n\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      }); // if(document.getElementsByClassName('player')[0].childNodes.length===0){\n      //     ws.send(JSON.stringify({action:'win',user:this.state.user}));\n      // }\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: 'start',\n        user: this.state.user\n      }));\n      e.target.style.display = 'none';\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: 'draw',\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: '',\n      tablecard: {\n        num: '',\n        color: 'back'\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log('open');\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log('startreturn');\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            this.state['op' + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n            this.state['player'] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState();\n\n        if (res.user === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n          this.drawCard(res.addcard);\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: 'rotateZ(180deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, this.state.op1.name ? this.state.op1.name + '(' + this.state.op1.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      className: \"op1card\",\n      style: {\n        background: 'black',\n        height: '75px',\n        width: '50px',\n        marginLeft: '50%'\n      },\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: 'rotateZ(90deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, this.state.op2.name ? this.state.op2.name + '(' + this.state.op2.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      className: \"op2card\",\n      style: {\n        background: 'black',\n        height: '75px',\n        width: '50px',\n        marginLeft: '50%'\n      },\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: '75px',\n        width: '50px'\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: 'deck',\n      style: {\n        height: '75px',\n        width: '50px',\n        background: 'black'\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: 'rotateZ(270deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    }, this.state.op3.name ? this.state.op3.name + '(' + this.state.op3.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      className: \"op3card\",\n      style: {\n        background: 'black',\n        height: '75px',\n        width: '50px',\n        marginLeft: '50%'\n      },\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          position: 'absolute',\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","ws","WebSocket","gamearea","display","height","width","mid","player","position","justifyContent","alignItems","playerx","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","left","document","getElementsByClassName","offsetLeft","top","offsetTop","animate","transform","duration","iterations","putblackcard","state","tablecard","color","num","putcard","nextturn","turn","addcards","user","style","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","playercards","push","setState","drawCard","userInput","prompt","toUpperCase","played","filter","x","splice","indexOf","find","ready","drawCarde","loading","allusers","op1","op2","op3","componentDidMount","props","onopen","onmessage","data","res","parse","cards","d","users","name","op","opnum","border","addcard","render","textAlign","require","background","marginLeft","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\n// import Websocket from 'ws';\n\nconst ws=new WebSocket('ws://localhost:3001/websocket')\n\nconst gamearea={\n    display: 'grid',\n    'grid-template-columns': 'auto' ,\n    height: 'auto',\n    width: 'auto'\n}\nconst mid={\n    display: 'grid',\n    'grid-template-columns': 'auto 33% auto' \n}\nconst player={\n    position: 'relative',\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft':'40%'\n}\nconst playerx={\n    position: 'relative',\n    width: 'auto',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft':'40%'\n}\nconst stack={\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\n\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards:[],\n            loading:true,\n            user:'',\n            tablecard:{num:'',color:'back'},\n            allusers:[],\n            op1:{},\n            op2:{},\n            op3:{},\n            player:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({user:this.props.user})\n\n        ws.onopen=()=>{\n            console.log('open')\n        }\n        ws.onmessage=(data)=>{\n            console.log(data.data);\n            var res=JSON.parse(data.data);\n            if(res.action === \"startreturn\"){\n                console.log('startreturn');\n                this.state.playercards=res.cards;\n                this.state.tablecard=res.tablecard;\n                var x=1;\n                for(var d of res.users){\n                    if(d!==this.state.user){\n                        this.state.allusers.push({name:d,op:'op'+x});\n                        this.state[('op'+x)]={name:d,num:7};\n                        x++;\n                    } else {\n                        this.state.allusers.push({name:d,op:'player'});\n                        this.state['player']={name:d,num:7};\n                    }\n                }\n                console.log(this.state.allusers);\n                console.log(this.state.opnum);\n                this.setState({loading:false});\n                //add border condition on ps\n                if(this.state.op1.name === res.turn){\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op2.name === res.turn){\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op3.name === res.turn){\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.player.name === res.turn){\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                if(res.turn===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if(res.action===\"nextturn\"){\n                let x=1;\n                for(let d of res.op){\n                    if(d.name!==this.state.user){\n                        this.state[('op'+x)]=d;\n                        x++;\n                    } else {\n                        this.state['player']=d;\n                    }\n                }\n                this.setState({tablecard:res.tablecard})\n                //add border conditions on ps\n                if(this.state.op1.name === res.turn){\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op2.name === res.turn){\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op3.name === res.turn){\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.player.name === res.turn){\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                this.nextturn(res.turn,res.addcards);\n            }\n            else if(res.action===\"win\"){\n                let x=1;\n                for(let d of res.op){\n                    if(d.name!==this.state.user){\n                        this.state[('op'+x)]=d;\n                        x++;\n                    } else {\n                        this.state['player']=d;\n                    }\n                }\n                this.setState({tablecard:res.tablecard})\n                this.win(res.user);\n            }\n            else if(res.action===\"retry\"){\n                ws.send(JSON.stringify({action:'start',user:this.state.user}));\n            }\n            else if(res.action===\"drawrep\"){\n                let x=1;\n                for(let d of res.op){\n                    if(d.name!==this.state.user){\n                        this.state[('op'+x)]=d;\n                        x++;\n                    } else {\n                        this.state['player']=d;\n                    }\n                }\n                this.setState();\n                if(res.user===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                    this.drawCard(res.addcard)\n                }\n            }\n        }\n\n    }\n\n    win=(winn)=>{\n        alert(winn+\" wins\")\n    }\n    \n\n    handlePlay=async(e)=>{\n        console.log(e.target);\n        var card=e.target.id.split('-');\n        let left=document.getElementsByClassName('tablecard')[0].offsetLeft;\n        let top=document.getElementsByClassName('tablecard')[0].offsetTop;\n        await e.target.animate([\n            {top:e.target.offsetTop+'px',left:e.target.offsetLeft+'px'},\n            { transform: 'rotate(0) translate3D(-50%, -50%, 0' },\n            {top:top+'px',left:left+'px'},\n            { transform: 'rotate(360deg) translate3D(-50%, -50%, 0)' } \n        ],{\n            duration:3000,\n            iterations:1\n        })\n        if(card[0]==='black'){\n            this.putblackcard(card);\n        } else if(card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num){\n            this.putcard(card);\n        } else if(this.state.tablecard.color==='black'){\n            this.putcard(card);\n        }\n        \n    }\n\n    nextturn=(turn,addcards)=>{\n        if(turn===this.state.user){\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if((this.state.tablecard.num===\"+2\" || this.state.tablecard.num===\"+4\")  && addcards.length!==0){\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({action:'d2', user:this.state.user}));\n            }else if((this.state.tablecard.num===\"+2\" || this.state.tablecard.num===\"+4\") && addcards.length===0){\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        this.setState({playercards:this.state.playercards});\n    }\n    drawCard=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        console.log(this.state.playercards);\n        this.setState({playercards:this.state.playercards});\n    }\n\n    putblackcard=(card)=>{\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        } else if(this.state.playercards.filter(x=>x.color===card[0] || x.num === card[1]).length === 0){\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        }\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x=>x.num===card[1] && x.color===card[0])),1);\n        this.setState({playercards:this.state.playercards});\n        // if(this.state.playercards.length===0){\n        //     ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        // }\n    }\n\n    putcard=(card)=>{\n        if(card[1] === 'R'){\n            ws.send(JSON.stringify({action:'rplayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if( card[1]==='S'){\n            ws.send(JSON.stringify({action:'splayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if(card[1] === '+2'){\n            ws.send(JSON.stringify({action:'2played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else {\n            ws.send(JSON.stringify({action:'played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        }\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x=>x.num===card[1] && x.color===card[0])),1);\n        this.setState({playercards:this.state.playercards});\n        // if(document.getElementsByClassName('player')[0].childNodes.length===0){\n        //     ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        // }\n    }\n\n    ready=(e)=>{\n        ws.send(JSON.stringify({action:'start',user:this.state.user}))\n        e.target.style.display='none';\n    }    \n\n    drawCarde=()=>{\n        ws.send(JSON.stringify({action:'draw',played:this.state.user}));\n    }\n\n    render() {\n        return (\n            <div className='gamearea' style={gamearea}>\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1' style={{transform:'rotateZ(180deg)',height:'auto',width:'auto'}}>\n                    <div className='op1p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.op1.name ?this.state.op1.name+'('+this.state.op1.num+')':''}</div>\n                    <div className='whereop1resides' style={player}>\n                        <img src={require(\"./cards/back-.png\")} className='op1card' style={{background:'black',height:'75px',width:'50px',marginLeft:'50%'}} alt='back'></img>\n                    </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='mid' style={mid}>\n                    <div className='op2' style={{transform:'rotateZ(90deg)',height:'auto',width:'auto'}}>\n                    <div className='op2p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.op2.name ?this.state.op2.name+'('+this.state.op2.num+')':''}</div>\n                    <div className='whereop2resides' style={playerx}>\n                        <img src={require(\"./cards/back-.png\")} className='op2card' style={{background:'black',height:'75px',width:'50px',marginLeft:'50%'}} alt='back'></img>\n                        </div>\n                    </div>\n                    <div className='stack' style={stack}>\n                        <div>\n                            <img src={require(\"./cards/\"+this.state.tablecard.color+\"-\"+this.state.tablecard.num+\".png\")} className='tablecard' style={{height:'75px',width:'50px'}} id={this.state.tablecard.color+\"-\"+this.state.tablecard.num} alt={\"cards/\"+this.state.tablecard.color+\"-\"+this.state.tablecard.num+\".png\"}></img>\n                            <img src={require(\"./cards/back-.png\")} alt={'deck'} style={{height:'75px',width:'50px',background:'black'}} onClick={this.drawCarde}></img>\n                        </div>\n                    </div>\n                    <div className='op3' style={{transform:'rotateZ(270deg)',height:'auto',width:'auto'}}>\n                    <div className='op3p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.op3.name ?this.state.op3.name+'('+this.state.op3.num+')':''}</div>\n                    <div className='whereop3resides' style={playerx}>\n                    <img src={require(\"./cards/back-.png\")} className='op3card' style={{background:'black',height:'75px',width:'50px', marginLeft:'50%'}} alt='back'></img>\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='playerp' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.user}</div>\n                    <div className='player' style={player}>\n                        {this.state.playercards.map(data=>{\n                            return (<img src={require(\"./cards/\"+data.color+\"-\"+data.num+\".png\")} style={{position:'absolute' ,height:'75px',width:'50px'}} id={data.color+\"-\"+data.num} alt={\"cards/\"+data.color+\"-\"+data.num+\".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}