{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners';\nimport Opo from './Opo'; // import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket');\nconst gamearea = {\n  display: 'grid',\n  'grid-template-columns': 'auto',\n  height: 'auto',\n  width: 'auto'\n};\nconst mid = {\n  display: 'grid',\n  'grid-template-columns': 'auto 33% auto'\n};\nconst player = {\n  position: 'relative',\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '40%'\n};\nconst playerx = {\n  position: 'relative',\n  width: 'auto',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '40%'\n};\nconst stack = {\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split('-');\n\n      if (card[0] === 'black') {\n        this.putblackcard(card, e);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card, e);\n      } else if (this.state.tablecard.color === 'black') {\n        this.putcard(card, e);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.cardputanimation = async e => {\n      return new Promise(resolve => {\n        var pos = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n        var anim = e.target.animate([{\n          top: pos.top + 'px',\n          left: pos.left + 'px'\n        }], {\n          duration: 1500,\n          iterations: 1,\n          fill: 'forwards'\n        });\n        anim.resume();\n        resolve(anim.finished);\n      });\n    };\n\n    this.putblackcard = async (card, e) => {\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n\n      await this.cardputanimation(e).then(() => {\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n        this.setState({\n          playercards: this.state.playercards\n        });\n      });\n    };\n\n    this.putcard = async (card, e) => {\n      if (card[1] === 'R') {\n        ws.send(JSON.stringify({\n          action: 'rplayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === 'S') {\n        ws.send(JSON.stringify({\n          action: 'splayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === '+2') {\n        ws.send(JSON.stringify({\n          action: '2played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else {\n        ws.send(JSON.stringify({\n          action: 'played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      }\n\n      await this.cardputanimation(e).then(() => {\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n        this.setState({\n          playercards: this.state.playercards\n        });\n      });\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: 'start',\n        user: this.state.user\n      }));\n      e.target.style.display = 'none';\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: 'draw',\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: '',\n      tablecard: {\n        num: '',\n        color: 'back'\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log('open');\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log('startreturn');\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            this.state['op' + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n            this.state['player'] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState();\n\n        if (res.user === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n          this.drawCard(res.addcard);\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: 'rotateZ(180deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 25\n      }\n    }, this.state.op1.name ? this.state.op1.name + '(' + this.state.op1.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    }, this.state.op1.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op1.num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 51\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: 'rotateZ(90deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, this.state.op2.name ? this.state.op2.name + '(' + this.state.op2.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, this.state.op2.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op2.num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 51\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: '75px',\n        width: '50px'\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: 'deck',\n      style: {\n        height: '75px',\n        width: '50px',\n        background: 'black'\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: 'rotateZ(270deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, this.state.op3.name ? this.state.op3.name + '(' + this.state.op3.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, this.state.op3.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op3.num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 51\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Opo","ws","WebSocket","gamearea","display","height","width","mid","player","position","justifyContent","alignItems","playerx","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","putblackcard","state","tablecard","color","num","putcard","nextturn","turn","addcards","user","document","getElementsByClassName","style","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","playercards","push","setState","drawCard","cardputanimation","Promise","resolve","pos","getBoundingClientRect","anim","animate","top","left","duration","iterations","fill","resume","finished","userInput","prompt","toUpperCase","played","filter","x","then","splice","indexOf","find","ready","drawCarde","loading","allusers","op1","op2","op3","componentDidMount","props","onopen","onmessage","data","res","parse","cards","d","users","name","op","opnum","border","addcard","render","transform","textAlign","require","background","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\nimport Opo from './Opo'\n// import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket')\n\nconst gamearea = {\n    display: 'grid',\n    'grid-template-columns': 'auto',\n    height: 'auto',\n    width: 'auto'\n}\nconst mid = {\n    display: 'grid',\n    'grid-template-columns': 'auto 33% auto'\n}\nconst player = {\n    position: 'relative',\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft': '40%'\n}\nconst playerx = {\n    position: 'relative',\n    width: 'auto',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft': '40%'\n}\nconst stack = {\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\n\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards: [],\n            loading: true,\n            user: '',\n            tablecard: { num: '', color: 'back' },\n            allusers: [],\n            op1: {},\n            op2: {},\n            op3: {},\n            player: {}\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ user: this.props.user })\n\n        ws.onopen = () => {\n            console.log('open')\n        }\n        ws.onmessage = (data) => {\n            console.log(data.data);\n            var res = JSON.parse(data.data);\n            if (res.action === \"startreturn\") {\n                console.log('startreturn');\n                this.state.playercards = res.cards;\n                this.state.tablecard = res.tablecard;\n                var x = 1;\n                for (var d of res.users) {\n                    if (d !== this.state.user) {\n                        this.state.allusers.push({ name: d, op: 'op' + x });\n                        this.state[('op' + x)] = { name: d, num: 7 };\n                        x++;\n                    } else {\n                        this.state.allusers.push({ name: d, op: 'player' });\n                        this.state['player'] = { name: d, num: 7 };\n                    }\n                }\n                console.log(this.state.allusers);\n                console.log(this.state.opnum);\n                this.setState({ loading: false });\n                //add border condition on ps\n                if (this.state.op1.name === res.turn) {\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op2.name === res.turn) {\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op3.name === res.turn) {\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.player.name === res.turn) {\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                if (res.turn === this.state.user) {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if (res.action === \"nextturn\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[('op' + x)] = d;\n                        x++;\n                    } else {\n                        this.state['player'] = d;\n                    }\n                }\n                this.setState({ tablecard: res.tablecard })\n                //add border conditions on ps\n                if (this.state.op1.name === res.turn) {\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op2.name === res.turn) {\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op3.name === res.turn) {\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.player.name === res.turn) {\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                this.nextturn(res.turn, res.addcards);\n            }\n            else if (res.action === \"win\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[('op' + x)] = d;\n                        x++;\n                    } else {\n                        this.state['player'] = d;\n                    }\n                }\n                this.setState({ tablecard: res.tablecard })\n                this.win(res.user);\n            }\n            else if (res.action === \"retry\") {\n                ws.send(JSON.stringify({ action: 'start', user: this.state.user }));\n            }\n            else if (res.action === \"drawrep\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[('op' + x)] = d;\n                        x++;\n                    } else {\n                        this.state['player'] = d;\n                    }\n                }\n                this.setState();\n                if (res.user === this.state.user) {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                    this.drawCard(res.addcard)\n                }\n            }\n        }\n\n    }\n\n    win = (winn) => {\n        alert(winn + \" wins\")\n    }\n\n\n    handlePlay = async (e) => {\n        console.log(e.target);\n        var card = e.target.id.split('-');\n        if (card[0] === 'black') {\n            this.putblackcard(card, e);\n        } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n            this.putcard(card, e);\n        } else if (this.state.tablecard.color === 'black') {\n            this.putcard(card, e);\n        }\n\n    }\n\n    nextturn = (turn, addcards) => {\n        if (turn === this.state.user) {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({ action: 'd2', user: this.state.user }));\n            } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards = (addcards) => {\n        this.state.playercards.push(...addcards);\n        this.setState({ playercards: this.state.playercards });\n    }\n    drawCard = (addcards) => {\n        this.state.playercards.push(...addcards);\n        console.log(this.state.playercards);\n        this.setState({ playercards: this.state.playercards });\n    }\n\n    cardputanimation = async (e) => {\n        return new Promise((resolve) => {\n            var pos = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n            var anim = e.target.animate(\n                [\n                    { top: pos.top + 'px', left: pos.left + 'px' }\n                ], {\n                duration: 1500,\n                iterations: 1,\n                fill: 'forwards'\n            }\n            )\n            anim.resume()\n            resolve(anim.finished);\n        })\n    }\n\n    putblackcard = async (card, e) => {\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                    ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"red\" }, played: this.state.user }))\n                    break;\n                case \"Y\":\n                    ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"yellow\" }, played: this.state.user }))\n                    break;\n                case \"G\":\n                    ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"green\" }, played: this.state.user }))\n                    break;\n                case \"B\":\n                    ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"blue\" }, played: this.state.user }))\n                    break;\n                default: console.log('nothing');\n            }\n        } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                    ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"red\" }, played: this.state.user }))\n                    break;\n                case \"Y\":\n                    ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"yellow\" }, played: this.state.user }))\n                    break;\n                case \"G\":\n                    ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"green\" }, played: this.state.user }))\n                    break;\n                case \"B\":\n                    ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"blue\" }, played: this.state.user }))\n                    break;\n                default: console.log('nothing');\n            }\n        }\n        await this.cardputanimation(e).then(() => {\n            this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n            this.setState({ playercards: this.state.playercards });\n        })\n\n    }\n\n    putcard = async (card, e) => {\n        if (card[1] === 'R') {\n            ws.send(JSON.stringify({ action: 'rplayed', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n        } else if (card[1] === 'S') {\n            ws.send(JSON.stringify({ action: 'splayed', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n        } else if (card[1] === '+2') {\n            ws.send(JSON.stringify({ action: '2played', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n        } else {\n            ws.send(JSON.stringify({ action: 'played', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n        }\n        await this.cardputanimation(e).then(() => {\n            this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n            this.setState({ playercards: this.state.playercards });\n        })\n    }\n\n    ready = (e) => {\n        ws.send(JSON.stringify({ action: 'start', user: this.state.user }))\n        e.target.style.display = 'none';\n    }\n\n    drawCarde = () => {\n        ws.send(JSON.stringify({ action: 'draw', played: this.state.user }));\n    }\n\n    render() {\n        return (\n            <div className='gamearea' style={gamearea}>\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1' style={{ transform: 'rotateZ(180deg)', height: 'auto', width: 'auto' }}>\n                        <div className='op1p' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.op1.name ? this.state.op1.name + '(' + this.state.op1.num + ')' : ''}</div>\n                        <div className='whereop1resides' style={player}>\n                            {this.state.op1.num ? <Opo cardnum={this.state.op1.num}></Opo> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='mid' style={mid}>\n                    <div className='op2' style={{ transform: 'rotateZ(90deg)', height: 'auto', width: 'auto' }}>\n                        <div className='op2p' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.op2.name ? this.state.op2.name + '(' + this.state.op2.num + ')' : ''}</div>\n                        <div className='whereop2resides' style={playerx}>\n                            {this.state.op2.num ? <Opo cardnum={this.state.op2.num}></Opo> : null}\n                        </div>\n                    </div>\n                    <div className='stack' style={stack}>\n                        <div>\n                            <img src={require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\")} className='tablecard' style={{ height: '75px', width: '50px' }} id={this.state.tablecard.color + \"-\" + this.state.tablecard.num} alt={\"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"}></img>\n                            <img src={require(\"./cards/back-.png\")} alt={'deck'} style={{ height: '75px', width: '50px', background: 'black' }} onClick={this.drawCarde}></img>\n                        </div>\n                    </div>\n                    <div className='op3' style={{ transform: 'rotateZ(270deg)', height: 'auto', width: 'auto' }}>\n                        <div className='op3p' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.op3.name ? this.state.op3.name + '(' + this.state.op3.num + ')' : ''}</div>\n                        <div className='whereop3resides' style={playerx}>\n                            {this.state.op3.num ? <Opo cardnum={this.state.op3.num}></Opo> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='playerp' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.user}</div>\n                    <div className='player' style={player}>\n                        {this.state.playercards.map(data => {\n                            return (<img src={require(\"./cards/\" + data.color + \"-\" + data.num + \".png\")} style={{ height: '75px', width: '50px' }} id={data.color + \"-\" + data.num} alt={\"cards/\" + data.color + \"-\" + data.num + \".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}