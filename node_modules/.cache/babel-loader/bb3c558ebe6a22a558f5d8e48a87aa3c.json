{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners';\nimport Opo from './Opo';\nimport { TimelineLite } from 'gsap'; // import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket');\nconst gamearea = {\n  display: 'grid',\n  'grid-template-columns': 'auto',\n  height: 'auto',\n  width: 'auto'\n};\nconst mid = {\n  display: 'grid',\n  'grid-template-columns': 'auto 33% auto'\n};\nconst player = {\n  position: 'relative',\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst playerx = {\n  position: 'relative',\n  width: 'auto',\n  height: 'auto',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '50%'\n};\nconst stack = {\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split('-');\n      var temp = document.createElement('img');\n      temp.id = e.target.id;\n      temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName('player')[0].appendChild(temp);\n      temp.style.position = 'absolute';\n      temp.className = 'tempplayer';\n      temp.style.opacity = 0;\n      this.timeline.to(temp, 0.25, {\n        x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n        y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n      }).to(temp, 0.1, {\n        opacity: 1\n      });\n\n      if (card[0] === 'black') {\n        this.putblackcard(card, e);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card, e);\n      } else if (this.state.tablecard.color === 'black') {\n        this.putcard(card, e);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.putblackcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName('tempplayer')[0];\n      var box = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: 'wplayed',\n                  tablecard: {\n                    num: \"W\",\n                    color: \"red\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: 'wplayed',\n                  tablecard: {\n                    num: \"W\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: 'wplayed',\n                  tablecard: {\n                    num: \"W\",\n                    color: \"green\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: 'wplayed',\n                  tablecard: {\n                    num: \"W\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: '4played',\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"red\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: '4played',\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: '4played',\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"green\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 1, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: '4played',\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n    };\n\n    this.putcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName('tempplayer')[0];\n      var box = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n      this.timeline.to(temp, 1, {\n        x: box.x - temp.getBoundingClientRect().x + 50,\n        y: box.y - temp.getBoundingClientRect().y,\n        onComplete: () => {\n          if (card[1] === 'R') {\n            ws.send(JSON.stringify({\n              action: 'rplayed',\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else if (card[1] === 'S') {\n            ws.send(JSON.stringify({\n              action: 'splayed',\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else if (card[1] === '+2') {\n            ws.send(JSON.stringify({\n              action: '2played',\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else {\n            ws.send(JSON.stringify({\n              action: 'played',\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          }\n\n          temp.parentNode.removeChild(temp);\n        }\n      }).play();\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: 'start',\n        user: this.state.user\n      }));\n      e.target.style.display = 'none';\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: 'draw',\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: '',\n      tablecard: {\n        num: '',\n        color: 'back'\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n    this.timeline = new TimelineLite({\n      paused: true\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log('open');\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log('startreturn');\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            this.state['op' + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n            this.state['player'] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        var e = {\n          target: document.getElementsByClassName('tablecard')[0]\n        };\n        var dest = document.getElementsByClassName('player')[0].lastChild;\n        var temp = document.createElement('img');\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName('stack')[0].appendChild(temp);\n        temp.style.position = 'absolute';\n        temp.className = 'tempplayer';\n        temp.style.opacity = 0;\n        this.timeline.to(temp, 0.1, {\n          x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n        }).to(temp, 0.5, {\n          opacity: 1,\n          ease: 'Power2.easeIn'\n        }).to(temp, 0.25, {\n          rotateY: 90,\n          onComplete: () => {\n            console.log(res.addcard.color + \"-\" + res.addcard.num);\n            temp.src = require(\"./cards/\" + res.addcard.color + \"-\" + res.addcard.num + \".png\");\n          }\n        }).to(temp, 0.25, {\n          rotateY: 0\n        }).to(temp, 0.5, {\n          x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n          y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          onComplete: () => {\n            let x = 1;\n\n            for (let d of res.op) {\n              if (d.name !== this.state.user) {\n                this.state['op' + x] = d;\n                x++;\n              } else {\n                this.state['player'] = d;\n              }\n            }\n\n            this.setState();\n\n            if (res.user === this.state.user) {\n              document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n              this.drawCard(res.addcard);\n            }\n\n            temp.parentNode.removeChild(temp);\n          }\n        }).play();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: 'rotateZ(180deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }, this.state.op1.name ? this.state.op1.name : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, this.state.op1.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op1.num,\n      name: this.state.op1.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 51\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: 'rotateZ(90deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, this.state.op2.name ? this.state.op2.name : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 25\n      }\n    }, this.state.op2.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op2.num,\n      name: this.state.op2.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 51\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: '75px',\n        width: '50px'\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: 'deck',\n      style: {\n        height: '75px',\n        width: '50px',\n        background: 'black'\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: 'rotateZ(270deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }, this.state.op3.name ? this.state.op3.name : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }\n    }, this.state.op3.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op3.num,\n      name: this.state.op3.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 51\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Opo","TimelineLite","ws","WebSocket","gamearea","display","height","width","mid","player","position","justifyContent","alignItems","playerx","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","temp","document","createElement","src","require","style","getElementsByClassName","appendChild","className","opacity","timeline","to","x","getBoundingClientRect","y","putblackcard","state","tablecard","color","num","putcard","nextturn","turn","addcards","user","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","playercards","push","setState","drawCard","splice","indexOf","find","box","userInput","prompt","toUpperCase","onComplete","played","parentNode","removeChild","play","filter","ready","drawCarde","loading","allusers","op1","op2","op3","paused","componentDidMount","props","onopen","onmessage","data","res","parse","cards","d","users","name","op","opnum","border","dest","lastChild","ease","rotateY","addcard","render","transform","textAlign","background","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\nimport Opo from './Opo'\nimport { TimelineLite } from 'gsap'\n// import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket')\n\nconst gamearea = {\n    display: 'grid',\n    'grid-template-columns': 'auto',\n    height: 'auto',\n    width: 'auto'\n}\nconst mid = {\n    display: 'grid',\n    'grid-template-columns': 'auto 33% auto'\n}\nconst player = {\n    position: 'relative',\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n}\nconst playerx = {\n    position: 'relative',\n    width: 'auto',\n    height: 'auto',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft': '50%'\n}\nconst stack = {\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\n\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards: [],\n            loading: true,\n            user: '',\n            tablecard: { num: '', color: 'back' },\n            allusers: [],\n            op1: {},\n            op2: {},\n            op3: {},\n            player: {}\n        }\n        this.timeline = new TimelineLite({ paused: true });\n    }\n\n    componentDidMount() {\n        this.setState({ user: this.props.user })\n\n        ws.onopen = () => {\n            console.log('open')\n        }\n        ws.onmessage = (data) => {\n            console.log(data.data);\n            var res = JSON.parse(data.data);\n            if (res.action === \"startreturn\") {\n                console.log('startreturn');\n                this.state.playercards = res.cards;\n                this.state.tablecard = res.tablecard;\n                var x = 1;\n                for (var d of res.users) {\n                    if (d !== this.state.user) {\n                        this.state.allusers.push({ name: d, op: 'op' + x });\n                        this.state[('op' + x)] = { name: d, num: 7 };\n                        x++;\n                    } else {\n                        this.state.allusers.push({ name: d, op: 'player' });\n                        this.state['player'] = { name: d, num: 7 };\n                    }\n                }\n                console.log(this.state.allusers);\n                console.log(this.state.opnum);\n                this.setState({ loading: false });\n                //add border condition on ps\n                if (this.state.op1.name === res.turn) {\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op2.name === res.turn) {\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op3.name === res.turn) {\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.player.name === res.turn) {\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                if (res.turn === this.state.user) {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if (res.action === \"nextturn\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[('op' + x)] = d;\n                        x++;\n                    } else {\n                        this.state['player'] = d;\n                    }\n                }\n                this.setState({ tablecard: res.tablecard })\n                //add border conditions on ps\n                if (this.state.op1.name === res.turn) {\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op2.name === res.turn) {\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.op3.name === res.turn) {\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if (this.state.player.name === res.turn) {\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                this.nextturn(res.turn, res.addcards);\n            }\n            else if (res.action === \"win\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[('op' + x)] = d;\n                        x++;\n                    } else {\n                        this.state['player'] = d;\n                    }\n                }\n                this.setState({ tablecard: res.tablecard })\n                this.win(res.user);\n            }\n            else if (res.action === \"retry\") {\n                ws.send(JSON.stringify({ action: 'start', user: this.state.user }));\n            }\n            else if (res.action === \"drawrep\") {\n                var e = { target: document.getElementsByClassName('tablecard')[0] };\n                var dest = document.getElementsByClassName('player')[0].lastChild\n                var temp = document.createElement('img');\n                temp.src = require(\"./cards/back-.png\");\n                temp.style.height = e.target.style.height;\n                temp.style.width = e.target.style.width;\n                document.getElementsByClassName('stack')[0].appendChild(temp);\n                temp.style.position = 'absolute'\n                temp.className = 'tempplayer';\n                temp.style.opacity = 0;\n                this.timeline.to(temp, 0.1, { x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50, y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y }).to(temp, 0.5, { opacity: 1, ease: 'Power2.easeIn' }).to(temp,0.25,{rotateY:90,onComplete:()=>{\n                    console.log(res.addcard.color + \"-\" + res.addcard.num);\n                    temp.src=require(\"./cards/\" + res.addcard.color + \"-\" + res.addcard.num + \".png\");\n                }}).to(temp,0.25,{rotateY:0}).to(temp, 0.5, {\n                    x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x, y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y, onComplete: () => {\n                        let x = 1;\n                        for (let d of res.op) {\n                            if (d.name !== this.state.user) {\n                                this.state[('op' + x)] = d;\n                                x++;\n                            } else {\n                                this.state['player'] = d;\n                            }\n                        }\n                        this.setState();\n                        if (res.user === this.state.user) {\n                            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                            this.drawCard(res.addcard)\n                        }\n                        temp.parentNode.removeChild(temp);\n                    }\n                }).play();\n            }\n        }\n\n    }\n\n    win = (winn) => {\n        alert(winn + \" wins\")\n    }\n\n\n    handlePlay = async (e) => {\n        console.log(e.target);\n        var card = e.target.id.split('-');\n        var temp = document.createElement('img');\n        temp.id = e.target.id\n        temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName('player')[0].appendChild(temp);\n        temp.style.position = 'absolute'\n        temp.className = 'tempplayer';\n        temp.style.opacity = 0;\n        this.timeline.to(temp, 0.25, { x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50, y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y }).to(temp, 0.1, { opacity: 1 });\n        if (card[0] === 'black') {\n            this.putblackcard(card, e);\n        } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n            this.putcard(card, e);\n        } else if (this.state.tablecard.color === 'black') {\n            this.putcard(card, e);\n        }\n\n    }\n\n    nextturn = (turn, addcards) => {\n        if (turn === this.state.user) {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({ action: 'd2', user: this.state.user }));\n            } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards = (addcards) => {\n        this.state.playercards.push(...addcards);\n        this.setState({ playercards: this.state.playercards });\n    }\n    drawCard = (addcards) => {\n        this.state.playercards.push(...addcards);\n        console.log(this.state.playercards);\n        this.setState({ playercards: this.state.playercards });\n    }\n\n    putblackcard = async (card, e) => {\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n        this.setState({ playercards: this.state.playercards });\n        let temp = document.getElementsByClassName('tempplayer')[0];\n        var box = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"red\" }, played: this.state.user }));\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                case \"Y\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"yellow\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                case \"G\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"green\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                case \"B\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: 'wplayed', tablecard: { num: \"W\", color: \"blue\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                default: console.log('nothing');\n            }\n        } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"red\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                case \"Y\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"yellow\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                case \"G\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"green\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                case \"B\":\n                    this.timeline.to(temp, 1, {\n                        x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                            ws.send(JSON.stringify({ action: '4played', tablecard: { num: \"+4\", color: \"blue\" }, played: this.state.user }))\n                            temp.parentNode.removeChild(temp);\n                        }\n                    }).play();\n                    break;\n                default: console.log('nothing');\n            }\n        }\n\n    }\n\n    putcard = async (card, e) => {\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n        this.setState({ playercards: this.state.playercards });\n        let temp = document.getElementsByClassName('tempplayer')[0];\n        var box = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n        this.timeline.to(temp, 1, {\n            x: box.x - temp.getBoundingClientRect().x + 50, y: box.y - temp.getBoundingClientRect().y, onComplete: () => {\n                if (card[1] === 'R') {\n                    ws.send(JSON.stringify({ action: 'rplayed', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n                } else if (card[1] === 'S') {\n                    ws.send(JSON.stringify({ action: 'splayed', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n                } else if (card[1] === '+2') {\n                    ws.send(JSON.stringify({ action: '2played', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n                } else {\n                    ws.send(JSON.stringify({ action: 'played', tablecard: { num: card[1], color: card[0] }, played: this.state.user }));\n                }\n                temp.parentNode.removeChild(temp);\n            }\n        }).play();\n\n    }\n\n    ready = (e) => {\n        ws.send(JSON.stringify({ action: 'start', user: this.state.user }))\n        e.target.style.display = 'none';\n    }\n\n    drawCarde = () => {\n        ws.send(JSON.stringify({ action: 'draw', played: this.state.user }));\n    }\n\n    render() {\n        return (\n            <div className='gamearea' style={gamearea}>\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1' style={{ transform: 'rotateZ(180deg)', height: 'auto', width: 'auto' }}>\n                        <div className='op1p' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.op1.name ? this.state.op1.name : ''}</div>\n                        <div className='whereop1resides' style={player}>\n                            {this.state.op1.num ? <Opo cardnum={this.state.op1.num} name={this.state.op1.name}></Opo> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='mid' style={mid}>\n                    <div className='op2' style={{ transform: 'rotateZ(90deg)', height: 'auto', width: 'auto' }}>\n                        <div className='op2p' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.op2.name ? this.state.op2.name : ''}</div>\n                        <div className='whereop2resides' style={playerx}>\n                            {this.state.op2.num ? <Opo cardnum={this.state.op2.num} name={this.state.op2.name}></Opo> : null}\n                        </div>\n                    </div>\n                    <div className='stack' style={stack}>\n                        <div>\n                            <img src={require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\")} className='tablecard' style={{ height: '75px', width: '50px' }} id={this.state.tablecard.color + \"-\" + this.state.tablecard.num} alt={\"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"}></img>\n                            <img src={require(\"./cards/back-.png\")} alt={'deck'} style={{ height: '75px', width: '50px', background: 'black' }} onClick={this.drawCarde}></img>\n                        </div>\n                    </div>\n                    <div className='op3' style={{ transform: 'rotateZ(270deg)', height: 'auto', width: 'auto' }}>\n                        <div className='op3p' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.op3.name ? this.state.op3.name : ''}</div>\n                        <div className='whereop3resides' style={playerx}>\n                            {this.state.op3.num ? <Opo cardnum={this.state.op3.num} name={this.state.op3.name}></Opo> : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='playerp' style={{ width: '25%', 'marginLeft': '40%', textAlign: 'center' }}>{this.state.user}</div>\n                    <div className='player' style={player}>\n                        {this.state.playercards.map(data => {\n                            return (<img src={require(\"./cards/\" + data.color + \"-\" + data.num + \".png\")} style={{ height: '75px', width: '50px' }} id={data.color + \"-\" + data.num} alt={\"cards/\" + data.color + \"-\" + data.num + \".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}