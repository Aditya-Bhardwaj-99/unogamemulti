{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/*\n    logout?\n*/\nimport React, { Component } from \"react\";\nimport \"./Game.css\";\nimport { PacmanLoader } from \"react-spinners\";\nimport Opo from \"./Opo\";\nimport { TimelineLite } from \"gsap\"; // import Websocket from 'ws';\n\nconst ws = new WebSocket(\"ws://localhost:3001/websocket\");\nconst gamearea = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto\",\n  height: \"auto\",\n  width: \"auto\"\n};\nconst mid = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto 33% auto\"\n};\nconst player = {\n  position: \"relative\",\n  width: \"50%\",\n  height: \"auto\",\n  \"margin-left\": \"25%\",\n  \"margin-right\": \"25%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst playerx = {\n  position: \"relative\",\n  width: \"auto\",\n  height: \"auto\",\n  \"margin-right\": \"25%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginLeft: \"50%\"\n};\nconst stack = {\n  width: \"50%\",\n  height: \"auto\",\n  \"margin-left\": \"25%\",\n  \"margin-right\": \"25%\"\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split(\"-\");\n      var temp = document.createElement(\"img\");\n      temp.id = e.target.id;\n      temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName(\"player\")[0].appendChild(temp);\n      temp.style.position = \"absolute\";\n      temp.className = \"tempplayer\";\n      temp.style.opacity = 0;\n      this.timeline.to(temp, 0.01, {\n        x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n        y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n      }).to(temp, 0.01, {\n        opacity: 1\n      });\n\n      if (card[0] === \"black\") {\n        this.putblackcard(card, e);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card, e);\n      } else if (this.state.tablecard.color === \"black\") {\n        this.putcard(card, e);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: \"d2\",\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      let e = {\n        target: document.getElementsByClassName(\"tablecard\")[0]\n      };\n      let dest = document.getElementsByClassName(\"player\")[0].lastChild;\n      let temp = document.createElement(\"img\");\n      temp.src = require(\"./cards/back-.png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n      temp.style.position = \"absolute\";\n      temp.className = \"tempplayer\";\n      temp.style.opacity = 0;\n\n      for (let data of addcards) {\n        ws.send(JSON.stringify({\n          action: \"drawanim\",\n          number: addcards.length,\n          user: this.state.user\n        }));\n        this.timeline.to(temp, 0.01, {\n          x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n        }).to(temp, 0.25, {\n          opacity: 1,\n          ease: \"Power2.easeIn\"\n        }).to(temp, 0.25, {\n          rotateY: 90,\n          onComplete: () => {\n            temp.src = require(\"./cards/\" + data.color + \"-\" + data.num + \".png\");\n          }\n        }).to(temp, 0.25, {\n          rotateY: 0\n        }).to(temp, 0.5, {\n          x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          onComplete: () => {\n            this.state.playercards.push(addcards);\n            temp.parentNode.removeChild(temp);\n          }\n        }).play();\n        this.setState({\n          playercards: this.state.playercards\n        });\n      }\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.putblackcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName(\"tempplayer\")[0];\n      var box = document.getElementsByClassName(\"tablecard\")[0].getBoundingClientRect();\n\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"red\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"green\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log(\"nothing\");\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"red\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"green\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log(\"nothing\");\n        }\n      }\n    };\n\n    this.putcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName(\"tempplayer\")[0];\n      var box = document.getElementsByClassName(\"tablecard\")[0].getBoundingClientRect();\n      this.timeline.to(temp, 0.5, {\n        x: box.x - temp.getBoundingClientRect().x + 50,\n        y: box.y - temp.getBoundingClientRect().y,\n        onComplete: () => {\n          if (card[1] === \"R\") {\n            ws.send(JSON.stringify({\n              action: \"rplayed\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else if (card[1] === \"S\") {\n            ws.send(JSON.stringify({\n              action: \"splayed\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else if (card[1] === \"+2\") {\n            ws.send(JSON.stringify({\n              action: \"2played\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else {\n            ws.send(JSON.stringify({\n              action: \"played\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          }\n\n          temp.parentNode.removeChild(temp);\n        }\n      }).play();\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: \"start\",\n        user: this.state.user\n      }));\n      e.target.style.display = \"none\";\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: \"draw\",\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: \"\",\n      tablecard: {\n        num: \"\",\n        color: \"back\"\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n    this.timeline = new TimelineLite({\n      paused: true\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log(\"open\");\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log(\"startreturn\");\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: \"op\" + x\n            });\n            this.state[\"op\" + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: \"player\"\n            });\n            this.state[\"player\"] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n        } else {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: \"start\",\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        var e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        var dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        var temp = document.createElement(\"img\");\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState();\n\n        if (res.user === this.state.user) {\n          temp.src = require(\"./cards/back-.png\");\n          temp.style.height = e.target.style.height;\n          temp.style.width = e.target.style.width;\n          document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n          temp.style.position = \"absolute\";\n          temp.className = \"tempplayer\";\n          temp.style.opacity = 0;\n          ws.send(JSON.stringify({\n            action: \"drawanim\",\n            number: res.addcard.length,\n            user: this.state.user\n          }));\n          this.timeline.to(temp, 0.01, {\n            x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n          }).to(temp, 0.25, {\n            opacity: 1,\n            ease: \"Power2.easeIn\"\n          }).to(temp, 0.25, {\n            rotateY: 90,\n            onComplete: () => {\n              console.log(res.addcard[0].color + \"-\" + res.addcard[0].num);\n              temp.src = require(\"./cards/\" + res.addcard[0].color + \"-\" + res.addcard[0].num + \".png\");\n            }\n          }).to(temp, 0.25, {\n            rotateY: 0\n          }).to(temp, 0.5, {\n            x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            onComplete: () => {\n              document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n              this.drawCard(res.addcard);\n              temp.parentNode.removeChild(temp);\n            }\n          }).play();\n        }\n      } else if (res.action === \"drawanimresp\") {\n        let num;\n\n        if (this.state.op1.name === res.user) {\n          num = this.state.op1.name + (parseInt(this.state.op1.num) - 2);\n        } else if (this.state.op2.name === res.user) {\n          num = this.state.op2.name + (parseInt(this.state.op2.num) - 2);\n        } else if (this.state.op3.name === res.user) {\n          num = this.state.op3.name + (parseInt(this.state.op3.num) - 2);\n        } else {\n          return;\n        }\n\n        console.log(num);\n        let dest = document.getElementById(num);\n        let temp = document.createElement(\"img\");\n        let e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n\n        for (let i = 0; i < res.number; i++) {\n          this.timeline.to(temp, 0.01, {\n            x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n          }).to(temp, 0.25, {\n            opacity: 1,\n            ease: \"Power2.easeIn\",\n            background: \"black\"\n          }).to(temp, 0.5, {\n            x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            onComplete: () => {\n              temp.parentNode.removeChild(temp);\n            }\n          }).play();\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: \"rotateZ(180deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 25\n      }\n    }, this.state.op1.name ? this.state.op1.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 25\n      }\n    }, this.state.op1.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op1.num,\n      name: this.state.op1.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 33\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: \"rotateZ(90deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 25\n      }\n    }, this.state.op2.name ? this.state.op2.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 25\n      }\n    }, this.state.op2.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op2.num,\n      name: this.state.op2.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 33\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: \"75px\",\n        width: \"50px\"\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: \"deck\",\n      style: {\n        height: \"75px\",\n        width: \"50px\",\n        background: \"black\"\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: \"rotateZ(270deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 25\n      }\n    }, this.state.op3.name ? this.state.op3.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 25\n      }\n    }, this.state.op3.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op3.num,\n      name: this.state.op3.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 33\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 21\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: \"75px\",\n          width: \"50px\"\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 33\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Opo","TimelineLite","ws","WebSocket","gamearea","display","height","width","mid","player","position","justifyContent","alignItems","playerx","marginLeft","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","temp","document","createElement","src","require","style","getElementsByClassName","appendChild","className","opacity","timeline","to","x","getBoundingClientRect","y","putblackcard","state","tablecard","color","num","putcard","nextturn","turn","addcards","user","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","dest","lastChild","data","number","ease","rotateY","onComplete","playercards","push","parentNode","removeChild","play","setState","drawCard","splice","indexOf","find","box","userInput","prompt","toUpperCase","played","filter","ready","drawCarde","loading","allusers","op1","op2","op3","paused","componentDidMount","props","onopen","onmessage","res","parse","cards","d","users","name","op","opnum","border","addcard","parseInt","getElementById","i","background","render","transform","textAlign","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/*\n    logout?\n*/\nimport React, { Component } from \"react\";\nimport \"./Game.css\";\nimport { PacmanLoader } from \"react-spinners\";\nimport Opo from \"./Opo\";\nimport { TimelineLite } from \"gsap\";\n// import Websocket from 'ws';\n\nconst ws = new WebSocket(\"ws://localhost:3001/websocket\");\n\nconst gamearea = {\n    display: \"grid\",\n    \"grid-template-columns\": \"auto\",\n    height: \"auto\",\n    width: \"auto\",\n};\nconst mid = {\n    display: \"grid\",\n    \"grid-template-columns\": \"auto 33% auto\",\n};\nconst player = {\n    position: \"relative\",\n    width: \"50%\",\n    height: \"auto\",\n    \"margin-left\": \"25%\",\n    \"margin-right\": \"25%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n};\nconst playerx = {\n    position: \"relative\",\n    width: \"auto\",\n    height: \"auto\",\n    \"margin-right\": \"25%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"50%\",\n};\nconst stack = {\n    width: \"50%\",\n    height: \"auto\",\n    \"margin-left\": \"25%\",\n    \"margin-right\": \"25%\",\n};\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards: [],\n            loading: true,\n            user: \"\",\n            tablecard: { num: \"\", color: \"back\" },\n            allusers: [],\n            op1: {},\n            op2: {},\n            op3: {},\n            player: {},\n        };\n        this.timeline = new TimelineLite({ paused: true });\n    }\n\n    componentDidMount() {\n        this.setState({ user: this.props.user });\n\n        ws.onopen = () => {\n            console.log(\"open\");\n        };\n        ws.onmessage = (data) => {\n            console.log(data.data);\n            var res = JSON.parse(data.data);\n            if (res.action === \"startreturn\") {\n                console.log(\"startreturn\");\n                this.state.playercards = res.cards;\n                this.state.tablecard = res.tablecard;\n                var x = 1;\n                for (var d of res.users) {\n                    if (d !== this.state.user) {\n                        this.state.allusers.push({ name: d, op: \"op\" + x });\n                        this.state[\"op\" + x] = { name: d, num: 7 };\n                        x++;\n                    } else {\n                        this.state.allusers.push({ name: d, op: \"player\" });\n                        this.state[\"player\"] = { name: d, num: 7 };\n                    }\n                }\n                console.log(this.state.allusers);\n                console.log(this.state.opnum);\n                this.setState({ loading: false });\n                //add border condition on ps\n                if (this.state.op1.name === res.turn) {\n                    document.getElementsByClassName(\"op1p\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n                } else if (this.state.op2.name === res.turn) {\n                    document.getElementsByClassName(\"op2p\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n                } else if (this.state.op3.name === res.turn) {\n                    document.getElementsByClassName(\"op3p\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n                } else if (this.state.player.name === res.turn) {\n                    document.getElementsByClassName(\"playerp\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n                }\n                if (res.turn === this.state.user) {\n                    document.getElementsByClassName(\"player\")[0].style.pointerEvents =\n                        \"auto\";\n                } else {\n                    document.getElementsByClassName(\"player\")[0].style.pointerEvents =\n                        \"none\";\n                }\n            } else if (res.action === \"nextturn\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[\"op\" + x] = d;\n                        x++;\n                    } else {\n                        this.state[\"player\"] = d;\n                    }\n                }\n                this.setState({ tablecard: res.tablecard });\n                //add border conditions on ps\n                if (this.state.op1.name === res.turn) {\n                    document.getElementsByClassName(\"op1p\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n                } else if (this.state.op2.name === res.turn) {\n                    document.getElementsByClassName(\"op2p\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n                } else if (this.state.op3.name === res.turn) {\n                    document.getElementsByClassName(\"op3p\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n                } else if (this.state.player.name === res.turn) {\n                    document.getElementsByClassName(\"playerp\")[0].style.border =\n                        \"solid green 3px\";\n                    document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n                    document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n                }\n                this.nextturn(res.turn, res.addcards);\n            } else if (res.action === \"win\") {\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[\"op\" + x] = d;\n                        x++;\n                    } else {\n                        this.state[\"player\"] = d;\n                    }\n                }\n                this.setState({ tablecard: res.tablecard });\n                this.win(res.user);\n            } else if (res.action === \"retry\") {\n                ws.send(JSON.stringify({ action: \"start\", user: this.state.user }));\n            } else if (res.action === \"drawrep\") {\n                var e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n                var dest = document.getElementsByClassName(\"player\")[0].lastChild;\n                var temp = document.createElement(\"img\");\n\n                let x = 1;\n                for (let d of res.op) {\n                    if (d.name !== this.state.user) {\n                        this.state[\"op\" + x] = d;\n                        x++;\n                    } else {\n                        this.state[\"player\"] = d;\n                    }\n                }\n                this.setState();\n                if (res.user === this.state.user) {\n                    temp.src = require(\"./cards/back-.png\");\n                    temp.style.height = e.target.style.height;\n                    temp.style.width = e.target.style.width;\n                    document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n                    temp.style.position = \"absolute\";\n                    temp.className = \"tempplayer\";\n                    temp.style.opacity = 0;\n                    ws.send(\n                        JSON.stringify({\n                            action: \"drawanim\",\n                            number: res.addcard.length,\n                            user: this.state.user,\n                        })\n                    );\n                    this.timeline\n                        .to(temp, 0.01, {\n                            x:\n                                e.target.getBoundingClientRect().x -\n                                temp.getBoundingClientRect().x +\n                                50,\n                            y:\n                                e.target.getBoundingClientRect().y -\n                                temp.getBoundingClientRect().y,\n                        })\n                        .to(temp, 0.25, { opacity: 1, ease: \"Power2.easeIn\" })\n                        .to(temp, 0.25, {\n                            rotateY: 90,\n                            onComplete: () => {\n                                console.log(res.addcard[0].color + \"-\" + res.addcard[0].num);\n                                temp.src = require(\"./cards/\" +\n                                    res.addcard[0].color +\n                                    \"-\" +\n                                    res.addcard[0].num +\n                                    \".png\");\n                            },\n                        })\n                        .to(temp, 0.25, { rotateY: 0 })\n                        .to(temp, 0.5, {\n                            x:\n                                dest.getBoundingClientRect().x -\n                                temp.getBoundingClientRect().x +\n                                50,\n                            y:\n                                dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                document.getElementsByClassName(\n                                    \"player\"\n                                )[0].style.pointerEvents = \"auto\";\n                                this.drawCard(res.addcard);\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                }\n            } else if (res.action === \"drawanimresp\") {\n                let num;\n                if (this.state.op1.name === res.user) {\n                    num = this.state.op1.name+ (parseInt(this.state.op1.num)-2);\n                } else if (this.state.op2.name === res.user) {\n                    num = this.state.op2.name+(parseInt(this.state.op2.num)-2);\n                } else if (this.state.op3.name === res.user) {\n                    num = this.state.op3.name+(parseInt(this.state.op3.num)-2);\n                } else {return;}\n                console.log(num);\n                let dest = document.getElementById(num);\n                let temp = document.createElement(\"img\");\n                let e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n                temp.src = require(\"./cards/back-.png\");\n                temp.style.height = e.target.style.height;\n                temp.style.width = e.target.style.width;\n                document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n                temp.style.position = \"absolute\";\n                temp.className = \"tempplayer\";\n                temp.style.opacity = 0;\n                for (let i = 0; i < res.number; i++) {\n                    this.timeline\n                        .to(temp, 0.01, {\n                            x:\n                                e.target.getBoundingClientRect().x -\n                                temp.getBoundingClientRect().x +\n                                50,\n                            y:\n                                e.target.getBoundingClientRect().y -\n                                temp.getBoundingClientRect().y,\n                        })\n                        .to(temp, 0.25, {\n                            opacity: 1,\n                            ease: \"Power2.easeIn\",\n                            background: \"black\",\n                        })\n                        .to(temp, 0.5, {\n                            x:\n                                dest.getBoundingClientRect().x -\n                                temp.getBoundingClientRect().x +\n                                50,\n                            y:\n                                dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                }\n            }\n        };\n    }\n\n    win = (winn) => {\n        alert(winn + \" wins\");\n    };\n\n    handlePlay = async (e) => {\n        console.log(e.target);\n        var card = e.target.id.split(\"-\");\n        var temp = document.createElement(\"img\");\n        temp.id = e.target.id;\n        temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"player\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n        this.timeline\n            .to(temp, 0.01, {\n                x:\n                    e.target.getBoundingClientRect().x -\n                    temp.getBoundingClientRect().x +\n                    50,\n                y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            })\n            .to(temp, 0.01, { opacity: 1 });\n        if (card[0] === \"black\") {\n            this.putblackcard(card, e);\n        } else if (\n            card[0] === this.state.tablecard.color ||\n            card[1] === this.state.tablecard.num\n        ) {\n            this.putcard(card, e);\n        } else if (this.state.tablecard.color === \"black\") {\n            this.putcard(card, e);\n        }\n    };\n\n    nextturn = (turn, addcards) => {\n        if (turn === this.state.user) {\n            document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n            if (\n                (this.state.tablecard.num === \"+2\" ||\n                    this.state.tablecard.num === \"+4\") &&\n                addcards.length !== 0\n            ) {\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({ action: \"d2\", user: this.state.user }));\n            } else if (\n                (this.state.tablecard.num === \"+2\" ||\n                    this.state.tablecard.num === \"+4\") &&\n                addcards.length === 0\n            ) {\n            }\n        } else {\n            document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n        }\n    };\n\n    drawTwoCards = (addcards) => {\n        let e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n        let dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        let temp = document.createElement(\"img\");\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n        for (let data of addcards) {\n            ws.send(\n                JSON.stringify({\n                    action: \"drawanim\",\n                    number: addcards.length,\n                    user: this.state.user,\n                })\n            );\n            this.timeline\n                .to(temp, 0.01, {\n                    x:\n                        e.target.getBoundingClientRect().x -\n                        temp.getBoundingClientRect().x +\n                        50,\n                    y:\n                        e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n                })\n                .to(temp, 0.25, { opacity: 1, ease: \"Power2.easeIn\" })\n                .to(temp, 0.25, {\n                    rotateY: 90,\n                    onComplete: () => {\n                        temp.src = require(\"./cards/\" +\n                            data.color +\n                            \"-\" +\n                            data.num +\n                            \".png\");\n                    },\n                })\n                .to(temp, 0.25, { rotateY: 0 })\n                .to(temp, 0.5, {\n                    x:\n                        dest.getBoundingClientRect().x -\n                        temp.getBoundingClientRect().x +\n                        50,\n                    y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n                    onComplete: () => {\n                        this.state.playercards.push(addcards);\n                        temp.parentNode.removeChild(temp);\n                    },\n                })\n                .play();\n            this.setState({ playercards: this.state.playercards });\n        }\n    };\n    drawCard = (addcards) => {\n        this.state.playercards.push(...addcards);\n        console.log(this.state.playercards);\n        this.setState({ playercards: this.state.playercards });\n    };\n\n    putblackcard = async (card, e) => {\n        this.state.playercards.splice(\n            this.state.playercards.indexOf(\n                this.state.playercards.find(\n                    (x) => x.num === card[1] && x.color === card[0]\n                )\n            ),\n            1\n        );\n        this.setState({ playercards: this.state.playercards });\n        let temp = document.getElementsByClassName(\"tempplayer\")[0];\n        var box = document\n            .getElementsByClassName(\"tablecard\")[0]\n            .getBoundingClientRect();\n        if (card[1] === \"W\") {\n            let userInput = prompt(\n                \"What color do you want your Wild card to be?\",\n                \"R, Y, G or B?\"\n            );\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"wplayed\",\n                                        tablecard: { num: \"W\", color: \"red\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                case \"Y\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"wplayed\",\n                                        tablecard: { num: \"W\", color: \"yellow\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                case \"G\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"wplayed\",\n                                        tablecard: { num: \"W\", color: \"green\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                case \"B\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"wplayed\",\n                                        tablecard: { num: \"W\", color: \"blue\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                default:\n                    console.log(\"nothing\");\n            }\n        } else if (\n            this.state.playercards.filter(\n                (x) => x.color === card[0] || x.num === card[1]\n            ).length === 0\n        ) {\n            let userInput = prompt(\n                \"What color do you want your +4 card to be?\",\n                \"R, Y, G or B?\"\n            );\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"4played\",\n                                        tablecard: { num: \"+4\", color: \"red\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                case \"Y\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"4played\",\n                                        tablecard: { num: \"+4\", color: \"yellow\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                case \"G\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"4played\",\n                                        tablecard: { num: \"+4\", color: \"green\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                case \"B\":\n                    this.timeline\n                        .to(temp, 0.5, {\n                            x: box.x - temp.getBoundingClientRect().x + 50,\n                            y: box.y - temp.getBoundingClientRect().y,\n                            onComplete: () => {\n                                ws.send(\n                                    JSON.stringify({\n                                        action: \"4played\",\n                                        tablecard: { num: \"+4\", color: \"blue\" },\n                                        played: this.state.user,\n                                    })\n                                );\n                                temp.parentNode.removeChild(temp);\n                            },\n                        })\n                        .play();\n                    break;\n                default:\n                    console.log(\"nothing\");\n            }\n        }\n    };\n\n    putcard = async (card, e) => {\n        this.state.playercards.splice(\n            this.state.playercards.indexOf(\n                this.state.playercards.find(\n                    (x) => x.num === card[1] && x.color === card[0]\n                )\n            ),\n            1\n        );\n        this.setState({ playercards: this.state.playercards });\n        let temp = document.getElementsByClassName(\"tempplayer\")[0];\n        var box = document\n            .getElementsByClassName(\"tablecard\")[0]\n            .getBoundingClientRect();\n        this.timeline\n            .to(temp, 0.5, {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n                onComplete: () => {\n                    if (card[1] === \"R\") {\n                        ws.send(\n                            JSON.stringify({\n                                action: \"rplayed\",\n                                tablecard: { num: card[1], color: card[0] },\n                                played: this.state.user,\n                            })\n                        );\n                    } else if (card[1] === \"S\") {\n                        ws.send(\n                            JSON.stringify({\n                                action: \"splayed\",\n                                tablecard: { num: card[1], color: card[0] },\n                                played: this.state.user,\n                            })\n                        );\n                    } else if (card[1] === \"+2\") {\n                        ws.send(\n                            JSON.stringify({\n                                action: \"2played\",\n                                tablecard: { num: card[1], color: card[0] },\n                                played: this.state.user,\n                            })\n                        );\n                    } else {\n                        ws.send(\n                            JSON.stringify({\n                                action: \"played\",\n                                tablecard: { num: card[1], color: card[0] },\n                                played: this.state.user,\n                            })\n                        );\n                    }\n                    temp.parentNode.removeChild(temp);\n                },\n            })\n            .play();\n    };\n\n    ready = (e) => {\n        ws.send(JSON.stringify({ action: \"start\", user: this.state.user }));\n        e.target.style.display = \"none\";\n    };\n\n    drawCarde = () => {\n        ws.send(JSON.stringify({ action: \"draw\", played: this.state.user }));\n    };\n\n    render() {\n        return (\n            <div className=\"gamearea\" style={gamearea}>\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader\n                    color=\"yellow\"\n                    css=\"margin-top:20%;margin-left:45%;\"\n                    loading={this.state.loading}\n                ></PacmanLoader>\n                <div className=\"gridItem\">\n                    <div\n                        className=\"op1\"\n                        style={{\n                            transform: \"rotateZ(180deg)\",\n                            height: \"auto\",\n                            width: \"auto\",\n                        }}\n                    >\n                        <div\n                            className=\"op1p\"\n                            style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n                        >\n                            {this.state.op1.name ? this.state.op1.name : \"\"}\n                        </div>\n                        <div className=\"whereop1resides\" style={player}>\n                            {this.state.op1.num ? (\n                                <Opo\n                                    cardnum={this.state.op1.num}\n                                    name={this.state.op1.name}\n                                ></Opo>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"gridItem\" id=\"mid\" style={mid}>\n                    <div\n                        className=\"op2\"\n                        style={{\n                            transform: \"rotateZ(90deg)\",\n                            height: \"auto\",\n                            width: \"auto\",\n                        }}\n                    >\n                        <div\n                            className=\"op2p\"\n                            style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n                        >\n                            {this.state.op2.name ? this.state.op2.name : \"\"}\n                        </div>\n                        <div className=\"whereop2resides\" style={playerx}>\n                            {this.state.op2.num ? (\n                                <Opo\n                                    cardnum={this.state.op2.num}\n                                    name={this.state.op2.name}\n                                ></Opo>\n                            ) : null}\n                        </div>\n                    </div>\n                    <div className=\"stack\" style={stack}>\n                        <div>\n                            <img\n                                src={require(\"./cards/\" +\n                                    this.state.tablecard.color +\n                                    \"-\" +\n                                    this.state.tablecard.num +\n                                    \".png\")}\n                                className=\"tablecard\"\n                                style={{ height: \"75px\", width: \"50px\" }}\n                                id={this.state.tablecard.color + \"-\" + this.state.tablecard.num}\n                                alt={\n                                    \"cards/\" +\n                                    this.state.tablecard.color +\n                                    \"-\" +\n                                    this.state.tablecard.num +\n                                    \".png\"\n                                }\n                            ></img>\n                            <img\n                                src={require(\"./cards/back-.png\")}\n                                alt={\"deck\"}\n                                style={{ height: \"75px\", width: \"50px\", background: \"black\" }}\n                                onClick={this.drawCarde}\n                            ></img>\n                        </div>\n                    </div>\n                    <div\n                        className=\"op3\"\n                        style={{\n                            transform: \"rotateZ(270deg)\",\n                            height: \"auto\",\n                            width: \"auto\",\n                        }}\n                    >\n                        <div\n                            className=\"op3p\"\n                            style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n                        >\n                            {this.state.op3.name ? this.state.op3.name : \"\"}\n                        </div>\n                        <div className=\"whereop3resides\" style={playerx}>\n                            {this.state.op3.num ? (\n                                <Opo\n                                    cardnum={this.state.op3.num}\n                                    name={this.state.op3.name}\n                                ></Opo>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"gridItem\" id=\"playerplace\">\n                    <div\n                        className=\"playerp\"\n                        style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n                    >\n                        {this.state.user}\n                    </div>\n                    <div className=\"player\" style={player}>\n                        {this.state.playercards.map((data) => {\n                            return (\n                                <img\n                                    src={require(\"./cards/\" +\n                                        data.color +\n                                        \"-\" +\n                                        data.num +\n                                        \".png\")}\n                                    style={{ height: \"75px\", width: \"50px\" }}\n                                    id={data.color + \"-\" + data.num}\n                                    alt={\"cards/\" + data.color + \"-\" + data.num + \".png\"}\n                                    onClick={this.handlePlay}\n                                ></img>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}