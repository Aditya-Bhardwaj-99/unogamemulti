{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners';\nimport { Avatar, withStyles } from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport PropTypes from 'prop-types'; // import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket');\nconst gamearea = {\n  display: 'grid',\n  'grid-template-columns': 'auto',\n  height: 'auto',\n  width: 'auto'\n};\nconst mid = {\n  display: 'grid',\n  'grid-template-columns': 'auto 33% auto'\n};\nconst playercard = {\n  'margin-left': '5px',\n  'margin-right': '5px',\n  'margin-top': '2px',\n  'margin-bottom': '2px'\n};\nconst player = {\n  position: 'relative',\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\nconst playerx = {\n  position: 'relative',\n  width: 'auto',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\nconst stack = {\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\n\nconst style = theme => ({\n  square: {\n    height: '75px',\n    width: '50px',\n    'background-image': \"url('./cards/back-.png')\"\n  }\n});\n\nclass Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = e => {\n      // var card=e.target;\n      console.log(e.target);\n      var card = e.target.id.split('-');\n\n      if (card[0] === 'black') {\n        this.putblackcard(card);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card);\n      } else if (this.state.tablecard.color === 'black') {\n        this.putcard(card);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState();\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(addcards);\n      this.setState();\n    };\n\n    this.putblackcard = card => {\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n\n      if (document.getElementsByClassName('player')[0].childNodes.length === 0) {\n        ws.send(JSON.stringify({\n          action: 'win',\n          user: this.state.user\n        }));\n      }\n    };\n\n    this.putcard = card => {\n      if (card[1] === 'R') {\n        ws.send(JSON.stringify({\n          action: 'rplayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === 'S') {\n        ws.send(JSON.stringify({\n          action: 'splayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === '+2') {\n        ws.send(JSON.stringify({\n          action: '2played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else {\n        ws.send(JSON.stringify({\n          action: 'played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      }\n\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n\n      if (document.getElementsByClassName('player')[0].childNodes.length === 0) {\n        ws.send(JSON.stringify({\n          action: 'win',\n          user: this.state.user\n        }));\n      }\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: 'start',\n        user: this.state.user\n      }));\n      e.target.style.display = 'none';\n    };\n\n    this.drawCard = () => {\n      ws.send(JSON.stringify({\n        action: 'draw',\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      opnum: [],\n      loading: true,\n      user: '',\n      tablecard: {\n        num: '',\n        color: 'back'\n      },\n      allusers: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log('open');\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log('startreturn');\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            this.state.opnum.push({\n              name: d,\n              num: 7\n            });\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n            this.state.opnum.push({\n              name: d,\n              num: 7\n            });\n          }\n        }\n\n        console.log(this.state.allusers);\n\n        if (document.getElementsByClassName(this.state.allusers.find(x => x.name === res.turn).op + 'p')[0]) {\n          document.getElementsByClassName(this.state.allusers.find(x => x.name === res.turn).op + 'p')[0].style.border = 'solid green 3px';\n        }\n\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        });\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (res.action === \"nextturn\") {\n        this.setState({\n          tablecard: res.tablecard,\n          opnum: res.op\n        });\n        document.getElementsByClassName('playerp')[0].style.border = 'none';\n        console.log(this.state.opnum.find(x => x.turn === 1).name);\n        document.getElementsByClassName(this.state.allusers.find(x => x.name === this.state.opnum.find(x => x.turn === 1).name).op + 'p')[0].style.border = 'solid green 3px';\n        this.nextturn(res.turn, res.addcards);\n        document.getElementsByClassName(this.state.allusers.find(x => x.name === this.state.opnum.find(x => x.turn === 1).name).op + 'p')[0].style.border = 'none';\n      } else if (res.action === \"win\") {\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        this.state.opnum = res.op;\n\n        if (res.user === this.state.user) {\n          this.drawCard(res.addcard);\n        }\n\n        this.setState();\n      }\n    };\n  }\n\n  // <div className={props+'p'} style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.allusers.find(x=>x.op=props).name}</div>\n  //     <AvatarGroup>\n  //     {Array(this.state.opnum.find(this.state.allusers.find(x=>x.op=props).name).num).fill().map((_, i) => <Avatar src={require('./cards/back-.png')} ></Avatar>)}\n  //     </AvatarGroup>\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: 'rotateZ(180deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, \"Opponent1\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, this.state.allusers.find(x => x.op === 'op1') && this.state.opnum.find(x => x.name === this.state.allusers.find(x => x.op === 'op1').name) ? Array(this.state.opnum.find(x => x.name === this.state.allusers.find(x => x.op === 'op1').name).num).fill().map((_, data) => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/back-.png\"),\n        style: {\n          background: 'black',\n          height: '75px',\n          width: '50px'\n        },\n        alt: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 37\n        }\n      });\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: 'rotateZ(90deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, \"Opponent2\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, this.state.allusers.find(x => x.op === 'op2') && this.state.opnum.find(x => x.name === this.state.allusers.find(x => x.op === 'op2').name) ? Array(this.state.opnum.find(x => x.name === this.state.allusers.find(x => x.op === 'op2').name).num).fill().map((_, data) => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/back-.png\"),\n        style: {\n          background: 'black',\n          height: '75px',\n          width: '50px'\n        },\n        alt: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 37\n        }\n      });\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      style: {\n        height: '75px',\n        width: '50px'\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: 'deck',\n      style: {\n        height: '75px',\n        width: '50px',\n        background: 'black'\n      },\n      onClick: this.drawCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: 'rotateZ(270deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, \"Opponent3\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, this.state.allusers.find(x => x.op === 'op3') && this.state.opnum.find(x => x.name === this.state.allusers.find(x => x.op === 'op3').name) ? Array(this.state.opnum.find(x => x.name === this.state.allusers.find(x => x.op === 'op3').name).num).fill().map((_, data) => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/back-.png\"),\n        style: {\n          background: 'black',\n          height: '75px',\n          width: '50px'\n        },\n        alt: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 37\n        }\n      });\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}\n\nGamearea.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(style)(Gamearea);","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Avatar","withStyles","AvatarGroup","PropTypes","ws","WebSocket","gamearea","display","height","width","mid","playercard","player","position","playerx","stack","style","theme","square","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","putblackcard","state","tablecard","color","num","putcard","nextturn","turn","addcards","user","document","getElementsByClassName","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","playercards","push","setState","drawCard","userInput","prompt","toUpperCase","played","filter","x","splice","indexOf","find","childNodes","ready","opnum","loading","allusers","componentDidMount","props","onopen","onmessage","data","res","parse","cards","d","users","name","op","border","addcard","render","classes","transform","textAlign","Array","fill","map","_","require","background","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,MAAMC,EAAE,GAAC,IAAIC,SAAJ,CAAc,+BAAd,CAAT;AAEA,MAAMC,QAAQ,GAAC;AACXC,EAAAA,OAAO,EAAE,MADE;AAEX,2BAAyB,MAFd;AAGXC,EAAAA,MAAM,EAAE,MAHG;AAIXC,EAAAA,KAAK,EAAE;AAJI,CAAf;AAMA,MAAMC,GAAG,GAAC;AACNH,EAAAA,OAAO,EAAE,MADH;AAEN,2BAAyB;AAFnB,CAAV;AAIA,MAAMI,UAAU,GAAC;AACb,iBAAe,KADF;AAEb,kBAAgB,KAFH;AAGb,gBAAc,KAHD;AAIb,mBAAiB;AAJJ,CAAjB;AAMA,MAAMC,MAAM,GAAC;AACTC,EAAAA,QAAQ,EAAE,UADD;AAETJ,EAAAA,KAAK,EAAE,KAFE;AAGTD,EAAAA,MAAM,EAAE,MAHC;AAIT,iBAAe,KAJN;AAKT,kBAAgB;AALP,CAAb;AAOA,MAAMM,OAAO,GAAC;AACVD,EAAAA,QAAQ,EAAE,UADA;AAEVJ,EAAAA,KAAK,EAAE,MAFG;AAGVD,EAAAA,MAAM,EAAE,MAHE;AAIV,iBAAe,KAJL;AAKV,kBAAgB;AALN,CAAd;AAOA,MAAMO,KAAK,GAAC;AACRN,EAAAA,KAAK,EAAE,KADC;AAERD,EAAAA,MAAM,EAAE,MAFA;AAGR,iBAAe,KAHP;AAIR,kBAAgB;AAJR,CAAZ;;AAOA,MAAMQ,KAAK,GAAEC,KAAD,KAAU;AAClBC,EAAAA,MAAM,EAAE;AACJV,IAAAA,MAAM,EAAC,MADH;AAEJC,IAAAA,KAAK,EAAC,MAFF;AAGJ,wBAAoB;AAHhB;AADU,CAAV,CAAZ;;AASA,MAAMU,QAAN,SAAuBrB,SAAvB,CAAiC;AAC7BsB,EAAAA,WAAW,GAAG;AACV;;AADU,SA0EdC,GA1Ec,GA0ETC,IAAD,IAAQ;AACRC,MAAAA,KAAK,CAACD,IAAI,GAAC,OAAN,CAAL;AACH,KA5Ea;;AAAA,SA+EdE,UA/Ec,GA+EFC,CAAD,IAAK;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA,UAAIC,IAAI,GAACJ,CAAC,CAACG,MAAF,CAASE,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,CAAT;;AACA,UAAGF,IAAI,CAAC,CAAD,CAAJ,KAAU,OAAb,EAAqB;AACjB,aAAKG,YAAL,CAAkBH,IAAlB;AACH,OAFD,MAEO,IAAGA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAKI,KAAL,CAAWC,SAAX,CAAqBC,KAAjC,IAA0CN,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAKI,KAAL,CAAWC,SAAX,CAAqBE,GAA9E,EAAkF;AACrF,aAAKC,OAAL,CAAaR,IAAb;AACH,OAFM,MAEA,IAAG,KAAKI,KAAL,CAAWC,SAAX,CAAqBC,KAArB,KAA6B,OAAhC,EAAwC;AAC3C,aAAKE,OAAL,CAAaR,IAAb;AACH;AAEJ,KA3Fa;;AAAA,SA6FdS,QA7Fc,GA6FL,CAACC,IAAD,EAAMC,QAAN,KAAiB;AACtB,UAAGD,IAAI,KAAG,KAAKN,KAAL,CAAWQ,IAArB,EAA0B;AACtBC,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6C3B,KAA7C,CAAmD4B,aAAnD,GAAmE,MAAnE;;AACA,YAAG,CAAC,KAAKX,KAAL,CAAWC,SAAX,CAAqBE,GAArB,KAA2B,IAA3B,IAAmC,KAAKH,KAAL,CAAWC,SAAX,CAAqBE,GAArB,KAA2B,IAA/D,KAAyEI,QAAQ,CAACK,MAAT,KAAkB,CAA9F,EAAgG;AAC5F,eAAKC,YAAL,CAAkBN,QAAlB;AACApC,UAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,MAAM,EAAC,IAAR;AAAcT,YAAAA,IAAI,EAAC,KAAKR,KAAL,CAAWQ;AAA9B,WAAf,CAAR;AACH,SAHD,MAGM,IAAG,CAAC,KAAKR,KAAL,CAAWC,SAAX,CAAqBE,GAArB,KAA2B,IAA3B,IAAmC,KAAKH,KAAL,CAAWC,SAAX,CAAqBE,GAArB,KAA2B,IAA/D,KAAwEI,QAAQ,CAACK,MAAT,KAAkB,CAA7F,EAA+F,CACpG;AACJ,OAPD,MAOO;AACHH,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6C3B,KAA7C,CAAmD4B,aAAnD,GAAmE,MAAnE;AACH;AACJ,KAxGa;;AAAA,SA0GdE,YA1Gc,GA0GAN,QAAD,IAAY;AACrB,WAAKP,KAAL,CAAWkB,WAAX,CAAuBC,IAAvB,CAA4B,GAAGZ,QAA/B;AACA,WAAKa,QAAL;AACH,KA7Ga;;AAAA,SA8GdC,QA9Gc,GA8GJd,QAAD,IAAY;AACjB,WAAKP,KAAL,CAAWkB,WAAX,CAAuBC,IAAvB,CAA4BZ,QAA5B;AACA,WAAKa,QAAL;AACH,KAjHa;;AAAA,SAmHdrB,YAnHc,GAmHAH,IAAD,IAAQ;AACjB,UAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACjB,YAAI0B,SAAS,GAAGC,MAAM,CAAC,8CAAD,EAAiD,eAAjD,CAAtB;;AACA,gBAAQD,SAAS,CAACE,WAAV,EAAR;AACI,eAAK,GAAL;AACArD,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAkDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAApE,aAAf,CAAR;AACA;;AACA,eAAK,GAAL;AACIrC,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAqDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAvE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrC,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAoDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAtE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrC,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAmDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAArE,aAAf,CAAR;AACJ;;AACA;AAAUf,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAbd;AAeH,OAjBD,MAiBO,IAAG,KAAKM,KAAL,CAAWkB,WAAX,CAAuBQ,MAAvB,CAA8BC,CAAC,IAAEA,CAAC,CAACzB,KAAF,KAAUN,IAAI,CAAC,CAAD,CAAd,IAAqB+B,CAAC,CAACxB,GAAF,KAAUP,IAAI,CAAC,CAAD,CAApE,EAAyEgB,MAAzE,KAAoF,CAAvF,EAAyF;AAC5F,YAAIU,SAAS,GAAGC,MAAM,CAAC,4CAAD,EAA+C,eAA/C,CAAtB;;AACA,gBAAQD,SAAS,CAACE,WAAV,EAAR;AACI,eAAK,GAAL;AACArD,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAmDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAArE,aAAf,CAAR;AACA;;AACA,eAAK,GAAL;AACIrC,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAsDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAxE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrC,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAqDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAvE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrC,YAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBhB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAoDuB,cAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAtE,aAAf,CAAR;AACJ;;AACA;AAAUf,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAbd;AAeH;;AACD,WAAKM,KAAL,CAAWkB,WAAX,CAAuBU,MAAvB,CAA8B,KAAK5B,KAAL,CAAWkB,WAAX,CAAuBW,OAAvB,CAA+B,KAAK7B,KAAL,CAAWkB,WAAX,CAAuBY,IAAvB,CAA4BH,CAAC,IAAEA,CAAC,CAACxB,GAAF,KAAQP,IAAI,CAAC,CAAD,CAAZ,IAAmB+B,CAAC,CAACzB,KAAF,KAAUN,IAAI,CAAC,CAAD,CAAhE,CAA/B,CAA9B,EAAmI,CAAnI;AACA,WAAKwB,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAC,KAAKlB,KAAL,CAAWkB;AAAxB,OAAd;;AACA,UAAGT,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CqB,UAA7C,CAAwDnB,MAAxD,KAAiE,CAApE,EAAsE;AAClEzC,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,KAAR;AAAcT,UAAAA,IAAI,EAAC,KAAKR,KAAL,CAAWQ;AAA9B,SAAf,CAAR;AACH;AACJ,KA5Ja;;AAAA,SA8JdJ,OA9Jc,GA8JLR,IAAD,IAAQ;AACZ,UAAGA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAf,EAAmB;AACfzB,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,SAAR;AAAkBhB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACP,IAAI,CAAC,CAAD,CAAT;AAAaM,YAAAA,KAAK,EAACN,IAAI,CAAC,CAAD;AAAvB,WAA5B;AAAwD6B,UAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAA1E,SAAf,CAAR;AACH,OAFD,MAEO,IAAIZ,IAAI,CAAC,CAAD,CAAJ,KAAU,GAAd,EAAkB;AACrBzB,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,SAAR;AAAkBhB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACP,IAAI,CAAC,CAAD,CAAT;AAAaM,YAAAA,KAAK,EAACN,IAAI,CAAC,CAAD;AAAvB,WAA5B;AAAwD6B,UAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAA1E,SAAf,CAAR;AACH,OAFM,MAEA,IAAGZ,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAf,EAAoB;AACvBzB,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,SAAR;AAAkBhB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACP,IAAI,CAAC,CAAD,CAAT;AAAaM,YAAAA,KAAK,EAACN,IAAI,CAAC,CAAD;AAAvB,WAA5B;AAAwD6B,UAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAA1E,SAAf,CAAR;AACH,OAFM,MAEA;AACHrC,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,QAAR;AAAiBhB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACP,IAAI,CAAC,CAAD,CAAT;AAAaM,YAAAA,KAAK,EAACN,IAAI,CAAC,CAAD;AAAvB,WAA3B;AAAuD6B,UAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAzE,SAAf,CAAR;AACH;;AACD,WAAKR,KAAL,CAAWkB,WAAX,CAAuBU,MAAvB,CAA8B,KAAK5B,KAAL,CAAWkB,WAAX,CAAuBW,OAAvB,CAA+B,KAAK7B,KAAL,CAAWkB,WAAX,CAAuBY,IAAvB,CAA4BH,CAAC,IAAEA,CAAC,CAACxB,GAAF,KAAQP,IAAI,CAAC,CAAD,CAAZ,IAAmB+B,CAAC,CAACzB,KAAF,KAAUN,IAAI,CAAC,CAAD,CAAhE,CAA/B,CAA9B,EAAmI,CAAnI;AACA,WAAKwB,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAC,KAAKlB,KAAL,CAAWkB;AAAxB,OAAd;;AACA,UAAGT,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CqB,UAA7C,CAAwDnB,MAAxD,KAAiE,CAApE,EAAsE;AAClEzC,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,KAAR;AAAcT,UAAAA,IAAI,EAAC,KAAKR,KAAL,CAAWQ;AAA9B,SAAf,CAAR;AACH;AACJ,KA7Ka;;AAAA,SA+KdwB,KA/Kc,GA+KPxC,CAAD,IAAK;AACPrB,MAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAC,OAAR;AAAgBT,QAAAA,IAAI,EAAC,KAAKR,KAAL,CAAWQ;AAAhC,OAAf,CAAR;AACAhB,MAAAA,CAAC,CAACG,MAAF,CAASZ,KAAT,CAAeT,OAAf,GAAuB,MAAvB;AACH,KAlLa;;AAAA,SAoLd+C,QApLc,GAoLL,MAAI;AACTlD,MAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAeQ,QAAAA,MAAM,EAAC,KAAKzB,KAAL,CAAWQ;AAAjC,OAAf,CAAR;AACH,KAtLa;;AAEV,SAAKR,KAAL,GAAa;AACTkB,MAAAA,WAAW,EAAC,EADH;AAETe,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,OAAO,EAAC,IAHC;AAIT1B,MAAAA,IAAI,EAAC,EAJI;AAKTP,MAAAA,SAAS,EAAC;AAACE,QAAAA,GAAG,EAAC,EAAL;AAAQD,QAAAA,KAAK,EAAC;AAAd,OALD;AAMTiC,MAAAA,QAAQ,EAAC;AANA,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKhB,QAAL,CAAc;AAACZ,MAAAA,IAAI,EAAC,KAAK6B,KAAL,CAAW7B;AAAjB,KAAd;;AAEArC,IAAAA,EAAE,CAACmE,MAAH,GAAU,MAAI;AACV7C,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAFD;;AAGAvB,IAAAA,EAAE,CAACoE,SAAH,GAAcC,IAAD,IAAQ;AACjB/C,MAAAA,OAAO,CAACC,GAAR,CAAY8C,IAAI,CAACA,IAAjB;AACA,UAAIC,GAAG,GAAC1B,IAAI,CAAC2B,KAAL,CAAWF,IAAI,CAACA,IAAhB,CAAR;;AACA,UAAGC,GAAG,CAACxB,MAAJ,KAAe,aAAlB,EAAgC;AAC5BxB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKM,KAAL,CAAWkB,WAAX,GAAuBuB,GAAG,CAACE,KAA3B;AACA,aAAK3C,KAAL,CAAWC,SAAX,GAAqBwC,GAAG,CAACxC,SAAzB;AACA,YAAI0B,CAAC,GAAC,CAAN;;AACA,aAAI,IAAIiB,CAAR,IAAaH,GAAG,CAACI,KAAjB,EAAuB;AACnB,cAAGD,CAAC,KAAG,KAAK5C,KAAL,CAAWQ,IAAlB,EAAuB;AACnB,iBAAKR,KAAL,CAAWmC,QAAX,CAAoBhB,IAApB,CAAyB;AAAC2B,cAAAA,IAAI,EAACF,CAAN;AAAQG,cAAAA,EAAE,EAAC,OAAKpB;AAAhB,aAAzB;AACA,iBAAK3B,KAAL,CAAWiC,KAAX,CAAiBd,IAAjB,CAAsB;AAAC2B,cAAAA,IAAI,EAACF,CAAN;AAAQzC,cAAAA,GAAG,EAAC;AAAZ,aAAtB;AACAwB,YAAAA,CAAC;AACJ,WAJD,MAIO;AACH,iBAAK3B,KAAL,CAAWmC,QAAX,CAAoBhB,IAApB,CAAyB;AAAC2B,cAAAA,IAAI,EAACF,CAAN;AAAQG,cAAAA,EAAE,EAAC;AAAX,aAAzB;AACA,iBAAK/C,KAAL,CAAWiC,KAAX,CAAiBd,IAAjB,CAAsB;AAAC2B,cAAAA,IAAI,EAACF,CAAN;AAAQzC,cAAAA,GAAG,EAAC;AAAZ,aAAtB;AACH;AACJ;;AACDV,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWmC,QAAvB;;AACA,YAAG1B,QAAQ,CAACC,sBAAT,CAAgC,KAAKV,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAASL,GAAG,CAACnC,IAAzC,EAA+CyC,EAA/C,GAAkD,GAAlF,EAAuF,CAAvF,CAAH,EAA6F;AAC7FtC,UAAAA,QAAQ,CAACC,sBAAT,CAAgC,KAAKV,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAASL,GAAG,CAACnC,IAAzC,EAA+CyC,EAA/C,GAAkD,GAAlF,EAAuF,CAAvF,EAA0FhE,KAA1F,CAAgGiE,MAAhG,GAAuG,iBAAvG;AACC;;AACDvD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWiC,KAAvB;AACA,aAAKb,QAAL,CAAc;AAACc,UAAAA,OAAO,EAAC;AAAT,SAAd;;AACA,YAAGO,GAAG,CAACnC,IAAJ,KAAW,KAAKN,KAAL,CAAWQ,IAAzB,EAA8B;AAC1BC,UAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6C3B,KAA7C,CAAmD4B,aAAnD,GAAmE,MAAnE;AACH,SAFD,MAEO;AACHF,UAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8C3B,KAA9C,CAAoDiE,MAApD,GAA2D,MAA3D;AACAvC,UAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6C3B,KAA7C,CAAmD4B,aAAnD,GAAmE,MAAnE;AACH;AACJ,OA3BD,MA4BK,IAAG8B,GAAG,CAACxB,MAAJ,KAAa,UAAhB,EAA2B;AAC5B,aAAKG,QAAL,CAAc;AAACnB,UAAAA,SAAS,EAACwC,GAAG,CAACxC,SAAf;AAAyBgC,UAAAA,KAAK,EAACQ,GAAG,CAACM;AAAnC,SAAd;AACAtC,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8C3B,KAA9C,CAAoDiE,MAApD,GAA2D,MAA3D;AACAvD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACrB,IAAF,KAAS,CAAlC,EAAqCwC,IAAjD;AACArC,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,KAAKV,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACrB,IAAF,KAAS,CAAlC,EAAqCwC,IAA1E,EAAgFC,EAAhF,GAAmF,GAAnH,EAAwH,CAAxH,EAA2HhE,KAA3H,CAAiIiE,MAAjI,GAAwI,iBAAxI;AACA,aAAK3C,QAAL,CAAcoC,GAAG,CAACnC,IAAlB,EAAuBmC,GAAG,CAAClC,QAA3B;AACAE,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,KAAKV,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACrB,IAAF,KAAS,CAAlC,EAAqCwC,IAA1E,EAAgFC,EAAhF,GAAmF,GAAnH,EAAwH,CAAxH,EAA2HhE,KAA3H,CAAiIiE,MAAjI,GAAwI,MAAxI;AACH,OAPI,MAQA,IAAGP,GAAG,CAACxB,MAAJ,KAAa,KAAhB,EAAsB;AACvB,aAAK7B,GAAL,CAASqD,GAAG,CAACjC,IAAb;AACH,OAFI,MAGA,IAAGiC,GAAG,CAACxB,MAAJ,KAAa,OAAhB,EAAwB;AACzB9C,QAAAA,EAAE,CAAC2C,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,OAAR;AAAgBT,UAAAA,IAAI,EAAC,KAAKR,KAAL,CAAWQ;AAAhC,SAAf,CAAR;AACH,OAFI,MAGA,IAAGiC,GAAG,CAACxB,MAAJ,KAAa,SAAhB,EAA0B;AAC3B,aAAKjB,KAAL,CAAWiC,KAAX,GAAiBQ,GAAG,CAACM,EAArB;;AACA,YAAGN,GAAG,CAACjC,IAAJ,KAAW,KAAKR,KAAL,CAAWQ,IAAzB,EAA8B;AAC1B,eAAKa,QAAL,CAAcoB,GAAG,CAACQ,OAAlB;AACH;;AACD,aAAK7B,QAAL;AACH;AACJ,KApDD;AAsDH;;AAgHD;AACA;AACA;AACA;AAEA8B,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKd,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAEhE,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAK2D,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,MAAA,GAAG,EAAC,iCAAjC;AAAmE,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWkC,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACkB,QAAAA,SAAS,EAAC,iBAAX;AAA6B7E,QAAAA,MAAM,EAAC,MAApC;AAA2CC,QAAAA,KAAK,EAAC;AAAjD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC,KAAP;AAAa,sBAAa,KAA1B;AAAgC6E,QAAAA,SAAS,EAAC;AAA1C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA;AAAK,MAAA,KAAK,EAAE1E,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKqB,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,KAA6C,KAAK/C,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,EAA0CD,IAA5E,CAA7C,GAA+HQ,KAAK,CAAC,KAAKtD,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,EAA0CD,IAA5E,EAAkF3C,GAAnF,CAAL,CAA6FoD,IAA7F,GAAoGC,GAApG,CAAwG,CAACC,CAAD,EAAGjB,IAAH,KAAU;AAC1O,0BAAQ;AAAK,QAAA,GAAG,EAAEkB,OAAO,CAAC,mBAAD,CAAjB;AAAwC,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,OAAZ;AAAoBpF,UAAAA,MAAM,EAAC,MAA3B;AAAkCC,UAAAA,KAAK,EAAC;AAAxC,SAA/C;AAAgG,QAAA,GAAG,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAF2H,CAA/H,GAEM,IAHP,CAFA,CADJ,CAHJ,eAaI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,KAA7B;AAAmC,MAAA,KAAK,EAAEC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAC2E,QAAAA,SAAS,EAAC,gBAAX;AAA4B7E,QAAAA,MAAM,EAAC,MAAnC;AAA0CC,QAAAA,KAAK,EAAC;AAAhD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC,KAAP;AAAa,sBAAa,KAA1B;AAAgC6E,QAAAA,SAAS,EAAC;AAA1C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA;AAAK,MAAA,KAAK,EAAExE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKmB,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,KAA6C,KAAK/C,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,EAA0CD,IAA5E,CAA7C,GAA+HQ,KAAK,CAAC,KAAKtD,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,EAA0CD,IAA5E,EAAkF3C,GAAnF,CAAL,CAA6FoD,IAA7F,GAAoGC,GAApG,CAAwG,CAACC,CAAD,EAAGjB,IAAH,KAAU;AAC1O,0BAAQ;AAAK,QAAA,GAAG,EAAEkB,OAAO,CAAC,mBAAD,CAAjB;AAAwC,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,OAAZ;AAAoBpF,UAAAA,MAAM,EAAC,MAA3B;AAAkCC,UAAAA,KAAK,EAAC;AAAxC,SAA/C;AAAgG,QAAA,GAAG,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAF2H,CAA/H,GAEM,IAHP,CAFA,CADJ,eASI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAEM,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE4E,OAAO,CAAC,aAAW,KAAK1D,KAAL,CAAWC,SAAX,CAAqBC,KAAhC,GAAsC,GAAtC,GAA0C,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,GAA/D,GAAmE,MAApE,CAAjB;AAA8F,MAAA,KAAK,EAAE;AAAC5B,QAAAA,MAAM,EAAC,MAAR;AAAeC,QAAAA,KAAK,EAAC;AAArB,OAArG;AAAmI,MAAA,EAAE,EAAE,KAAKwB,KAAL,CAAWC,SAAX,CAAqBC,KAArB,GAA2B,GAA3B,GAA+B,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,GAA3L;AAAgM,MAAA,GAAG,EAAE,WAAS,KAAKH,KAAL,CAAWC,SAAX,CAAqBC,KAA9B,GAAoC,GAApC,GAAwC,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,GAA7D,GAAiE,MAAtQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,GAAG,EAAEuD,OAAO,CAAC,mBAAD,CAAjB;AAAwC,MAAA,GAAG,EAAE,MAA7C;AAAqD,MAAA,KAAK,EAAE;AAACnF,QAAAA,MAAM,EAAC,MAAR;AAAeC,QAAAA,KAAK,EAAC,MAArB;AAA4BmF,QAAAA,UAAU,EAAC;AAAvC,OAA5D;AAA6G,MAAA,OAAO,EAAE,KAAKtC,QAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CATJ,eAeI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAC+B,QAAAA,SAAS,EAAC,iBAAX;AAA6B7E,QAAAA,MAAM,EAAC,MAApC;AAA2CC,QAAAA,KAAK,EAAC;AAAjD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC,KAAP;AAAa,sBAAa,KAA1B;AAAgC6E,QAAAA,SAAS,EAAC;AAA1C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA;AAAK,MAAA,KAAK,EAAExE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKmB,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,KAA6C,KAAK/C,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,EAA0CD,IAA5E,CAA7C,GAA+HQ,KAAK,CAAC,KAAKtD,KAAL,CAAWiC,KAAX,CAAiBH,IAAjB,CAAsBH,CAAC,IAAEA,CAAC,CAACmB,IAAF,KAAS,KAAK9C,KAAL,CAAWmC,QAAX,CAAoBL,IAApB,CAAyBH,CAAC,IAAEA,CAAC,CAACoB,EAAF,KAAO,KAAnC,EAA0CD,IAA5E,EAAkF3C,GAAnF,CAAL,CAA6FoD,IAA7F,GAAoGC,GAApG,CAAwG,CAACC,CAAD,EAAGjB,IAAH,KAAU;AAC1O,0BAAQ;AAAK,QAAA,GAAG,EAAEkB,OAAO,CAAC,mBAAD,CAAjB;AAAwC,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,OAAZ;AAAoBpF,UAAAA,MAAM,EAAC,MAA3B;AAAkCC,UAAAA,KAAK,EAAC;AAAxC,SAA/C;AAAgG,QAAA,GAAG,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAF2H,CAA/H,GAEM,IAHP,CAFA,CAfJ,CAbJ,eAqCI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC,KAAP;AAAa,sBAAa,KAA1B;AAAgC6E,QAAAA,SAAS,EAAC;AAA1C,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsF,KAAKrD,KAAL,CAAWQ,IAAjG,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE7B,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKqB,KAAL,CAAWkB,WAAX,CAAuBsC,GAAvB,CAA2BhB,IAAI,IAAE;AAC9B,0BAAQ;AAAK,QAAA,GAAG,EAAEkB,OAAO,CAAC,aAAWlB,IAAI,CAACtC,KAAhB,GAAsB,GAAtB,GAA0BsC,IAAI,CAACrC,GAA/B,GAAmC,MAApC,CAAjB;AAA8D,QAAA,KAAK,EAAE;AAAC5B,UAAAA,MAAM,EAAC,MAAR;AAAeC,UAAAA,KAAK,EAAC;AAArB,SAArE;AAAmG,QAAA,EAAE,EAAEgE,IAAI,CAACtC,KAAL,GAAW,GAAX,GAAesC,IAAI,CAACrC,GAA3H;AAAgI,QAAA,GAAG,EAAE,WAASqC,IAAI,CAACtC,KAAd,GAAoB,GAApB,GAAwBsC,IAAI,CAACrC,GAA7B,GAAiC,MAAtK;AAA8K,QAAA,OAAO,EAAE,KAAKZ,UAA5L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAFA,CADL,CAFJ,CArCJ,CADJ;AAgDH;;AAhP4B;;AAkPjCL,QAAQ,CAAC0E,SAAT,GAAqB;AACjBT,EAAAA,OAAO,EAAEjF,SAAS,CAAC2F,MAAV,CAAiBC;AADT,CAArB;AAGE,eAAe9F,UAAU,CAACe,KAAD,CAAV,CAAkBG,QAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\nimport { Avatar, withStyles } from '@material-ui/core'\nimport { AvatarGroup } from '@material-ui/lab'\nimport PropTypes from 'prop-types';\n// import Websocket from 'ws';\n\nconst ws=new WebSocket('ws://localhost:3001/websocket')\n\nconst gamearea={\n    display: 'grid',\n    'grid-template-columns': 'auto' ,\n    height: 'auto',\n    width: 'auto'\n}\nconst mid={\n    display: 'grid',\n    'grid-template-columns': 'auto 33% auto' \n}\nconst playercard={\n    'margin-left': '5px',\n    'margin-right': '5px',\n    'margin-top': '2px',\n    'margin-bottom': '2px'\n}\nconst player={\n    position: 'relative',\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\nconst playerx={\n    position: 'relative',\n    width: 'auto',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\nconst stack={\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\n\nconst style=(theme)=>({\n    square: {\n        height:'75px',\n        width:'50px',\n        'background-image': \"url('./cards/back-.png')\"\n      }\n})\n\n\nclass Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards:[],\n            opnum:[],\n            loading:true,\n            user:'',\n            tablecard:{num:'',color:'back'},\n            allusers:[]\n        }\n    }\n\n    componentDidMount(){\n        this.setState({user:this.props.user})\n\n        ws.onopen=()=>{\n            console.log('open')\n        }\n        ws.onmessage=(data)=>{\n            console.log(data.data);\n            var res=JSON.parse(data.data);\n            if(res.action === \"startreturn\"){\n                console.log('startreturn');\n                this.state.playercards=res.cards;\n                this.state.tablecard=res.tablecard;\n                var x=1;\n                for(var d of res.users){\n                    if(d!==this.state.user){\n                        this.state.allusers.push({name:d,op:'op'+x});\n                        this.state.opnum.push({name:d,num:7});\n                        x++;\n                    } else {\n                        this.state.allusers.push({name:d,op:'player'});\n                        this.state.opnum.push({name:d,num:7});\n                    }\n                }\n                console.log(this.state.allusers);\n                if(document.getElementsByClassName(this.state.allusers.find(x=>x.name===res.turn).op+'p')[0]){\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===res.turn).op+'p')[0].style.border='solid green 3px';\n                }\n                console.log(this.state.opnum);\n                this.setState({loading:false});\n                if(res.turn===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('playerp')[0].style.border='none';\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if(res.action===\"nextturn\"){\n                this.setState({tablecard:res.tablecard,opnum:res.op})\n                document.getElementsByClassName('playerp')[0].style.border='none';\n                console.log(this.state.opnum.find(x=>x.turn===1).name);\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===this.state.opnum.find(x=>x.turn===1).name).op+'p')[0].style.border='solid green 3px';\n                this.nextturn(res.turn,res.addcards);\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===this.state.opnum.find(x=>x.turn===1).name).op+'p')[0].style.border='none';\n            }\n            else if(res.action===\"win\"){\n                this.win(res.user);\n            }\n            else if(res.action===\"retry\"){\n                ws.send(JSON.stringify({action:'start',user:this.state.user}));\n            }\n            else if(res.action===\"drawrep\"){\n                this.state.opnum=res.op;\n                if(res.user===this.state.user){\n                    this.drawCard(res.addcard)\n                }\n                this.setState();\n            }\n        }\n\n    }\n\n    win=(winn)=>{\n        alert(winn+\" wins\")\n    }\n    \n\n    handlePlay=(e)=>{\n        // var card=e.target;\n        console.log(e.target);\n        var card=e.target.id.split('-');\n        if(card[0]==='black'){\n            this.putblackcard(card);\n        } else if(card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num){\n            this.putcard(card);\n        } else if(this.state.tablecard.color==='black'){\n            this.putcard(card);\n        }\n        \n    }\n\n    nextturn=(turn,addcards)=>{\n        if(turn===this.state.user){\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if((this.state.tablecard.num===\"+2\" || this.state.tablecard.num===\"+4\")  && addcards.length!==0){\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({action:'d2', user:this.state.user}));\n            }else if((this.state.tablecard.num===\"+2\" || this.state.tablecard.num===\"+4\") && addcards.length===0){\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        this.setState();\n    }\n    drawCard=(addcards)=>{\n        this.state.playercards.push(addcards);\n        this.setState();\n    }\n\n    putblackcard=(card)=>{\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        } else if(this.state.playercards.filter(x=>x.color===card[0] || x.num === card[1]).length === 0){\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        }\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x=>x.num===card[1] && x.color===card[0])),1);\n        this.setState({playercards:this.state.playercards});\n        if(document.getElementsByClassName('player')[0].childNodes.length===0){\n            ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        }\n    }\n\n    putcard=(card)=>{\n        if(card[1] === 'R'){\n            ws.send(JSON.stringify({action:'rplayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if( card[1]==='S'){\n            ws.send(JSON.stringify({action:'splayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if(card[1] === '+2'){\n            ws.send(JSON.stringify({action:'2played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else {\n            ws.send(JSON.stringify({action:'played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        }\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x=>x.num===card[1] && x.color===card[0])),1);\n        this.setState({playercards:this.state.playercards});\n        if(document.getElementsByClassName('player')[0].childNodes.length===0){\n            ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        }\n    }\n\n    ready=(e)=>{\n        ws.send(JSON.stringify({action:'start',user:this.state.user}))\n        e.target.style.display='none';\n    }    \n\n    drawCard=()=>{\n        ws.send(JSON.stringify({action:'draw',played:this.state.user}));\n    }\n\n    // <div className={props+'p'} style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.allusers.find(x=>x.op=props).name}</div>\n    //     <AvatarGroup>\n    //     {Array(this.state.opnum.find(this.state.allusers.find(x=>x.op=props).name).num).fill().map((_, i) => <Avatar src={require('./cards/back-.png')} ></Avatar>)}\n    //     </AvatarGroup>\n\n    render() {\n        const {classes} = this.props\n        return (\n            <div className='gamearea' style={gamearea}>\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1' style={{transform:'rotateZ(180deg)',height:'auto',width:'auto'}}>\n                    <div className='op1p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>Opponent1</div>\n                    <div style={player}>\n                    {this.state.allusers.find(x=>x.op==='op1') && this.state.opnum.find(x=>x.name===this.state.allusers.find(x=>x.op==='op1').name)?Array(this.state.opnum.find(x=>x.name===this.state.allusers.find(x=>x.op==='op1').name).num).fill().map((_,data)=>{\n                            return (<img src={require(\"./cards/back-.png\")} style={{background:'black',height:'75px',width:'50px'}} alt='back'></img>)\n                        }):null}\n                    </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='mid' style={mid}>\n                    <div className='op2' style={{transform:'rotateZ(90deg)',height:'auto',width:'auto'}}>\n                    <div className='op2p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>Opponent2</div>\n                    <div style={playerx}>\n                    {this.state.allusers.find(x=>x.op==='op2') && this.state.opnum.find(x=>x.name===this.state.allusers.find(x=>x.op==='op2').name)?Array(this.state.opnum.find(x=>x.name===this.state.allusers.find(x=>x.op==='op2').name).num).fill().map((_,data)=>{\n                            return (<img src={require(\"./cards/back-.png\")} style={{background:'black',height:'75px',width:'50px'}} alt='back'></img>)\n                        }):null}\n                        </div>\n                    </div>\n                    <div className='stack' style={stack}>\n                        <div>\n                            <img src={require(\"./cards/\"+this.state.tablecard.color+\"-\"+this.state.tablecard.num+\".png\")} style={{height:'75px',width:'50px'}} id={this.state.tablecard.color+\"-\"+this.state.tablecard.num} alt={\"cards/\"+this.state.tablecard.color+\"-\"+this.state.tablecard.num+\".png\"}></img>\n                            <img src={require(\"./cards/back-.png\")} alt={'deck'} style={{height:'75px',width:'50px',background:'black'}} onClick={this.drawCard}></img>\n                        </div>\n                    </div>\n                    <div className='op3' style={{transform:'rotateZ(270deg)',height:'auto',width:'auto'}}>\n                    <div className='op3p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>Opponent3</div>\n                    <div style={playerx}>\n                    {this.state.allusers.find(x=>x.op==='op3') && this.state.opnum.find(x=>x.name===this.state.allusers.find(x=>x.op==='op3').name)?Array(this.state.opnum.find(x=>x.name===this.state.allusers.find(x=>x.op==='op3').name).num).fill().map((_,data)=>{\n                            return (<img src={require(\"./cards/back-.png\")} style={{background:'black',height:'75px',width:'50px'}} alt='back'></img>)\n                        }):null}\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='playerp' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.user}</div>\n                    <div className='player' style={player}>\n                        {this.state.playercards.map(data=>{\n                            return (<img src={require(\"./cards/\"+data.color+\"-\"+data.num+\".png\")} style={{height:'75px',width:'50px'}} id={data.color+\"-\"+data.num} alt={\"cards/\"+data.color+\"-\"+data.num+\".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nGamearea.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  export default withStyles(style)(Gamearea);"]},"metadata":{},"sourceType":"module"}