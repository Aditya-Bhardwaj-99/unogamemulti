{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/*\n    logout?\n*/\nimport React, { Component } from \"react\";\nimport \"./Game.css\";\nimport { PacmanLoader } from \"react-spinners\";\nimport Opo from \"./Opo\";\nimport { TimelineLite } from \"gsap\"; // import Websocket from 'ws';\n\nconst ws = new WebSocket(\"ws://localhost:3001/websocket\");\nconst gamearea = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto\",\n  height: \"auto\",\n  width: \"auto\"\n};\nconst mid = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto 33% auto\"\n};\nconst player = {\n  position: \"relative\",\n  width: \"50%\",\n  height: \"auto\",\n  \"margin-left\": \"25%\",\n  \"margin-right\": \"25%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst playerx = {\n  position: \"relative\",\n  width: \"auto\",\n  height: \"auto\",\n  \"margin-right\": \"25%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginLeft: \"50%\"\n};\nconst stack = {\n  width: \"50%\",\n  height: \"auto\",\n  \"margin-left\": \"25%\",\n  \"margin-right\": \"25%\"\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split(\"-\");\n      var temp = document.createElement(\"img\");\n      temp.id = e.target.id;\n      temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName(\"player\")[0].appendChild(temp);\n      temp.style.position = \"absolute\";\n      temp.className = \"tempplayer\";\n      temp.style.opacity = 0;\n      this.timeline.to(temp, 0.01, {\n        x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n        y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n      }).to(temp, 0.01, {\n        opacity: 1,\n        onComplete: () => {\n          ws.send(JSON.stringify({\n            action: \"opplayedanim\",\n            card: {\n              color: card[0],\n              num: card[1]\n            },\n            user: this.state.user\n          }));\n        }\n      });\n\n      if (card[0] === \"black\") {\n        this.putblackcard(card, e);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card, e);\n      } else if (this.state.tablecard.color === \"black\") {\n        this.putcard(card, e);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: \"d2\",\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      let e = {\n        target: document.getElementsByClassName(\"tablecard\")[0]\n      };\n      let dest = document.getElementsByClassName(\"player\")[0].lastChild;\n      let temp = document.createElement(\"img\");\n      temp.src = require(\"./cards/back-.png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n      temp.style.position = \"absolute\";\n      temp.className = \"tempplayer\";\n      temp.style.opacity = 0;\n\n      for (let data of addcards) {\n        ws.send(JSON.stringify({\n          action: \"drawanim\",\n          number: addcards.length,\n          user: this.state.user\n        }));\n        this.timeline.to(temp, 0.01, {\n          x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n        }).to(temp, 0.25, {\n          opacity: 1,\n          ease: \"Power2.easeIn\"\n        }).to(temp, 0.25, {\n          rotateY: 90,\n          onComplete: () => {\n            temp.src = require(\"./cards/\" + data.color + \"-\" + data.num + \".png\");\n          }\n        }).to(temp, 0.25, {\n          rotateY: 0\n        }).to(temp, 0.5, {\n          x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          onComplete: () => {\n            this.state.playercards.push(addcards);\n            temp.parentNode.removeChild(temp);\n          }\n        }).play();\n        this.setState({\n          playercards: this.state.playercards\n        });\n      }\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.putblackcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName(\"tempplayer\")[0];\n      var box = document.getElementsByClassName(\"tablecard\")[0].getBoundingClientRect();\n\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"red\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"green\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"W\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log(\"nothing\");\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"red\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"green\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"+4\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log(\"nothing\");\n        }\n      }\n    };\n\n    this.putcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName(\"tempplayer\")[0];\n      var box = document.getElementsByClassName(\"tablecard\")[0].getBoundingClientRect();\n      this.timeline.to(temp, 0.5, {\n        x: box.x - temp.getBoundingClientRect().x + 50,\n        y: box.y - temp.getBoundingClientRect().y,\n        onComplete: () => {\n          if (card[1] === \"R\") {\n            ws.send(JSON.stringify({\n              action: \"rplayed\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else if (card[1] === \"S\") {\n            ws.send(JSON.stringify({\n              action: \"splayed\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else if (card[1] === \"+2\") {\n            ws.send(JSON.stringify({\n              action: \"2played\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          } else {\n            ws.send(JSON.stringify({\n              action: \"played\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user\n            }));\n          }\n\n          temp.parentNode.removeChild(temp);\n        }\n      }).play();\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: \"start\",\n        user: this.state.user\n      }));\n      e.target.style.display = \"none\";\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: \"draw\",\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: \"\",\n      tablecard: {\n        num: \"\",\n        color: \"back\"\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n    this.timeline = new TimelineLite({\n      paused: true\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log(\"open\");\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log(\"startreturn\");\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: \"op\" + x\n            });\n            this.state[\"op\" + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: \"player\"\n            });\n            this.state[\"player\"] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n        } else {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: \"start\",\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        var e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        var dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        var temp = document.createElement(\"img\");\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState();\n\n        if (res.user === this.state.user) {\n          temp.src = require(\"./cards/back-.png\");\n          temp.style.height = e.target.style.height;\n          temp.style.width = e.target.style.width;\n          document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n          temp.style.position = \"absolute\";\n          temp.className = \"tempplayer\";\n          temp.style.opacity = 0;\n          ws.send(JSON.stringify({\n            action: \"drawanim\",\n            number: res.addcard.length,\n            user: this.state.user\n          }));\n          this.timeline.to(temp, 0.01, {\n            x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n          }).to(temp, 0.25, {\n            opacity: 1,\n            ease: \"Power2.easeIn\"\n          }).to(temp, 0.25, {\n            rotateY: 90,\n            onComplete: () => {\n              console.log(res.addcard[0].color + \"-\" + res.addcard[0].num);\n              temp.src = require(\"./cards/\" + res.addcard[0].color + \"-\" + res.addcard[0].num + \".png\");\n            }\n          }).to(temp, 0.25, {\n            rotateY: 0\n          }).to(temp, 0.5, {\n            x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            onComplete: () => {\n              document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n              this.drawCard(res.addcard);\n              temp.parentNode.removeChild(temp);\n            }\n          }).play();\n        }\n      } else if (res.action === \"drawanimresp\") {\n        let rotation;\n\n        if (this.state.user === res.user) {\n          return;\n        } else if (this.state.op1.name === res.user) {\n          rotation = 180;\n        } else if (this.state.op2.name === res.user) {\n          rotation = 90;\n        } else if (this.state.op3.name === res.user) {\n          rotation = 270;\n        }\n\n        let dest = document.getElementsByClassName(res.user + \"cards\")[0];\n        let temp = document.createElement(\"img\");\n        let e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n\n        for (let i = 0; i < res.number; i++) {\n          this.timeline.to(temp, 0.01, {\n            x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n            y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n          }).to(temp, 0.25, {\n            opacity: 1,\n            ease: \"Power2.easeIn\",\n            background: \"black\"\n          }).to(temp, 0.5, {\n            x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            rotateZ: rotation,\n            onComplete: () => {\n              temp.parentNode.removeChild(temp);\n            }\n          }).play();\n        }\n      } else if (res.action === \"opresp\") {\n        let rotation;\n\n        if (this.state.user === res.user) {\n          return;\n        } else if (this.state.op1.name === res.user) {\n          rotation = 180;\n        } else if (this.state.op2.name === res.user) {\n          rotation = 90;\n        } else if (this.state.op3.name === res.user) {\n          rotation = 270;\n        }\n\n        let temp = document.createElement(\"img\");\n        let dest = document.getElementsByClassName(\"tablecard\")[0];\n        let target = document.getElementsByClassName(res.user + \"cards\")[0];\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = dest.style.height;\n        temp.style.width = dest.style.width;\n        target.parentNode.appendChild(temp);\n        temp.className = \"tempopplayer\";\n        temp.style.opacity = 0;\n        this.timeline.to(temp, 0.1, {\n          x: target.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n          y: target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n        }).to(temp, 0.1, {\n          opacity: 1,\n          ease: \"Power2.easeIn\"\n        }).to(temp, 0.25, {\n          rotateY: 90,\n          onComplete: () => {\n            temp.src = require(\"./cards/\" + res.card.color + \"-\" + res.card.num + \".png\");\n          }\n        }).to(temp, 0.25, {\n          rotateY: 0,\n          rotateZ: rotation\n        }).to(temp, 0.25, {\n          x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          onComplete: () => {\n            temp.parentNode.removeChild(temp);\n          }\n        }).play();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: \"rotateZ(180deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 13\n      }\n    }, this.state.op1.name ? this.state.op1.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 13\n      }\n    }, this.state.op1.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op1.num,\n      name: this.state.op1.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 17\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: \"rotateZ(90deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 13\n      }\n    }, this.state.op2.name ? this.state.op2.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 13\n      }\n    }, this.state.op2.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op2.num,\n      name: this.state.op2.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 17\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: \"75px\",\n        width: \"50px\"\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: \"deck\",\n      style: {\n        height: \"75px\",\n        width: \"50px\",\n        background: \"black\"\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: \"rotateZ(270deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 13\n      }\n    }, this.state.op3.name ? this.state.op3.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 13\n      }\n    }, this.state.op3.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op3.num,\n      name: this.state.op3.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 17\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: \"25%\",\n        marginLeft: \"40%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 11\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: \"75px\",\n          width: \"50px\"\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 17\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Opo","TimelineLite","ws","WebSocket","gamearea","display","height","width","mid","player","position","justifyContent","alignItems","playerx","marginLeft","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","temp","document","createElement","src","require","style","getElementsByClassName","appendChild","className","opacity","timeline","to","x","getBoundingClientRect","y","onComplete","send","JSON","stringify","action","color","num","user","state","putblackcard","tablecard","putcard","nextturn","turn","addcards","pointerEvents","length","drawTwoCards","dest","lastChild","data","number","ease","rotateY","playercards","push","parentNode","removeChild","play","setState","drawCard","splice","indexOf","find","box","userInput","prompt","toUpperCase","played","filter","ready","drawCarde","loading","allusers","op1","op2","op3","paused","componentDidMount","props","onopen","onmessage","res","parse","cards","d","users","name","op","opnum","border","addcard","rotation","i","background","rotateZ","render","transform","textAlign","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/*\n    logout?\n*/\nimport React, { Component } from \"react\";\nimport \"./Game.css\";\nimport { PacmanLoader } from \"react-spinners\";\nimport Opo from \"./Opo\";\nimport { TimelineLite } from \"gsap\";\n// import Websocket from 'ws';\n\nconst ws = new WebSocket(\"ws://localhost:3001/websocket\");\n\nconst gamearea = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto\",\n  height: \"auto\",\n  width: \"auto\",\n};\nconst mid = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto 33% auto\",\n};\nconst player = {\n  position: \"relative\",\n  width: \"50%\",\n  height: \"auto\",\n  \"margin-left\": \"25%\",\n  \"margin-right\": \"25%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\nconst playerx = {\n  position: \"relative\",\n  width: \"auto\",\n  height: \"auto\",\n  \"margin-right\": \"25%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginLeft: \"50%\",\n};\nconst stack = {\n  width: \"50%\",\n  height: \"auto\",\n  \"margin-left\": \"25%\",\n  \"margin-right\": \"25%\",\n};\n\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: \"\",\n      tablecard: { num: \"\", color: \"back\" },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {},\n    };\n    this.timeline = new TimelineLite({ paused: true });\n  }\n\n  componentDidMount() {\n    this.setState({ user: this.props.user });\n\n    ws.onopen = () => {\n      console.log(\"open\");\n    };\n    ws.onmessage = (data) => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n      if (res.action === \"startreturn\") {\n        console.log(\"startreturn\");\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({ name: d, op: \"op\" + x });\n            this.state[\"op\" + x] = { name: d, num: 7 };\n            x++;\n          } else {\n            this.state.allusers.push({ name: d, op: \"player\" });\n            this.state[\"player\"] = { name: d, num: 7 };\n          }\n        }\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({ loading: false });\n        //add border condition on ps\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents =\n            \"auto\";\n        } else {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents =\n            \"none\";\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n        this.setState({ tablecard: res.tablecard });\n        //add border conditions on ps\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n        this.setState({ tablecard: res.tablecard });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({ action: \"start\", user: this.state.user }));\n      } else if (res.action === \"drawrep\") {\n        var e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n        var dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        var temp = document.createElement(\"img\");\n\n        let x = 1;\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n        this.setState();\n        if (res.user === this.state.user) {\n          temp.src = require(\"./cards/back-.png\");\n          temp.style.height = e.target.style.height;\n          temp.style.width = e.target.style.width;\n          document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n          temp.style.position = \"absolute\";\n          temp.className = \"tempplayer\";\n          temp.style.opacity = 0;\n          ws.send(\n            JSON.stringify({\n              action: \"drawanim\",\n              number: res.addcard.length,\n              user: this.state.user,\n            })\n          );\n          this.timeline\n            .to(temp, 0.01, {\n              x:\n                e.target.getBoundingClientRect().x -\n                temp.getBoundingClientRect().x +\n                50,\n              y:\n                e.target.getBoundingClientRect().y -\n                temp.getBoundingClientRect().y,\n            })\n            .to(temp, 0.25, { opacity: 1, ease: \"Power2.easeIn\" })\n            .to(temp, 0.25, {\n              rotateY: 90,\n              onComplete: () => {\n                console.log(res.addcard[0].color + \"-\" + res.addcard[0].num);\n                temp.src = require(\"./cards/\" +\n                  res.addcard[0].color +\n                  \"-\" +\n                  res.addcard[0].num +\n                  \".png\");\n              },\n            })\n            .to(temp, 0.25, { rotateY: 0 })\n            .to(temp, 0.5, {\n              x:\n                dest.getBoundingClientRect().x -\n                temp.getBoundingClientRect().x +\n                50,\n              y:\n                dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                document.getElementsByClassName(\n                  \"player\"\n                )[0].style.pointerEvents = \"auto\";\n                this.drawCard(res.addcard);\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n        }\n      } else if (res.action === \"drawanimresp\") {\n          let rotation;\n        if (this.state.user === res.user) {\n          return;\n        } else if(this.state.op1.name===res.user){\n            rotation=180;\n        } else if(this.state.op2.name===res.user){\n            rotation=90\n        } else if(this.state.op3.name===res.user){\n            rotation=270\n        }\n        let dest = document.getElementsByClassName(res.user + \"cards\")[0];\n        let temp = document.createElement(\"img\");\n        let e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n        for (let i = 0; i < res.number; i++) {\n          this.timeline\n            .to(temp, 0.01, {\n              x:\n                e.target.getBoundingClientRect().x -\n                temp.getBoundingClientRect().x,\n              y:\n                e.target.getBoundingClientRect().y -\n                temp.getBoundingClientRect().y,\n            })\n            .to(temp, 0.25, {\n              opacity: 1,\n              ease: \"Power2.easeIn\",\n              background: \"black\",\n            })\n            .to(temp, 0.5, {\n              x:\n                dest.getBoundingClientRect().x -\n                temp.getBoundingClientRect().x +\n                50,\n              y:\n                dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n                rotateZ:rotation,\n              onComplete: () => {\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n        }\n      } else if (res.action === \"opresp\") {\n          let rotation;\n        if (this.state.user === res.user) {\n          return;\n        } else if(this.state.op1.name===res.user){\n              rotation=180;\n          } else if(this.state.op2.name===res.user){\n              rotation=90\n          } else if(this.state.op3.name===res.user){\n              rotation=270\n          }\n        let temp = document.createElement(\"img\");\n        let dest = document.getElementsByClassName(\"tablecard\")[0];\n        let target = document.getElementsByClassName(res.user + \"cards\")[0];\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = dest.style.height;\n        temp.style.width = dest.style.width;\n        target.parentNode.appendChild(temp);\n        temp.className = \"tempopplayer\";\n        temp.style.opacity = 0;\n        this.timeline\n          .to(temp, 0.1, {\n            x:\n              target.getBoundingClientRect().x -\n              temp.getBoundingClientRect().x,\n            y:\n              target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          })\n          .to(temp, 0.1, { opacity: 1, ease: \"Power2.easeIn\" })\n          .to(temp, 0.25, {\n            rotateY: 90,\n            onComplete: () => {\n              temp.src = require(\"./cards/\" +\n                res.card.color +\n                \"-\" +\n                res.card.num +\n                \".png\");\n            },\n          })\n          .to(temp, 0.25, { rotateY: 0,rotateZ:rotation})\n          .to(temp, 0.25, {\n            x:\n              dest.getBoundingClientRect().x -\n              temp.getBoundingClientRect().x +\n              50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            onComplete: () => {\n              temp.parentNode.removeChild(temp);\n            },\n          })\n          .play();\n      }\n    };\n  }\n\n  win = (winn) => {\n    alert(winn + \" wins\");\n  };\n\n  handlePlay = async (e) => {\n    console.log(e.target);\n    var card = e.target.id.split(\"-\");\n    var temp = document.createElement(\"img\");\n    temp.id = e.target.id;\n    temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n    temp.style.height = e.target.style.height;\n    temp.style.width = e.target.style.width;\n    document.getElementsByClassName(\"player\")[0].appendChild(temp);\n    temp.style.position = \"absolute\";\n    temp.className = \"tempplayer\";\n    temp.style.opacity = 0;\n    this.timeline\n      .to(temp, 0.01, {\n        x:\n          e.target.getBoundingClientRect().x -\n          temp.getBoundingClientRect().x +\n          50,\n        y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n      })\n      .to(temp, 0.01, {\n        opacity: 1,\n        onComplete: () => {\n          ws.send(\n            JSON.stringify({\n              action: \"opplayedanim\",\n              card: { color: card[0], num: card[1] },\n              user: this.state.user,\n            })\n          );\n        },\n      });\n    if (card[0] === \"black\") {\n      this.putblackcard(card, e);\n    } else if (\n      card[0] === this.state.tablecard.color ||\n      card[1] === this.state.tablecard.num\n    ) {\n      this.putcard(card, e);\n    } else if (this.state.tablecard.color === \"black\") {\n      this.putcard(card, e);\n    }\n  };\n\n  nextturn = (turn, addcards) => {\n    if (turn === this.state.user) {\n      document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n      if (\n        (this.state.tablecard.num === \"+2\" ||\n          this.state.tablecard.num === \"+4\") &&\n        addcards.length !== 0\n      ) {\n        this.drawTwoCards(addcards);\n        ws.send(JSON.stringify({ action: \"d2\", user: this.state.user }));\n      } else if (\n        (this.state.tablecard.num === \"+2\" ||\n          this.state.tablecard.num === \"+4\") &&\n        addcards.length === 0\n      ) {\n      }\n    } else {\n      document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n    }\n  };\n\n  drawTwoCards = (addcards) => {\n    let e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n    let dest = document.getElementsByClassName(\"player\")[0].lastChild;\n    let temp = document.createElement(\"img\");\n    temp.src = require(\"./cards/back-.png\");\n    temp.style.height = e.target.style.height;\n    temp.style.width = e.target.style.width;\n    document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n    temp.style.position = \"absolute\";\n    temp.className = \"tempplayer\";\n    temp.style.opacity = 0;\n    for (let data of addcards) {\n      ws.send(\n        JSON.stringify({\n          action: \"drawanim\",\n          number: addcards.length,\n          user: this.state.user,\n        })\n      );\n      this.timeline\n        .to(temp, 0.01, {\n          x:\n            e.target.getBoundingClientRect().x -\n            temp.getBoundingClientRect().x +\n            50,\n          y:\n            e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n        })\n        .to(temp, 0.25, { opacity: 1, ease: \"Power2.easeIn\" })\n        .to(temp, 0.25, {\n          rotateY: 90,\n          onComplete: () => {\n            temp.src = require(\"./cards/\" +\n              data.color +\n              \"-\" +\n              data.num +\n              \".png\");\n          },\n        })\n        .to(temp, 0.25, { rotateY: 0 })\n        .to(temp, 0.5, {\n          x:\n            dest.getBoundingClientRect().x -\n            temp.getBoundingClientRect().x +\n            50,\n          y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          onComplete: () => {\n            this.state.playercards.push(addcards);\n            temp.parentNode.removeChild(temp);\n          },\n        })\n        .play();\n      this.setState({ playercards: this.state.playercards });\n    }\n  };\n  drawCard = (addcards) => {\n    this.state.playercards.push(...addcards);\n    console.log(this.state.playercards);\n    this.setState({ playercards: this.state.playercards });\n  };\n\n  putblackcard = async (card, e) => {\n    this.state.playercards.splice(\n      this.state.playercards.indexOf(\n        this.state.playercards.find(\n          (x) => x.num === card[1] && x.color === card[0]\n        )\n      ),\n      1\n    );\n    this.setState({ playercards: this.state.playercards });\n    let temp = document.getElementsByClassName(\"tempplayer\")[0];\n    var box = document\n      .getElementsByClassName(\"tablecard\")[0]\n      .getBoundingClientRect();\n    if (card[1] === \"W\") {\n      let userInput = prompt(\n        \"What color do you want your Wild card to be?\",\n        \"R, Y, G or B?\"\n      );\n      switch (userInput.toUpperCase()) {\n        case \"R\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"W\", color: \"red\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"Y\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"W\", color: \"yellow\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"G\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"W\", color: \"green\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"B\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"W\", color: \"blue\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        default:\n          console.log(\"nothing\");\n      }\n    } else if (\n      this.state.playercards.filter(\n        (x) => x.color === card[0] || x.num === card[1]\n      ).length === 0\n    ) {\n      let userInput = prompt(\n        \"What color do you want your +4 card to be?\",\n        \"R, Y, G or B?\"\n      );\n      switch (userInput.toUpperCase()) {\n        case \"R\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"+4\", color: \"red\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"Y\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"+4\", color: \"yellow\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"G\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"+4\", color: \"green\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"B\":\n          this.timeline\n            .to(temp, 0.5, {\n              x: box.x - temp.getBoundingClientRect().x + 50,\n              y: box.y - temp.getBoundingClientRect().y,\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"+4\", color: \"blue\" },\n                    played: this.state.user,\n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        default:\n          console.log(\"nothing\");\n      }\n    }\n  };\n\n  putcard = async (card, e) => {\n    this.state.playercards.splice(\n      this.state.playercards.indexOf(\n        this.state.playercards.find(\n          (x) => x.num === card[1] && x.color === card[0]\n        )\n      ),\n      1\n    );\n    this.setState({ playercards: this.state.playercards });\n    let temp = document.getElementsByClassName(\"tempplayer\")[0];\n    var box = document\n      .getElementsByClassName(\"tablecard\")[0]\n      .getBoundingClientRect();\n    this.timeline\n      .to(temp, 0.5, {\n        x: box.x - temp.getBoundingClientRect().x + 50,\n        y: box.y - temp.getBoundingClientRect().y,\n        onComplete: () => {\n          if (card[1] === \"R\") {\n            ws.send(\n              JSON.stringify({\n                action: \"rplayed\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user,\n              })\n            );\n          } else if (card[1] === \"S\") {\n            ws.send(\n              JSON.stringify({\n                action: \"splayed\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user,\n              })\n            );\n          } else if (card[1] === \"+2\") {\n            ws.send(\n              JSON.stringify({\n                action: \"2played\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user,\n              })\n            );\n          } else {\n            ws.send(\n              JSON.stringify({\n                action: \"played\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user,\n              })\n            );\n          }\n          temp.parentNode.removeChild(temp);\n        },\n      })\n      .play();\n  };\n\n  ready = (e) => {\n    ws.send(JSON.stringify({ action: \"start\", user: this.state.user }));\n    e.target.style.display = \"none\";\n  };\n\n  drawCarde = () => {\n    ws.send(JSON.stringify({ action: \"draw\", played: this.state.user }));\n  };\n\n  render() {\n    return (\n      <div className=\"gamearea\" style={gamearea}>\n        <button onClick={this.ready}>ready</button>\n        <PacmanLoader\n          color=\"yellow\"\n          css=\"margin-top:20%;margin-left:45%;\"\n          loading={this.state.loading}\n        ></PacmanLoader>\n        <div className=\"gridItem\">\n          <div\n            className=\"op1\"\n            style={{\n              transform: \"rotateZ(180deg)\",\n              height: \"auto\",\n              width: \"auto\",\n            }}\n          >\n            <div\n              className=\"op1p\"\n              style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n            >\n              {this.state.op1.name ? this.state.op1.name : \"\"}\n            </div>\n            <div className=\"whereop1resides\" style={player}>\n              {this.state.op1.num ? (\n                <Opo\n                  cardnum={this.state.op1.num}\n                  name={this.state.op1.name}\n                ></Opo>\n              ) : null}\n            </div>\n          </div>\n        </div>\n        <div className=\"gridItem\" id=\"mid\" style={mid}>\n          <div\n            className=\"op2\"\n            style={{\n              transform: \"rotateZ(90deg)\",\n              height: \"auto\",\n              width: \"auto\",\n            }}\n          >\n            <div\n              className=\"op2p\"\n              style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n            >\n              {this.state.op2.name ? this.state.op2.name : \"\"}\n            </div>\n            <div className=\"whereop2resides\" style={playerx}>\n              {this.state.op2.num ? (\n                <Opo\n                  cardnum={this.state.op2.num}\n                  name={this.state.op2.name}\n                ></Opo>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"stack\" style={stack}>\n            <div>\n              <img\n                src={require(\"./cards/\" +\n                  this.state.tablecard.color +\n                  \"-\" +\n                  this.state.tablecard.num +\n                  \".png\")}\n                className=\"tablecard\"\n                style={{ height: \"75px\", width: \"50px\" }}\n                id={this.state.tablecard.color + \"-\" + this.state.tablecard.num}\n                alt={\n                  \"cards/\" +\n                  this.state.tablecard.color +\n                  \"-\" +\n                  this.state.tablecard.num +\n                  \".png\"\n                }\n              ></img>\n              <img\n                src={require(\"./cards/back-.png\")}\n                alt={\"deck\"}\n                style={{ height: \"75px\", width: \"50px\", background: \"black\" }}\n                onClick={this.drawCarde}\n              ></img>\n            </div>\n          </div>\n          <div\n            className=\"op3\"\n            style={{\n              transform: \"rotateZ(270deg)\",\n              height: \"auto\",\n              width: \"auto\",\n            }}\n          >\n            <div\n              className=\"op3p\"\n              style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n            >\n              {this.state.op3.name ? this.state.op3.name : \"\"}\n            </div>\n            <div className=\"whereop3resides\" style={playerx}>\n              {this.state.op3.num ? (\n                <Opo\n                  cardnum={this.state.op3.num}\n                  name={this.state.op3.name}\n                ></Opo>\n              ) : null}\n            </div>\n          </div>\n        </div>\n        <div className=\"gridItem\" id=\"playerplace\">\n          <div\n            className=\"playerp\"\n            style={{ width: \"25%\", marginLeft: \"40%\", textAlign: \"center\" }}\n          >\n            {this.state.user}\n          </div>\n          <div className=\"player\" style={player}>\n            {this.state.playercards.map((data) => {\n              return (\n                <img\n                  src={require(\"./cards/\" +\n                    data.color +\n                    \"-\" +\n                    data.num +\n                    \".png\")}\n                  style={{ height: \"75px\", width: \"50px\" }}\n                  id={data.color + \"-\" + data.num}\n                  alt={\"cards/\" + data.color + \"-\" + data.num + \".png\"}\n                  onClick={this.handlePlay}\n                ></img>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}