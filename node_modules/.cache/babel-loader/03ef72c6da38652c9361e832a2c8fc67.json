{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners'; // import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket');\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.handlePlay = e => {\n      // var card=e.target;\n      console.log(e.target);\n      var card = e.target.id.split('-');\n\n      if (card[0] === 'black') {\n        this.putblackcard(card);\n      } else if (card[0] === this.tablecard.color || card[1] === this.tablecard.num) {\n        this.putcard(card);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState();\n    };\n\n    this.putblackcard = card => {\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n\n      this.state.playercards = this.state.playercards.filter(obj => {\n        if (obj.num !== card[1] && obj.color !== card[0]) {\n          return obj;\n        }\n      });\n      this.setState();\n\n      if (document.getElementsByClassName('player')[0].childNodes.length === 0) {\n        ws.send(JSON.stringify({\n          action: 'win',\n          user: this.state.user\n        }));\n      }\n    };\n\n    this.putcard = card => {\n      if (card[1] === 'R') {\n        ws.send(JSON.stringify({\n          action: 'rplayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === 'S') {\n        ws.send(JSON.stringify({\n          action: 'splayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === '+2') {\n        ws.send(JSON.stringify({\n          action: '2played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else {\n        ws.send(JSON.stringify({\n          action: 'played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      }\n\n      this.state.playercards = this.state.playercards.filter(obj => {\n        if (obj.num !== card[1] && obj.color !== card[0]) {\n          return obj;\n        }\n      });\n      this.setState();\n\n      if (document.getElementsByClassName('player')[0].childNodes.length === 0) {\n        ws.send(JSON.stringify({\n          action: 'win',\n          user: this.state.user\n        }));\n      }\n    };\n\n    this.ready = () => {\n      ws.send(JSON.stringify({\n        action: 'start',\n        user: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      opnum: [7, 7, 7, 7],\n      loading: true,\n      user: '',\n      tablecard: '',\n      allusers: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log('open');\n    };\n\n    ws.onmessage = data => {\n      console.log(data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log('startreturn');\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n          }\n        }\n\n        console.log(this.state.allusers);\n        document.getElementsByClassName(this.state.allusers.find(x => x.name === res.turn).op)[0].style.border = 'solid black 3px';\n        this.setState({\n          loading: false\n        });\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (res.action === \"nextturn\") {\n        this.state.tablecard = res.tablecard;\n        this.state.opnum = res.op;\n        document.getElementsByClassName(this.state.allusers.find(x => x.name === res.turn).op)[0].style.border = 'solid black 3px';\n        this.setState();\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        this.state.opnum = res.op;\n\n        if (res.user === this.state.user) {\n          this.drawTwoCards(res.addcard);\n        }\n\n        this.setState();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","ws","WebSocket","Gamearea","constructor","handlePlay","e","console","log","target","card","id","split","putblackcard","tablecard","color","num","putcard","nextturn","turn","addcards","state","user","document","getElementsByClassName","style","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","playercards","push","setState","userInput","prompt","toUpperCase","played","filter","x","obj","childNodes","ready","opnum","loading","allusers","componentDidMount","props","onopen","onmessage","data","res","parse","cards","d","users","name","op","find","border","win","addcard","render","map","require","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CACA;;AAEA,MAAMC,EAAE,GAAC,IAAIC,SAAJ,CAAc,+BAAd,CAAT;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC5CK,EAAAA,WAAW,GAAG;AACV;;AADU,SAqEdC,UArEc,GAqEFC,CAAD,IAAK;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA,UAAIC,IAAI,GAACJ,CAAC,CAACG,MAAF,CAASE,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,CAAT;;AACA,UAAGF,IAAI,CAAC,CAAD,CAAJ,KAAU,OAAb,EAAqB;AACjB,aAAKG,YAAL,CAAkBH,IAAlB;AACH,OAFD,MAEO,IAAGA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAKI,SAAL,CAAeC,KAA3B,IAAoCL,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAKI,SAAL,CAAeE,GAAlE,EAAsE;AACzE,aAAKC,OAAL,CAAaP,IAAb;AACH;AAEJ,KA/Ea;;AAAA,SAiFdQ,QAjFc,GAiFL,CAACC,IAAD,EAAMC,QAAN,KAAiB;AACtB,UAAGD,IAAI,KAAG,KAAKE,KAAL,CAAWC,IAArB,EAA0B;AACtBC,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CC,KAA7C,CAAmDC,aAAnD,GAAmE,MAAnE;;AACA,YAAG,CAAC,KAAKL,KAAL,CAAWP,SAAX,CAAqBE,GAArB,KAA2B,IAA3B,IAAmC,KAAKF,SAAL,CAAeE,GAAf,KAAqB,IAAzD,KAAmEI,QAAQ,CAACO,MAAT,KAAkB,CAAxF,EAA0F;AACtF,eAAKC,YAAL,CAAkBR,QAAlB;AACAnB,UAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,MAAM,EAAC,IAAR;AAAcV,YAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC;AAA9B,WAAf,CAAR;AACH,SAHD,MAGM,IAAG,CAAC,KAAKD,KAAL,CAAWP,SAAX,CAAqBE,GAArB,KAA2B,IAA3B,IAAmC,KAAKF,SAAL,CAAeE,GAAf,KAAqB,IAAzD,KAAkEI,QAAQ,CAACO,MAAT,KAAkB,CAAvF,EAAyF,CAC9F;AACJ,OAPD,MAOO;AACHJ,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CC,KAA7C,CAAmDC,aAAnD,GAAmE,MAAnE;AACH;AACJ,KA5Fa;;AAAA,SA8FdE,YA9Fc,GA8FAR,QAAD,IAAY;AACrB,WAAKC,KAAL,CAAWY,WAAX,CAAuBC,IAAvB,CAA4B,GAAGd,QAA/B;AACA,WAAKe,QAAL;AACH,KAjGa;;AAAA,SAmGdtB,YAnGc,GAmGAH,IAAD,IAAQ;AACjB,UAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACjB,YAAI0B,SAAS,GAAGC,MAAM,CAAC,8CAAD,EAAiD,eAAjD,CAAtB;;AACA,gBAAQD,SAAS,CAACE,WAAV,EAAR;AACI,eAAK,GAAL;AACArC,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAkDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAApE,aAAf,CAAR;AACA;;AACA,eAAK,GAAL;AACIrB,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAqDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAAvE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrB,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAoDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAAtE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrB,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,GAAL;AAASD,gBAAAA,KAAK,EAAC;AAAf,eAA5B;AAAmDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAArE,aAAf,CAAR;AACJ;;AACA;AAAUf,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAbd;AAeH,OAjBD,MAiBO,IAAG,KAAKa,KAAL,CAAWY,WAAX,CAAuBO,MAAvB,CAA8BC,CAAC,IAAEA,CAAC,CAAC1B,KAAF,KAAUL,IAAI,CAAC,CAAD,CAAd,IAAqB+B,CAAC,CAACzB,GAAF,KAAUN,IAAI,CAAC,CAAD,CAApE,EAAyEiB,MAAzE,KAAoF,CAAvF,EAAyF;AAC5F,YAAIS,SAAS,GAAGC,MAAM,CAAC,4CAAD,EAA+C,eAA/C,CAAtB;;AACA,gBAAQD,SAAS,CAACE,WAAV,EAAR;AACI,eAAK,GAAL;AACArC,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAmDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAArE,aAAf,CAAR;AACA;;AACA,eAAK,GAAL;AACIrB,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAsDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAAxE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrB,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAqDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAAvE,aAAf,CAAR;AACJ;;AACA,eAAK,GAAL;AACIrB,YAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,cAAAA,MAAM,EAAC,SAAR;AAAkBlB,cAAAA,SAAS,EAAC;AAACE,gBAAAA,GAAG,EAAC,IAAL;AAAUD,gBAAAA,KAAK,EAAC;AAAhB,eAA5B;AAAoDwB,cAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAAtE,aAAf,CAAR;AACJ;;AACA;AAAUf,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAbd;AAeH;;AACD,WAAKa,KAAL,CAAWY,WAAX,GAAyB,KAAKZ,KAAL,CAAWY,WAAX,CAAuBO,MAAvB,CAA+BE,GAAD,IAAS;AAC5D,YAAGA,GAAG,CAAC1B,GAAJ,KAAYN,IAAI,CAAC,CAAD,CAAhB,IAAuBgC,GAAG,CAAC3B,KAAJ,KAAYL,IAAI,CAAC,CAAD,CAA1C,EAA8C;AAC1C,iBAAOgC,GAAP;AACH;AACJ,OAJwB,CAAzB;AAKA,WAAKP,QAAL;;AACA,UAAGZ,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CmB,UAA7C,CAAwDhB,MAAxD,KAAiE,CAApE,EAAsE;AAClE1B,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,KAAR;AAAcV,UAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC;AAA9B,SAAf,CAAR;AACH;AACJ,KAhJa;;AAAA,SAkJdL,OAlJc,GAkJLP,IAAD,IAAQ;AACZ,UAAGA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAf,EAAmB;AACfT,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,SAAR;AAAkBlB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACN,IAAI,CAAC,CAAD,CAAT;AAAaK,YAAAA,KAAK,EAACL,IAAI,CAAC,CAAD;AAAvB,WAA5B;AAAwD6B,UAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAA1E,SAAf,CAAR;AACH,OAFD,MAEO,IAAIZ,IAAI,CAAC,CAAD,CAAJ,KAAU,GAAd,EAAkB;AACrBT,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,SAAR;AAAkBlB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACN,IAAI,CAAC,CAAD,CAAT;AAAaK,YAAAA,KAAK,EAACL,IAAI,CAAC,CAAD;AAAvB,WAA5B;AAAwD6B,UAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAA1E,SAAf,CAAR;AACH,OAFM,MAEA,IAAGZ,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAf,EAAoB;AACvBT,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,SAAR;AAAkBlB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACN,IAAI,CAAC,CAAD,CAAT;AAAaK,YAAAA,KAAK,EAACL,IAAI,CAAC,CAAD;AAAvB,WAA5B;AAAwD6B,UAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAA1E,SAAf,CAAR;AACH,OAFM,MAEA;AACHrB,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,QAAR;AAAiBlB,UAAAA,SAAS,EAAC;AAACE,YAAAA,GAAG,EAACN,IAAI,CAAC,CAAD,CAAT;AAAaK,YAAAA,KAAK,EAACL,IAAI,CAAC,CAAD;AAAvB,WAA3B;AAAuD6B,UAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWC;AAAzE,SAAf,CAAR;AACH;;AACD,WAAKD,KAAL,CAAWY,WAAX,GAAyB,KAAKZ,KAAL,CAAWY,WAAX,CAAuBO,MAAvB,CAA+BE,GAAD,IAAS;AAC5D,YAAGA,GAAG,CAAC1B,GAAJ,KAAYN,IAAI,CAAC,CAAD,CAAhB,IAAuBgC,GAAG,CAAC3B,KAAJ,KAAYL,IAAI,CAAC,CAAD,CAA1C,EAA8C;AAC1C,iBAAOgC,GAAP;AACH;AACJ,OAJwB,CAAzB;AAKA,WAAKP,QAAL;;AACA,UAAGZ,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CmB,UAA7C,CAAwDhB,MAAxD,KAAiE,CAApE,EAAsE;AAClE1B,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,KAAR;AAAcV,UAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC;AAA9B,SAAf,CAAR;AACH;AACJ,KArKa;;AAAA,SAuKdsB,KAvKc,GAuKR,MAAI;AACN3C,MAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAC,OAAR;AAAgBV,QAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC;AAAhC,OAAf,CAAR;AACH,KAzKa;;AAEV,SAAKD,KAAL,GAAa;AACTY,MAAAA,WAAW,EAAC,EADH;AAETY,MAAAA,KAAK,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAFG;AAGTC,MAAAA,OAAO,EAAC,IAHC;AAITxB,MAAAA,IAAI,EAAC,EAJI;AAKTR,MAAAA,SAAS,EAAC,EALD;AAMTiC,MAAAA,QAAQ,EAAC;AANA,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKb,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAC,KAAK2B,KAAL,CAAW3B;AAAjB,KAAd;;AAEArB,IAAAA,EAAE,CAACiD,MAAH,GAAU,MAAI;AACV3C,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAFD;;AAGAP,IAAAA,EAAE,CAACkD,SAAH,GAAcC,IAAD,IAAQ;AACjB7C,MAAAA,OAAO,CAACC,GAAR,CAAY4C,IAAZ;AACA,UAAIC,GAAG,GAACvB,IAAI,CAACwB,KAAL,CAAWF,IAAI,CAACA,IAAhB,CAAR;;AACA,UAAGC,GAAG,CAACrB,MAAJ,KAAe,aAAlB,EAAgC;AAC5BzB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKa,KAAL,CAAWY,WAAX,GAAuBoB,GAAG,CAACE,KAA3B;AACA,aAAKlC,KAAL,CAAWP,SAAX,GAAqBuC,GAAG,CAACvC,SAAzB;AACA,YAAI2B,CAAC,GAAC,CAAN;;AACA,aAAI,IAAIe,CAAR,IAAaH,GAAG,CAACI,KAAjB,EAAuB;AACnB,cAAGD,CAAC,KAAG,KAAKnC,KAAL,CAAWC,IAAlB,EAAuB;AACnB,iBAAKD,KAAL,CAAW0B,QAAX,CAAoBb,IAApB,CAAyB;AAACwB,cAAAA,IAAI,EAACF,CAAN;AAAQG,cAAAA,EAAE,EAAC,OAAKlB;AAAhB,aAAzB;AACAA,YAAAA,CAAC;AACJ,WAHD,MAGO;AACH,iBAAKpB,KAAL,CAAW0B,QAAX,CAAoBb,IAApB,CAAyB;AAACwB,cAAAA,IAAI,EAACF,CAAN;AAAQG,cAAAA,EAAE,EAAC;AAAX,aAAzB;AACH;AACJ;;AACDpD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAL,CAAW0B,QAAvB;AACAxB,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,KAAKH,KAAL,CAAW0B,QAAX,CAAoBa,IAApB,CAAyBnB,CAAC,IAAEA,CAAC,CAACiB,IAAF,KAASL,GAAG,CAAClC,IAAzC,EAA+CwC,EAA/E,EAAmF,CAAnF,EAAsFlC,KAAtF,CAA4FoC,MAA5F,GAAmG,iBAAnG;AACA,aAAK1B,QAAL,CAAc;AAACW,UAAAA,OAAO,EAAC;AAAT,SAAd;;AACA,YAAGO,GAAG,CAAClC,IAAJ,KAAW,KAAKE,KAAL,CAAWC,IAAzB,EAA8B;AAC1BC,UAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CC,KAA7C,CAAmDC,aAAnD,GAAmE,MAAnE;AACH,SAFD,MAEO;AACHH,UAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CC,KAA7C,CAAmDC,aAAnD,GAAmE,MAAnE;AACH;AACJ,OArBD,MAsBK,IAAG2B,GAAG,CAACrB,MAAJ,KAAa,UAAhB,EAA2B;AAC5B,aAAKX,KAAL,CAAWP,SAAX,GAAqBuC,GAAG,CAACvC,SAAzB;AACA,aAAKO,KAAL,CAAWwB,KAAX,GAAiBQ,GAAG,CAACM,EAArB;AACApC,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,KAAKH,KAAL,CAAW0B,QAAX,CAAoBa,IAApB,CAAyBnB,CAAC,IAAEA,CAAC,CAACiB,IAAF,KAASL,GAAG,CAAClC,IAAzC,EAA+CwC,EAA/E,EAAmF,CAAnF,EAAsFlC,KAAtF,CAA4FoC,MAA5F,GAAmG,iBAAnG;AACA,aAAK1B,QAAL;AACA,aAAKjB,QAAL,CAAcmC,GAAG,CAAClC,IAAlB,EAAuBkC,GAAG,CAACjC,QAA3B;AACH,OANI,MAOA,IAAGiC,GAAG,CAACrB,MAAJ,KAAa,KAAhB,EAAsB;AACvB,aAAK8B,GAAL,CAAST,GAAG,CAAC/B,IAAb;AACH,OAFI,MAGA,IAAG+B,GAAG,CAACrB,MAAJ,KAAa,OAAhB,EAAwB;AACzB/B,QAAAA,EAAE,CAAC4B,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,MAAM,EAAC,OAAR;AAAgBV,UAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC;AAAhC,SAAf,CAAR;AACH,OAFI,MAGA,IAAG+B,GAAG,CAACrB,MAAJ,KAAa,SAAhB,EAA0B;AAC3B,aAAKX,KAAL,CAAWwB,KAAX,GAAiBQ,GAAG,CAACM,EAArB;;AACA,YAAGN,GAAG,CAAC/B,IAAJ,KAAW,KAAKD,KAAL,CAAWC,IAAzB,EAA8B;AAC1B,eAAKM,YAAL,CAAkByB,GAAG,CAACU,OAAtB;AACH;;AACD,aAAK5B,QAAL;AACH;AACJ,KA7CD;AA+CH;;AA0GD6B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKpB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,MAAA,GAAG,EAAC,iCAAjC;AAAmE,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWyB,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,eAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CANJ,eAWI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKzB,KAAL,CAAWY,WAAX,CAAuBgC,GAAvB,CAA2Bb,IAAI,IAAE;AAC9B,0BAAQ;AAAK,QAAA,GAAG,EAAEc,OAAO,CAAC,aAAWd,IAAI,CAACrC,KAAhB,GAAsB,GAAtB,GAA0BqC,IAAI,CAACpC,GAA/B,GAAmC,MAApC,CAAjB;AAA8D,QAAA,KAAK,EAAE;AAACmD,UAAAA,MAAM,EAAC,MAAR;AAAeC,UAAAA,KAAK,EAAC;AAArB,SAArE;AAAmG,QAAA,EAAE,EAAEhB,IAAI,CAACrC,KAAL,GAAW,GAAX,GAAeqC,IAAI,CAACpC,GAA3H;AAAgI,QAAA,GAAG,EAAE,WAASoC,IAAI,CAACrC,KAAd,GAAoB,GAApB,GAAwBqC,IAAI,CAACpC,GAA7B,GAAiC,MAAtK;AAA8K,QAAA,OAAO,EAAE,KAAKX,UAA5L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAFA,CADL,CADJ,CAXJ,CADJ;AAqBH;;AAlM2C","sourcesContent":["import React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\n// import Websocket from 'ws';\n\nconst ws=new WebSocket('ws://localhost:3001/websocket')\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards:[],\n            opnum:[7,7,7,7],\n            loading:true,\n            user:'',\n            tablecard:'',\n            allusers:[]\n        }\n    }\n\n    componentDidMount(){\n        this.setState({user:this.props.user})\n\n        ws.onopen=()=>{\n            console.log('open')\n        }\n        ws.onmessage=(data)=>{\n            console.log(data);\n            var res=JSON.parse(data.data);\n            if(res.action === \"startreturn\"){\n                console.log('startreturn');\n                this.state.playercards=res.cards;\n                this.state.tablecard=res.tablecard;\n                var x=1;\n                for(var d of res.users){\n                    if(d!==this.state.user){\n                        this.state.allusers.push({name:d,op:'op'+x});\n                        x++;\n                    } else {\n                        this.state.allusers.push({name:d,op:'player'});\n                    }\n                }\n                console.log(this.state.allusers);\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===res.turn).op)[0].style.border='solid black 3px';\n                this.setState({loading:false});\n                if(res.turn===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if(res.action===\"nextturn\"){\n                this.state.tablecard=res.tablecard;\n                this.state.opnum=res.op;\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===res.turn).op)[0].style.border='solid black 3px';\n                this.setState();\n                this.nextturn(res.turn,res.addcards);\n            }\n            else if(res.action===\"win\"){\n                this.win(res.user);\n            }\n            else if(res.action===\"retry\"){\n                ws.send(JSON.stringify({action:'start',user:this.state.user}));\n            }\n            else if(res.action===\"drawrep\"){\n                this.state.opnum=res.op;\n                if(res.user===this.state.user){\n                    this.drawTwoCards(res.addcard)\n                }\n                this.setState();\n            }\n        }\n\n    }\n\n    \n\n    handlePlay=(e)=>{\n        // var card=e.target;\n        console.log(e.target);\n        var card=e.target.id.split('-');\n        if(card[0]==='black'){\n            this.putblackcard(card);\n        } else if(card[0] === this.tablecard.color || card[1] === this.tablecard.num){\n            this.putcard(card);\n        }\n        \n    }\n\n    nextturn=(turn,addcards)=>{\n        if(turn===this.state.user){\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if((this.state.tablecard.num===\"+2\" || this.tablecard.num===\"+4\")  && addcards.length!==0){\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({action:'d2', user:this.state.user}));\n            }else if((this.state.tablecard.num===\"+2\" || this.tablecard.num===\"+4\") && addcards.length===0){\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        this.setState();\n    }\n\n    putblackcard=(card)=>{\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        } else if(this.state.playercards.filter(x=>x.color===card[0] || x.num === card[1]).length === 0){\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        }\n        this.state.playercards = this.state.playercards.filter((obj) => {\n            if(obj.num !== card[1] && obj.color!==card[0]){\n                return obj;\n            }\n        });\n        this.setState();\n        if(document.getElementsByClassName('player')[0].childNodes.length===0){\n            ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        }\n    }\n\n    putcard=(card)=>{\n        if(card[1] === 'R'){\n            ws.send(JSON.stringify({action:'rplayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if( card[1]==='S'){\n            ws.send(JSON.stringify({action:'splayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if(card[1] === '+2'){\n            ws.send(JSON.stringify({action:'2played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else {\n            ws.send(JSON.stringify({action:'played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        }\n        this.state.playercards = this.state.playercards.filter((obj) => {\n            if(obj.num !== card[1] && obj.color!==card[0]){\n                return obj;\n            }\n        });\n        this.setState();\n        if(document.getElementsByClassName('player')[0].childNodes.length===0){\n            ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        }\n    }\n\n    ready=()=>{\n        ws.send(JSON.stringify({action:'start',user:this.state.user}))\n    }    \n\n    render() {\n        return (\n            <div className='gamearea' >\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1'></div>\n                </div>\n                <div className='gridItem' id='mid'>\n                    <div className='op2'></div>\n                    <div className='stack'></div>\n                    <div className='op3'></div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='player'>\n                        {this.state.playercards.map(data=>{\n                            return (<img src={require(\"./cards/\"+data.color+\"-\"+data.num+\".png\")} style={{height:'75px',width:'50px'}} id={data.color+\"-\"+data.num} alt={\"cards/\"+data.color+\"-\"+data.num+\".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}