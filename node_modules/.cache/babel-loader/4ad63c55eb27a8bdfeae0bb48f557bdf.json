{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners'; // import Websocket from 'ws';\n\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.handlePlay = e => {\n      // var card=e.target;\n      console.log(e.target);\n      var card = e.target.id.split('-');\n\n      if (card[0] === 'black') {\n        this.putblackcard(card);\n      } else if (card[0] === this.tablecard.color || card[1] === this.tablecard.num) {\n        this.putcard(card);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          this.ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState();\n    };\n\n    this.putblackcard = card => {\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            this.ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            this.ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            this.ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            this.ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            this.ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            this.ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n\n      this.state.playercards = this.state.playercards.filter(obj => {\n        if (obj.num !== card[1] && obj.color !== card[0]) {\n          return obj;\n        }\n      });\n      this.setState();\n\n      if (document.getElementsByClassName('player')[0].childNodes.length === 0) {\n        this.ws.send(JSON.stringify({\n          action: 'win',\n          user: this.state.user\n        }));\n      }\n    };\n\n    this.putcard = card => {\n      if (card[1] === 'R') {\n        this.ws.send(JSON.stringify({\n          action: 'rplayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === 'S') {\n        this.ws.send(JSON.stringify({\n          action: 'splayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === '+2') {\n        this.ws.send(JSON.stringify({\n          action: '2played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else {\n        this.ws.send(JSON.stringify({\n          action: 'played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      }\n\n      this.state.playercards = this.state.playercards.filter(obj => {\n        if (obj.num !== card[1] && obj.color !== card[0]) {\n          return obj;\n        }\n      });\n      this.setState();\n\n      if (document.getElementsByClassName('player')[0].childNodes.length === 0) {\n        this.ws.send(JSON.stringify({\n          action: 'win',\n          user: this.state.user\n        }));\n      }\n    };\n\n    this.state = {\n      playercards: [],\n      opnum: [7, 7, 7, 7],\n      loading: true,\n      user: '',\n      tablecard: '',\n      allusers: []\n    };\n    this.ws = new WebSocket('ws://localhost:3001/websocket');\n\n    this.ws.onmessage = data => {\n      data = JSON.parse(data);\n\n      if (data.action === \"startreturn\") {\n        this.state.playercards = data.cards;\n        this.state.tablecard = data.tablecard;\n        var x = 1;\n\n        for (var d of data.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n          }\n        }\n\n        document.getElementsByClassName(this.state.allusers.find(x => x.name === data.turn).op)[0].style.border = 'solid black 3px';\n        this.setState();\n\n        if (data.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (data.action === \"nextturn\") {\n        this.state.tablecard = data.tablecard;\n        this.state.opnum = data.op;\n        document.getElementsByClassName(this.state.allusers.find(x => x.name === data.turn).op)[0].style.border = 'solid black 3px';\n        this.setState();\n        this.nextturn(data.turn, data.addcards);\n      } else if (data.action === \"win\") {\n        this.win(data.user);\n      } else if (data.action === \"retry\") {\n        this.ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (data.action === \"drawrep\") {\n        this.state.opnum = data.op;\n\n        if (data.user === this.state.user) {\n          this.drawTwoCards(data.addcard);\n        }\n\n        this.setState();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.ws.send(JSON.stringify({\n      action: 'start',\n      user: this.state.user\n    }));\n    this.setState({\n      user: this.props.user\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Gamearea","constructor","handlePlay","e","console","log","target","card","id","split","putblackcard","tablecard","color","num","putcard","nextturn","turn","addcards","state","user","document","getElementsByClassName","style","pointerEvents","length","drawTwoCards","ws","send","JSON","stringify","action","playercards","push","setState","userInput","prompt","toUpperCase","played","filter","x","obj","childNodes","opnum","loading","allusers","WebSocket","onmessage","data","parse","cards","d","users","name","op","find","border","win","addcard","componentDidMount","props","render","map","require","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\n// import Websocket from 'ws';\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards:[],\n            opnum:[7,7,7,7],\n            loading:true,\n            user:'',\n            tablecard:'',\n            allusers:[]\n        }\n        this.ws=new WebSocket('ws://localhost:3001/websocket')\n        this.ws.onmessage=(data)=>{\n            data=JSON.parse(data);\n            if(data.action === \"startreturn\"){\n                this.state.playercards=data.cards;\n                this.state.tablecard=data.tablecard;\n                var x=1;\n                for(var d of data.users){\n                    if(d!==this.state.user){\n                        this.state.allusers.push({name:d,op:'op'+x});\n                        x++;\n                    } else {\n                        this.state.allusers.push({name:d,op:'player'});\n                    }\n                }\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===data.turn).op)[0].style.border='solid black 3px';\n                this.setState();\n                if(data.turn===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if(data.action===\"nextturn\"){\n                this.state.tablecard=data.tablecard;\n                this.state.opnum=data.op;\n                document.getElementsByClassName(this.state.allusers.find(x=>x.name===data.turn).op)[0].style.border='solid black 3px';\n                this.setState();\n                this.nextturn(data.turn,data.addcards);\n            }\n            else if(data.action===\"win\"){\n                this.win(data.user);\n            }\n            else if(data.action===\"retry\"){\n                this.ws.send(JSON.stringify({action:'start',user:this.state.user}));\n            }\n            else if(data.action===\"drawrep\"){\n                this.state.opnum=data.op;\n                if(data.user===this.state.user){\n                    this.drawTwoCards(data.addcard)\n                }\n                this.setState();\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.ws.send(JSON.stringify({action:'start',user:this.state.user}))\n        this.setState({user:this.props.user})\n    }\n\n    handlePlay=(e)=>{\n        // var card=e.target;\n        console.log(e.target);\n        var card=e.target.id.split('-');\n        if(card[0]==='black'){\n            this.putblackcard(card);\n        } else if(card[0] === this.tablecard.color || card[1] === this.tablecard.num){\n            this.putcard(card);\n        }\n        \n    }\n\n    nextturn=(turn,addcards)=>{\n        if(turn===this.state.user){\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if((this.state.tablecard.num===\"+2\" || this.tablecard.num===\"+4\")  && addcards.length!==0){\n                this.drawTwoCards(addcards);\n                this.ws.send(JSON.stringify({action:'d2', user:this.state.user}));\n            }else if((this.state.tablecard.num===\"+2\" || this.tablecard.num===\"+4\") && addcards.length===0){\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        this.setState();\n    }\n\n    putblackcard=(card)=>{\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                this.ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    this.ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    this.ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    this.ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        } else if(this.state.playercards.filter(x=>x.color===card[0] || x.num === card[1]).length === 0){\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                this.ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    this.ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    this.ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    this.ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        }\n        this.state.playercards = this.state.playercards.filter((obj) => {\n            if(obj.num !== card[1] && obj.color!==card[0]){\n                return obj;\n            }\n        });\n        this.setState();\n        if(document.getElementsByClassName('player')[0].childNodes.length===0){\n            this.ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        }\n    }\n\n    putcard=(card)=>{\n        if(card[1] === 'R'){\n            this.ws.send(JSON.stringify({action:'rplayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if( card[1]==='S'){\n            this.ws.send(JSON.stringify({action:'splayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if(card[1] === '+2'){\n            this.ws.send(JSON.stringify({action:'2played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else {\n            this.ws.send(JSON.stringify({action:'played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        }\n        this.state.playercards = this.state.playercards.filter((obj) => {\n            if(obj.num !== card[1] && obj.color!==card[0]){\n                return obj;\n            }\n        });\n        this.setState();\n        if(document.getElementsByClassName('player')[0].childNodes.length===0){\n            this.ws.send(JSON.stringify({action:'win',user:this.state.user}));\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <div className='gamearea'>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1'></div>\n                </div>\n                <div className='gridItem' id='mid'>\n                    <div className='op2'></div>\n                    <div className='stack'></div>\n                    <div className='op3'></div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='player'>\n                        {this.state.playercards.map(data=>{\n                            return (<img src={require(\"./cards/\"+data.color+\"-\"+data.num+\".png\")} style={{height:'75px',width:'50px'}} id={data.color+\"-\"+data.num} alt={\"cards/\"+data.color+\"-\"+data.num+\".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}