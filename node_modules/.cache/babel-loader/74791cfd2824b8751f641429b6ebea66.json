{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css';\nimport { PacmanLoader } from 'react-spinners'; // import Websocket from 'ws';\n\nconst ws = new WebSocket('ws://localhost:3001/websocket');\nconst gamearea = {\n  display: 'grid',\n  'grid-template-columns': 'auto',\n  height: 'auto',\n  width: 'auto'\n};\nconst mid = {\n  display: 'grid',\n  'grid-template-columns': 'auto 33% auto'\n};\nconst player = {\n  position: 'relative',\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '40%'\n};\nconst playerx = {\n  position: 'relative',\n  width: 'auto',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%',\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  'marginLeft': '40%'\n};\nconst stack = {\n  width: '50%',\n  height: 'auto',\n  'margin-left': '25%',\n  'margin-right': '25%'\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split('-');\n\n      if (card[0] === 'black') {\n        this.putblackcard(card, e);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card, e);\n      } else if (this.state.tablecard.color === 'black') {\n        this.putcard(card, e);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: 'd2',\n            user: this.state.user\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      this.state.playercards.push(...addcards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.cardputanimation = async e => {\n      return new Promise(resolve => {\n        var pos = document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n        var anim = e.target.animate([{\n          top: e.target.getBoundingClientRect().top,\n          left: e.target.getBoundingClientRect().left\n        }, {\n          top: pos.top,\n          left: pos.left\n        }], {\n          duration: 1500,\n          iterations: 1,\n          fill: 'forwards'\n        });\n        resolve(anim.finished);\n      });\n    };\n\n    this.putblackcard = async (card, e) => {\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: 'wplayed',\n              tablecard: {\n                num: \"W\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"red\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"Y\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"yellow\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"G\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"green\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          case \"B\":\n            ws.send(JSON.stringify({\n              action: '4played',\n              tablecard: {\n                num: \"+4\",\n                color: \"blue\"\n              },\n              played: this.state.user\n            }));\n            break;\n\n          default:\n            console.log('nothing');\n        }\n      }\n\n      await this.cardputanimation(e).then(() => {\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n        this.setState({\n          playercards: this.state.playercards\n        });\n      });\n    };\n\n    this.putcard = async (card, e) => {\n      if (card[1] === 'R') {\n        ws.send(JSON.stringify({\n          action: 'rplayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === 'S') {\n        ws.send(JSON.stringify({\n          action: 'splayed',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else if (card[1] === '+2') {\n        ws.send(JSON.stringify({\n          action: '2played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      } else {\n        ws.send(JSON.stringify({\n          action: 'played',\n          tablecard: {\n            num: card[1],\n            color: card[0]\n          },\n          played: this.state.user\n        }));\n      }\n\n      await this.cardputanimation(e).then(() => {\n        this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n        this.setState({\n          playercards: this.state.playercards\n        });\n      });\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: 'start',\n        user: this.state.user\n      }));\n      e.target.style.display = 'none';\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: 'draw',\n        played: this.state.user\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: '',\n      tablecard: {\n        num: '',\n        color: 'back'\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n\n    ws.onopen = () => {\n      console.log('open');\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log('startreturn');\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: 'op' + x\n            });\n            this.state['op' + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: 'player'\n            });\n            this.state['player'] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n        } else {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n          document.getElementsByClassName('playerp')[0].style.border = 'none';\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n          document.getElementsByClassName('op1p')[0].style.border = 'none';\n          document.getElementsByClassName('op3p')[0].style.border = 'none';\n          document.getElementsByClassName('op2p')[0].style.border = 'none';\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        });\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: 'start',\n          user: this.state.user\n        }));\n      } else if (res.action === \"drawrep\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state['op' + x] = d;\n            x++;\n          } else {\n            this.state['player'] = d;\n          }\n        }\n\n        this.setState();\n\n        if (res.user === this.state.user) {\n          document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n          this.drawCard(res.addcard);\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: 'rotateZ(180deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, this.state.op1.name ? this.state.op1.name + '(' + this.state.op1.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      className: \"op1card\",\n      style: {\n        background: 'black',\n        height: '75px',\n        width: '50px',\n        marginLeft: '50%'\n      },\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: 'rotateZ(90deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, this.state.op2.name ? this.state.op2.name + '(' + this.state.op2.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      className: \"op2card\",\n      style: {\n        background: 'black',\n        height: '75px',\n        width: '50px',\n        marginLeft: '50%'\n      },\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: '75px',\n        width: '50px'\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: 'deck',\n      style: {\n        height: '75px',\n        width: '50px',\n        background: 'black'\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: 'rotateZ(270deg)',\n        height: 'auto',\n        width: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }, this.state.op3.name ? this.state.op3.name + '(' + this.state.op3.num + ')' : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      className: \"op3card\",\n      style: {\n        background: 'black',\n        height: '75px',\n        width: '50px',\n        marginLeft: '50%'\n      },\n      alt: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: '25%',\n        'marginLeft': '40%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: '75px',\n          width: '50px'\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 37\n        }\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","ws","WebSocket","gamearea","display","height","width","mid","player","position","justifyContent","alignItems","playerx","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","putblackcard","state","tablecard","color","num","putcard","nextturn","turn","addcards","user","document","getElementsByClassName","style","pointerEvents","length","drawTwoCards","send","JSON","stringify","action","playercards","push","setState","drawCard","cardputanimation","Promise","resolve","pos","getBoundingClientRect","anim","animate","top","left","duration","iterations","fill","finished","userInput","prompt","toUpperCase","played","filter","x","then","splice","indexOf","find","ready","drawCarde","loading","allusers","op1","op2","op3","componentDidMount","props","onopen","onmessage","data","res","parse","cards","d","users","name","op","opnum","border","addcard","render","transform","textAlign","require","background","marginLeft","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\n/*\n    logout?\n*/\nimport React, { Component } from 'react';\nimport './Game.css'\nimport { PacmanLoader } from 'react-spinners'\n// import Websocket from 'ws';\n\nconst ws=new WebSocket('ws://localhost:3001/websocket')\n\nconst gamearea={\n    display: 'grid',\n    'grid-template-columns': 'auto' ,\n    height: 'auto',\n    width: 'auto'\n}\nconst mid={\n    display: 'grid',\n    'grid-template-columns': 'auto 33% auto' \n}\nconst player={\n    position: 'relative',\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft':'40%'\n}\nconst playerx={\n    position: 'relative',\n    width: 'auto',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    'marginLeft':'40%'\n}\nconst stack={\n    width: '50%',\n    height: 'auto',\n    'margin-left': '25%',\n    'margin-right': '25%'\n}\n\n\nexport default class Gamearea extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playercards:[],\n            loading:true,\n            user:'',\n            tablecard:{num:'',color:'back'},\n            allusers:[],\n            op1:{},\n            op2:{},\n            op3:{},\n            player:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({user:this.props.user})\n\n        ws.onopen=()=>{\n            console.log('open')\n        }\n        ws.onmessage=(data)=>{\n            console.log(data.data);\n            var res=JSON.parse(data.data);\n            if(res.action === \"startreturn\"){\n                console.log('startreturn');\n                this.state.playercards=res.cards;\n                this.state.tablecard=res.tablecard;\n                var x=1;\n                for(var d of res.users){\n                    if(d!==this.state.user){\n                        this.state.allusers.push({name:d,op:'op'+x});\n                        this.state[('op'+x)]={name:d,num:7};\n                        x++;\n                    } else {\n                        this.state.allusers.push({name:d,op:'player'});\n                        this.state['player']={name:d,num:7};\n                    }\n                }\n                console.log(this.state.allusers);\n                console.log(this.state.opnum);\n                this.setState({loading:false});\n                //add border condition on ps\n                if(this.state.op1.name === res.turn){\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op2.name === res.turn){\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op3.name === res.turn){\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.player.name === res.turn){\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                if(res.turn===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                } else {\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n                }\n            }\n            else if(res.action===\"nextturn\"){\n                let x=1;\n                for(let d of res.op){\n                    if(d.name!==this.state.user){\n                        this.state[('op'+x)]=d;\n                        x++;\n                    } else {\n                        this.state['player']=d;\n                    }\n                }\n                this.setState({tablecard:res.tablecard})\n                //add border conditions on ps\n                if(this.state.op1.name === res.turn){\n                    document.getElementsByClassName('op1p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op2.name === res.turn){\n                    document.getElementsByClassName('op2p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.op3.name === res.turn){\n                    document.getElementsByClassName('op3p')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                    document.getElementsByClassName('playerp')[0].style.border = 'none';\n                } else if(this.state.player.name === res.turn){\n                    document.getElementsByClassName('playerp')[0].style.border = 'solid green 3px';\n                    document.getElementsByClassName('op1p')[0].style.border = 'none';\n                    document.getElementsByClassName('op3p')[0].style.border = 'none';\n                    document.getElementsByClassName('op2p')[0].style.border = 'none';\n                }\n                this.nextturn(res.turn,res.addcards);\n            }\n            else if(res.action===\"win\"){\n                let x=1;\n                for(let d of res.op){\n                    if(d.name!==this.state.user){\n                        this.state[('op'+x)]=d;\n                        x++;\n                    } else {\n                        this.state['player']=d;\n                    }\n                }\n                this.setState({tablecard:res.tablecard})\n                this.win(res.user);\n            }\n            else if(res.action===\"retry\"){\n                ws.send(JSON.stringify({action:'start',user:this.state.user}));\n            }\n            else if(res.action===\"drawrep\"){\n                let x=1;\n                for(let d of res.op){\n                    if(d.name!==this.state.user){\n                        this.state[('op'+x)]=d;\n                        x++;\n                    } else {\n                        this.state['player']=d;\n                    }\n                }\n                this.setState();\n                if(res.user===this.state.user){\n                    document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n                    this.drawCard(res.addcard)\n                }\n            }\n        }\n\n    }\n\n    win=(winn)=>{\n        alert(winn+\" wins\")\n    }\n    \n\n    handlePlay=async(e)=>{\n        console.log(e.target);\n        var card=e.target.id.split('-');\n        if(card[0]==='black'){\n            this.putblackcard(card,e);\n        } else if(card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num){\n            this.putcard(card,e);\n        } else if(this.state.tablecard.color==='black'){\n            this.putcard(card,e);\n        }\n        \n    }\n\n    nextturn=(turn,addcards)=>{\n        if(turn===this.state.user){\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'auto';\n            if((this.state.tablecard.num===\"+2\" || this.state.tablecard.num===\"+4\")  && addcards.length!==0){\n                this.drawTwoCards(addcards);\n                ws.send(JSON.stringify({action:'d2', user:this.state.user}));\n            }else if((this.state.tablecard.num===\"+2\" || this.state.tablecard.num===\"+4\") && addcards.length===0){\n            }\n        } else {\n            document.getElementsByClassName('player')[0].style.pointerEvents = 'none';\n        }\n    }\n\n    drawTwoCards=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        this.setState({playercards:this.state.playercards});\n    }\n    drawCard=(addcards)=>{\n        this.state.playercards.push(...addcards);\n        console.log(this.state.playercards);\n        this.setState({playercards:this.state.playercards});\n    }\n\n    cardputanimation=async(e)=>{\n        return new Promise((resolve)=>{\n            var pos=document.getElementsByClassName('tablecard')[0].getBoundingClientRect();\n            var anim=e.target.animate(\n            [\n                {top:e.target.getBoundingClientRect().top,left:e.target.getBoundingClientRect().left},\n                {top:pos.top,left:pos.left}\n            ],{\n                duration:1500,\n                iterations:1,\n                fill:'forwards'\n            }\n        )\n        resolve(anim.finished);\n        })\n    }\n\n    putblackcard=async(card,e)=>{\n        if (card[1] === \"W\") {\n            let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'wplayed',tablecard:{num:\"W\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        } else if(this.state.playercards.filter(x=>x.color===card[0] || x.num === card[1]).length === 0){\n            let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\") ;\n            switch (userInput.toUpperCase()) {\n                case \"R\":\n                ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"red\"},played:this.state.user}))\n                break ;\n                case \"Y\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"yellow\"},played:this.state.user}))\n                break ;\n                case \"G\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"green\"},played:this.state.user}))\n                break ;\n                case \"B\":\n                    ws.send(JSON.stringify({action:'4played',tablecard:{num:\"+4\",color:\"blue\"},played:this.state.user}))\n                break ;\n                default : console.log('nothing');\n            }\n        }\n        await this.cardputanimation(e).then(()=>{\n            this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x=>x.num===card[1] && x.color===card[0])),1);\n            this.setState({playercards:this.state.playercards});\n        })\n        \n    }\n\n    putcard=async(card,e)=>{\n        if(card[1] === 'R'){\n            ws.send(JSON.stringify({action:'rplayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if( card[1]==='S'){\n            ws.send(JSON.stringify({action:'splayed',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else if(card[1] === '+2'){\n            ws.send(JSON.stringify({action:'2played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        } else {\n            ws.send(JSON.stringify({action:'played',tablecard:{num:card[1],color:card[0]},played:this.state.user}));   \n        }\n        await this.cardputanimation(e).then(()=>{\n            this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x=>x.num===card[1] && x.color===card[0])),1);\n            this.setState({playercards:this.state.playercards});\n        })\n    }\n\n    ready=(e)=>{\n        ws.send(JSON.stringify({action:'start',user:this.state.user}))\n        e.target.style.display='none';\n    }    \n\n    drawCarde=()=>{\n        ws.send(JSON.stringify({action:'draw',played:this.state.user}));\n    }\n\n    render() {\n        return (\n            <div className='gamearea' style={gamearea}>\n                <button onClick={this.ready}>ready</button>\n                <PacmanLoader color='yellow' css='margin-top:20%;margin-left:45%;' loading={this.state.loading}></PacmanLoader>\n                <div className='gridItem'>\n                    <div className='op1' style={{transform:'rotateZ(180deg)',height:'auto',width:'auto'}}>\n                    <div className='op1p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.op1.name ?this.state.op1.name+'('+this.state.op1.num+')':''}</div>\n                    <div className='whereop1resides' style={player}>\n                        <img src={require(\"./cards/back-.png\")} className='op1card' style={{background:'black',height:'75px',width:'50px',marginLeft:'50%'}} alt='back'></img>\n                    </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='mid' style={mid}>\n                    <div className='op2' style={{transform:'rotateZ(90deg)',height:'auto',width:'auto'}}>\n                    <div className='op2p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.op2.name ?this.state.op2.name+'('+this.state.op2.num+')':''}</div>\n                    <div className='whereop2resides' style={playerx}>\n                        <img src={require(\"./cards/back-.png\")} className='op2card' style={{background:'black',height:'75px',width:'50px',marginLeft:'50%'}} alt='back'></img>\n                        </div>\n                    </div>\n                    <div className='stack' style={stack}>\n                        <div>\n                            <img src={require(\"./cards/\"+this.state.tablecard.color+\"-\"+this.state.tablecard.num+\".png\")} className='tablecard' style={{height:'75px',width:'50px'}} id={this.state.tablecard.color+\"-\"+this.state.tablecard.num} alt={\"cards/\"+this.state.tablecard.color+\"-\"+this.state.tablecard.num+\".png\"}></img>\n                            <img src={require(\"./cards/back-.png\")} alt={'deck'} style={{height:'75px',width:'50px',background:'black'}} onClick={this.drawCarde}></img>\n                        </div>\n                    </div>\n                    <div className='op3' style={{transform:'rotateZ(270deg)',height:'auto',width:'auto'}}>\n                    <div className='op3p' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.op3.name ?this.state.op3.name+'('+this.state.op3.num+')':''}</div>\n                    <div className='whereop3resides' style={playerx}>\n                    <img src={require(\"./cards/back-.png\")} className='op3card' style={{background:'black',height:'75px',width:'50px', marginLeft:'50%'}} alt='back'></img>\n                        </div>\n                    </div>\n                </div>\n                <div className='gridItem' id='playerplace'>\n                    <div className='playerp' style={{width:'25%','marginLeft':'40%',textAlign:'center'}}>{this.state.user}</div>\n                    <div className='player' style={player}>\n                        {this.state.playercards.map(data=>{\n                            return (<img src={require(\"./cards/\"+data.color+\"-\"+data.num+\".png\")} style={{height:'75px',width:'50px'}} id={data.color+\"-\"+data.num} alt={\"cards/\"+data.color+\"-\"+data.num+\".png\"} onClick={this.handlePlay}></img>)\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}