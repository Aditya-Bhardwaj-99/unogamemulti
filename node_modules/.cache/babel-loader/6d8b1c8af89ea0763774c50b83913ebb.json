{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Documents/react/uno/src/Gamearea.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\nimport React, { Component } from \"react\";\nimport \"./Game.css\";\nimport { PacmanLoader } from \"react-spinners\";\nimport Opo from \"./Opo\";\nimport { TimelineLite, gsap, CSSPlugin } from \"gsap\"; // import Websocket from 'ws';\n\ngsap.registerPlugin(CSSPlugin);\nconst url = \"wss://uno-react-server.herokuapp.com/websocket\";\nconst dev = \"ws://localhost:3001/websocket\";\nconst ws = new WebSocket(dev);\nconst gamearea = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto\",\n  height: \"100%\",\n  width: \"100%\"\n};\nconst mid = {\n  display: \"grid\",\n  width: \"99%\",\n  marginLeft: \"0.5%\",\n  \"grid-template-columns\": \"33% 33% 33%\"\n};\nconst player = {\n  position: \"relative\",\n  width: \"33%\",\n  height: \"33%\",\n  marginLeft: \"34%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst playery = {\n  position: \"relative\",\n  width: \"33%\",\n  height: \"33%\",\n  marginLeft: \"46%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst playerx = {\n  position: \"relative\",\n  width: \"33%\",\n  height: \"33%\",\n  marginLeft: \"42%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst stack = {\n  width: \"auto\",\n  height: \"auto\",\n  marginLeft: \"25%\"\n};\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n\n    this.win = winn => {\n      alert(winn + \" wins\");\n    };\n\n    this.handlePlay = async e => {\n      console.log(e.target);\n      var card = e.target.id.split(\"-\");\n      var temp = document.createElement(\"img\");\n      temp.id = e.target.id;\n      temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName(\"player\")[0].appendChild(temp);\n      temp.style.position = \"absolute\";\n      temp.className = \"tempplayer\";\n      temp.style.opacity = 0;\n      this.timeline.to(temp, 0.01, {\n        css: {\n          x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n          y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n        }\n      }).to(temp, 0.01, {\n        css: {\n          opacity: 1\n        },\n        onComplete: () => {\n          ws.send(JSON.stringify({\n            action: \"opplayedanim\",\n            card: {\n              color: card[0],\n              num: card[1]\n            },\n            user: this.state.user,\n            room: this.state.room\n          }));\n        }\n      });\n\n      if (card[0] === \"black\") {\n        this.putblackcard(card, e);\n      } else if (card[0] === this.state.tablecard.color || card[1] === this.state.tablecard.num) {\n        this.putcard(card, e);\n      } else if (this.state.tablecard.color === \"black\") {\n        this.putcard(card, e);\n      }\n    };\n\n    this.nextturn = (turn, addcards) => {\n      if (turn === this.state.user) {\n        document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n\n        if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length !== 0) {\n          this.drawTwoCards(addcards);\n          ws.send(JSON.stringify({\n            action: \"d2\",\n            user: this.state.user,\n            room: this.state.room\n          }));\n        } else if ((this.state.tablecard.num === \"+2\" || this.state.tablecard.num === \"+4\") && addcards.length === 0) {}\n      } else {\n        document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n      }\n    };\n\n    this.drawTwoCards = addcards => {\n      for (let data of addcards) {\n        let e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        let dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        let temp = document.createElement(\"img\");\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n        ws.send(JSON.stringify({\n          action: \"drawanim\",\n          number: addcards.length,\n          user: this.state.user,\n          room: this.state.room\n        }));\n        this.timeline.to(temp, 0.01, {\n          css: {\n            x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n          }\n        }).to(temp, 0.25, {\n          css: {\n            opacity: 1\n          }\n        }).to(temp, 0.25, {\n          css: {\n            rotateY: 90\n          },\n          onComplete: () => {\n            temp.src = require(\"./cards/\" + data.color + \"-\" + data.num + \".png\");\n          }\n        }).to(temp, 0.25, {\n          css: {\n            rotateY: 0\n          }\n        }).to(temp, 0.5, {\n          css: {\n            x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y\n          },\n          onComplete: () => {\n            this.state.playercards.push(data);\n            temp.parentNode.removeChild(temp);\n            this.setState({\n              playercards: this.state.playercards\n            });\n          }\n        }).play();\n      }\n    };\n\n    this.drawCard = addcards => {\n      this.state.playercards.push(...addcards);\n      console.log(this.state.playercards);\n      this.setState({\n        playercards: this.state.playercards\n      });\n    };\n\n    this.putblackcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName(\"tempplayer\")[0];\n      var box = document.getElementsByClassName(\"tablecard\")[0].getBoundingClientRect();\n\n      if (card[1] === \"W\") {\n        let userInput = prompt(\"What color do you want your Wild card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"red\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"green\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"wplayed\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log(\"nothing\");\n        }\n      } else if (this.state.playercards.filter(x => x.color === card[0] || x.num === card[1]).length === 0) {\n        let userInput = prompt(\"What color do you want your +4 card to be?\", \"R, Y, G or B?\");\n\n        switch (userInput.toUpperCase()) {\n          case \"R\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"red\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"Y\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"yellow\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"G\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"green\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          case \"B\":\n            this.timeline.to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y\n              },\n              onComplete: () => {\n                ws.send(JSON.stringify({\n                  action: \"4played\",\n                  tablecard: {\n                    num: \"0\",\n                    color: \"blue\"\n                  },\n                  played: this.state.user,\n                  room: this.state.room\n                }));\n                temp.parentNode.removeChild(temp);\n              }\n            }).play();\n            break;\n\n          default:\n            console.log(\"nothing\");\n        }\n      }\n    };\n\n    this.putcard = async (card, e) => {\n      this.state.playercards.splice(this.state.playercards.indexOf(this.state.playercards.find(x => x.num === card[1] && x.color === card[0])), 1);\n      this.setState({\n        playercards: this.state.playercards\n      });\n      let temp = document.getElementsByClassName(\"tempplayer\")[0];\n      var box = document.getElementsByClassName(\"tablecard\")[0].getBoundingClientRect();\n      this.timeline.to(temp, 0.5, {\n        css: {\n          x: box.x - temp.getBoundingClientRect().x + 50,\n          y: box.y - temp.getBoundingClientRect().y\n        },\n        onComplete: () => {\n          if (card[1] === \"R\") {\n            ws.send(JSON.stringify({\n              action: \"rplayed\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user,\n              room: this.state.room\n            }));\n          } else if (card[1] === \"S\") {\n            ws.send(JSON.stringify({\n              action: \"splayed\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user,\n              room: this.state.room\n            }));\n          } else if (card[1] === \"+2\") {\n            ws.send(JSON.stringify({\n              action: \"2played\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user,\n              room: this.state.room\n            }));\n          } else {\n            ws.send(JSON.stringify({\n              action: \"played\",\n              tablecard: {\n                num: card[1],\n                color: card[0]\n              },\n              played: this.state.user,\n              room: this.state.room\n            }));\n          }\n\n          temp.parentNode.removeChild(temp);\n        }\n      }).play();\n    };\n\n    this.ready = e => {\n      ws.send(JSON.stringify({\n        action: \"start\",\n        user: this.state.user,\n        room: this.state.room\n      }));\n      e.target.style.display = \"none\";\n    };\n\n    this.drawCarde = () => {\n      ws.send(JSON.stringify({\n        action: \"draw\",\n        played: this.state.user,\n        room: this.state.room\n      }));\n    };\n\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: \"\",\n      tablecard: {\n        num: \"\",\n        color: \"back\"\n      },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {}\n    };\n    this.timeline = new TimelineLite({\n      paused: true\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user,\n      room: this.props.room\n    });\n\n    ws.onopen = () => {\n      console.log(\"open\");\n    };\n\n    ws.onmessage = data => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n\n      if (res.action === \"startreturn\") {\n        console.log(\"startreturn\");\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({\n              name: d,\n              op: \"op\" + x\n            });\n            this.state[\"op\" + x] = {\n              name: d,\n              num: 7\n            };\n            x++;\n          } else {\n            this.state.allusers.push({\n              name: d,\n              op: \"player\"\n            });\n            this.state[\"player\"] = {\n              name: d,\n              num: 7\n            };\n          }\n        }\n\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({\n          loading: false\n        }); //add border condition on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n        } else {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState({\n          tablecard: res.tablecard\n        }); //add border conditions on ps\n\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({\n          action: \"start\",\n          user: this.state.user,\n          room: this.state.room\n        }));\n      } else if (res.action === \"drawrep\") {\n        var e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        var dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        var temp = document.createElement(\"img\");\n        let x = 1;\n\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n\n        this.setState();\n\n        if (res.user === this.state.user) {\n          temp.src = require(\"./cards/back-.png\");\n          temp.style.height = e.target.style.height;\n          temp.style.width = e.target.style.width;\n          document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n          temp.style.position = \"absolute\";\n          temp.className = \"tempplayer\";\n          temp.style.opacity = 0;\n          ws.send(JSON.stringify({\n            action: \"drawanim\",\n            number: res.addcard.length,\n            user: this.state.user,\n            room: this.state.room\n          }));\n          this.timeline.to(temp, 0.01, {\n            css: {\n              x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n              y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n            }\n          }).to(temp, 0.25, {\n            css: {\n              opacity: 1\n            }\n          }).to(temp, 0.25, {\n            css: {\n              rotateY: 90\n            },\n            onComplete: () => {\n              console.log(res.addcard[0].color + \"-\" + res.addcard[0].num);\n              temp.src = require(\"./cards/\" + res.addcard[0].color + \"-\" + res.addcard[0].num + \".png\");\n            }\n          }).to(temp, 0.25, {\n            css: {\n              rotateY: 0\n            }\n          }).to(temp, 0.5, {\n            css: {\n              x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n              y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y\n            },\n            onComplete: () => {\n              document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n              this.drawCard(res.addcard);\n              temp.parentNode.removeChild(temp);\n            }\n          }).play();\n        }\n      } else if (res.action === \"drawanimresp\") {\n        let rotation;\n\n        if (this.state.user === res.user) {\n          return;\n        } else if (this.state.op1.name === res.user) {\n          rotation = 180;\n        } else if (this.state.op2.name === res.user) {\n          rotation = 90;\n        } else if (this.state.op3.name === res.user) {\n          rotation = 270;\n        }\n\n        let dest = document.getElementsByClassName(res.user + \"cards\")[0];\n        let temp = document.createElement(\"img\");\n        let e = {\n          target: document.getElementsByClassName(\"tablecard\")[0]\n        };\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n\n        for (let i = 0; i < res.number; i++) {\n          this.timeline.to(temp, 0.01, {\n            css: {\n              x: e.target.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n              y: e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y\n            }\n          }).to(temp, 0.25, {\n            css: {\n              opacity: 1,\n              background: \"black\"\n            }\n          }).to(temp, 0.5, {\n            css: {\n              x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x + 50,\n              y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n              rotateZ: rotation\n            },\n            onComplete: () => {\n              temp.parentNode.removeChild(temp);\n            }\n          }).play();\n        }\n      } else if (res.action === \"opresp\") {\n        let rotation;\n\n        if (this.state.user === res.user) {\n          return;\n        } else if (this.state.op1.name === res.user) {\n          rotation = 180;\n        } else if (this.state.op2.name === res.user) {\n          rotation = 90;\n        } else if (this.state.op3.name === res.user) {\n          rotation = 270;\n        }\n\n        let temp = document.createElement(\"img\");\n        let dest = document.getElementsByClassName(\"tablecard\")[0];\n        let target = document.getElementsByClassName(res.user + \"cards\")[0];\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = dest.style.height;\n        temp.style.width = dest.style.width;\n        document.body.appendChild(temp);\n        temp.className = \"tempopplayer\";\n        temp.style.opacity = 0;\n        this.timeline.to(temp, 0.1, {\n          css: {\n            x: target.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n            y: target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            rotateZ: rotation\n          }\n        }).to(temp, 0.1, {\n          css: {\n            opacity: 1\n          }\n        }).to(temp, 0.25, {\n          rotateY: 90,\n          onComplete: () => {\n            temp.src = require(\"./cards/\" + res.card.color + \"-\" + res.card.num + \".png\");\n          }\n        }).to(temp, 0.25, {\n          css: {\n            rotateY: 0\n          }\n        }).to(temp, 0.25, {\n          css: {\n            x: dest.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n            rotateZ: 0\n          },\n          onComplete: () => {\n            temp.parentNode.removeChild(temp);\n          }\n        }).play();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gamearea\",\n      style: gamearea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }\n    }, \"ready\"), /*#__PURE__*/React.createElement(PacmanLoader, {\n      color: \"yellow\",\n      css: \"margin-top:20%;margin-left:45%;\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }\n    }), !this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1\",\n      style: {\n        transform: \"rotateZ(180deg)\",\n        height: \"33%\",\n        width: \"auto\",\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op1p\",\n      style: {\n        width: \"33%\",\n        marginLeft: \"33%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 17\n      }\n    }, this.state.op1.name ? this.state.op1.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop1resides\",\n      style: playery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 17\n      }\n    }, this.state.op1.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op1.num,\n      name: this.state.op1.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 21\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"mid\",\n      style: mid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2\",\n      style: {\n        transform: \"rotateZ(90deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op2p\",\n      style: {\n        width: \"33%\",\n        marginLeft: \"33%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 17\n      }\n    }, this.state.op2.name ? this.state.op2.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop2resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 17\n      }\n    }, this.state.op2.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op2.num,\n      name: this.state.op2.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 21\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stack\",\n      style: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\"),\n      className: \"tablecard\",\n      style: {\n        height: \"75px\",\n        width: \"50px\"\n      },\n      id: this.state.tablecard.color + \"-\" + this.state.tablecard.num,\n      alt: \"cards/\" + this.state.tablecard.color + \"-\" + this.state.tablecard.num + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./cards/back-.png\"),\n      alt: \"deck\",\n      style: {\n        height: \"75px\",\n        width: \"50px\",\n        background: \"black\"\n      },\n      onClick: this.drawCarde,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3\",\n      style: {\n        transform: \"rotateZ(270deg)\",\n        height: \"auto\",\n        width: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"op3p\",\n      style: {\n        width: \"33%\",\n        marginLeft: \"33%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 17\n      }\n    }, this.state.op3.name ? this.state.op3.name : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whereop3resides\",\n      style: playerx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 17\n      }\n    }, this.state.op3.num ? /*#__PURE__*/React.createElement(Opo, {\n      cardnum: this.state.op3.num,\n      name: this.state.op3.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 21\n      }\n    }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridItem\",\n      id: \"playerplace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerp\",\n      style: {\n        width: \"33%\",\n        marginLeft: \"33%\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 15\n      }\n    }, this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player\",\n      style: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 15\n      }\n    }, this.state.playercards.map(data => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"./cards/\" + data.color + \"-\" + data.num + \".png\"),\n        style: {\n          height: \"75px\",\n          width: \"50px\"\n        },\n        id: data.color + \"-\" + data.num,\n        alt: \"cards/\" + data.color + \"-\" + data.num + \".png\",\n        onClick: this.handlePlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 21\n        }\n      });\n    })))) : null);\n  }\n\n}","map":{"version":3,"sources":["/home/aditya/Documents/react/uno/src/Gamearea.js"],"names":["React","Component","PacmanLoader","Opo","TimelineLite","gsap","CSSPlugin","registerPlugin","url","dev","ws","WebSocket","gamearea","display","height","width","mid","marginLeft","player","position","justifyContent","alignItems","playery","playerx","stack","Gamearea","constructor","win","winn","alert","handlePlay","e","console","log","target","card","id","split","temp","document","createElement","src","require","style","getElementsByClassName","appendChild","className","opacity","timeline","to","css","x","getBoundingClientRect","y","onComplete","send","JSON","stringify","action","color","num","user","state","room","putblackcard","tablecard","putcard","nextturn","turn","addcards","pointerEvents","length","drawTwoCards","data","dest","lastChild","number","rotateY","playercards","push","parentNode","removeChild","setState","play","drawCard","splice","indexOf","find","box","userInput","prompt","toUpperCase","played","filter","ready","drawCarde","loading","allusers","op1","op2","op3","paused","componentDidMount","props","onopen","onmessage","res","parse","cards","d","users","name","op","opnum","border","addcard","rotation","i","background","rotateZ","body","render","transform","marginTop","textAlign","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\nimport React, { Component } from \"react\";\nimport \"./Game.css\";\nimport { PacmanLoader } from \"react-spinners\";\nimport Opo from \"./Opo\";\nimport { TimelineLite, gsap, CSSPlugin } from \"gsap\";\n// import Websocket from 'ws';\ngsap.registerPlugin(CSSPlugin);\nconst url = \"wss://uno-react-server.herokuapp.com/websocket\";\nconst dev = \"ws://localhost:3001/websocket\";\n\nconst ws = new WebSocket(dev);\n\nconst gamearea = {\n  display: \"grid\",\n  \"grid-template-columns\": \"auto\",\n  height: \"100%\",\n  width: \"100%\",\n};\nconst mid = {\n  display: \"grid\",\n  width: \"99%\",\n  marginLeft: \"0.5%\",\n  \"grid-template-columns\": \"33% 33% 33%\",\n};\nconst player = {\n  position: \"relative\",\n  width: \"33%\",\n  height: \"33%\",\n  marginLeft: \"34%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\nconst playery = {\n  position: \"relative\",\n  width: \"33%\",\n  height: \"33%\",\n  marginLeft: \"46%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\nconst playerx = {\n  position: \"relative\",\n  width: \"33%\",\n  height: \"33%\",\n  marginLeft: \"42%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\nconst stack = {\n  width: \"auto\",\n  height: \"auto\",\n  marginLeft: \"25%\",\n};\n\nexport default class Gamearea extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playercards: [],\n      loading: true,\n      user: \"\",\n      tablecard: { num: \"\", color: \"back\" },\n      allusers: [],\n      op1: {},\n      op2: {},\n      op3: {},\n      player: {},\n    };\n    this.timeline = new TimelineLite({ paused: true });\n  }\n\n  componentDidMount() {\n    this.setState({ user: this.props.user, room:this.props.room });\n\n    ws.onopen = () => {\n      console.log(\"open\");\n    };\n    ws.onmessage = (data) => {\n      console.log(data.data);\n      var res = JSON.parse(data.data);\n      if (res.action === \"startreturn\") {\n        console.log(\"startreturn\");\n        this.state.playercards = res.cards;\n        this.state.tablecard = res.tablecard;\n        var x = 1;\n        for (var d of res.users) {\n          if (d !== this.state.user) {\n            this.state.allusers.push({ name: d, op: \"op\" + x });\n            this.state[\"op\" + x] = { name: d, num: 7 };\n            x++;\n          } else {\n            this.state.allusers.push({ name: d, op: \"player\" });\n            this.state[\"player\"] = { name: d, num: 7 };\n          }\n        }\n        console.log(this.state.allusers);\n        console.log(this.state.opnum);\n        this.setState({ loading: false });\n        //add border condition on ps\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n        if (res.turn === this.state.user) {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents =\n            \"auto\";\n        } else {\n          document.getElementsByClassName(\"player\")[0].style.pointerEvents =\n            \"none\";\n        }\n      } else if (res.action === \"nextturn\") {\n        let x = 1;\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n        this.setState({ tablecard: res.tablecard });\n        //add border conditions on ps\n        if (this.state.op1.name === res.turn) {\n          document.getElementsByClassName(\"op1p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op2.name === res.turn) {\n          document.getElementsByClassName(\"op2p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.op3.name === res.turn) {\n          document.getElementsByClassName(\"op3p\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"playerp\")[0].style.border = \"none\";\n        } else if (this.state.player.name === res.turn) {\n          document.getElementsByClassName(\"playerp\")[0].style.border =\n            \"solid green 3px\";\n          document.getElementsByClassName(\"op1p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op3p\")[0].style.border = \"none\";\n          document.getElementsByClassName(\"op2p\")[0].style.border = \"none\";\n        }\n        this.nextturn(res.turn, res.addcards);\n      } else if (res.action === \"win\") {\n        this.win(res.user);\n      } else if (res.action === \"retry\") {\n        ws.send(JSON.stringify({ action: \"start\", user: this.state.user, room:this.state.room }));\n      } else if (res.action === \"drawrep\") {\n        var e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n        var dest = document.getElementsByClassName(\"player\")[0].lastChild;\n        var temp = document.createElement(\"img\");\n\n        let x = 1;\n        for (let d of res.op) {\n          if (d.name !== this.state.user) {\n            this.state[\"op\" + x] = d;\n            x++;\n          } else {\n            this.state[\"player\"] = d;\n          }\n        }\n        this.setState();\n        if (res.user === this.state.user) {\n          temp.src = require(\"./cards/back-.png\");\n          temp.style.height = e.target.style.height;\n          temp.style.width = e.target.style.width;\n          document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n          temp.style.position = \"absolute\";\n          temp.className = \"tempplayer\";\n          temp.style.opacity = 0;\n          ws.send(\n            JSON.stringify({\n              action: \"drawanim\",\n              number: res.addcard.length,\n              user: this.state.user,\n              room:this.state.room \n            })\n          );\n          this.timeline\n            .to(temp, 0.01, {\n              css: {\n                x:\n                  e.target.getBoundingClientRect().x -\n                  temp.getBoundingClientRect().x +\n                  50,\n                y:\n                  e.target.getBoundingClientRect().y -\n                  temp.getBoundingClientRect().y,\n              },\n            })\n            .to(temp, 0.25, { css: { opacity: 1 } })\n            .to(temp, 0.25, {\n              css: {\n                rotateY: 90,\n              },\n              onComplete: () => {\n                console.log(res.addcard[0].color + \"-\" + res.addcard[0].num);\n                temp.src = require(\"./cards/\" +\n                  res.addcard[0].color +\n                  \"-\" +\n                  res.addcard[0].num +\n                  \".png\");\n              },\n            })\n            .to(temp, 0.25, { css: { rotateY: 0 } })\n            .to(temp, 0.5, {\n              css: {\n                x:\n                  dest.getBoundingClientRect().x -\n                  temp.getBoundingClientRect().x +\n                  50,\n                y:\n                  dest.getBoundingClientRect().y -\n                  temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                document.getElementsByClassName(\n                  \"player\"\n                )[0].style.pointerEvents = \"auto\";\n                this.drawCard(res.addcard);\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n        }\n      } else if (res.action === \"drawanimresp\") {\n        let rotation;\n        if (this.state.user === res.user) {\n          return;\n        } else if (this.state.op1.name === res.user) {\n          rotation = 180;\n        } else if (this.state.op2.name === res.user) {\n          rotation = 90;\n        } else if (this.state.op3.name === res.user) {\n          rotation = 270;\n        }\n        let dest = document.getElementsByClassName(res.user + \"cards\")[0];\n        let temp = document.createElement(\"img\");\n        let e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = e.target.style.height;\n        temp.style.width = e.target.style.width;\n        document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n        temp.style.position = \"absolute\";\n        temp.className = \"tempplayer\";\n        temp.style.opacity = 0;\n        for (let i = 0; i < res.number; i++) {\n          this.timeline\n            .to(temp, 0.01, {\n              css: {\n                x:\n                  e.target.getBoundingClientRect().x -\n                  temp.getBoundingClientRect().x,\n                y:\n                  e.target.getBoundingClientRect().y -\n                  temp.getBoundingClientRect().y,\n              },\n            })\n            .to(temp, 0.25, {\n              css: {\n                opacity: 1,\n\n                background: \"black\",\n              },\n            })\n            .to(temp, 0.5, {\n              css: {\n                x:\n                  dest.getBoundingClientRect().x -\n                  temp.getBoundingClientRect().x +\n                  50,\n                y:\n                  dest.getBoundingClientRect().y -\n                  temp.getBoundingClientRect().y,\n                rotateZ: rotation,\n              },\n              onComplete: () => {\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n        }\n      } else if (res.action === \"opresp\") {\n        let rotation;\n        if (this.state.user === res.user) {\n          return;\n        } else if (this.state.op1.name === res.user) {\n          rotation = 180;\n        } else if (this.state.op2.name === res.user) {\n          rotation = 90;\n        } else if (this.state.op3.name === res.user) {\n          rotation = 270;\n        }\n        let temp = document.createElement(\"img\");\n        let dest = document.getElementsByClassName(\"tablecard\")[0];\n        let target = document.getElementsByClassName(res.user + \"cards\")[0];\n        temp.src = require(\"./cards/back-.png\");\n        temp.style.height = dest.style.height;\n        temp.style.width = dest.style.width;\n        document.body.appendChild(temp);\n        temp.className = \"tempopplayer\";\n        temp.style.opacity = 0;\n        this.timeline\n          .to(temp, 0.1, {\n            css: {\n              x:\n                target.getBoundingClientRect().x -\n                temp.getBoundingClientRect().x,\n              y:\n                target.getBoundingClientRect().y -\n                temp.getBoundingClientRect().y,\n              rotateZ: rotation,\n            },\n          })\n          .to(temp, 0.1, { css: { opacity: 1 } })\n          .to(temp, 0.25, {\n            rotateY: 90,\n            onComplete: () => {\n              temp.src = require(\"./cards/\" +\n                res.card.color +\n                \"-\" +\n                res.card.num +\n                \".png\");\n            },\n          })\n          .to(temp, 0.25, { css: { rotateY: 0 } })\n          .to(temp, 0.25, {\n            css: {\n              x:\n                dest.getBoundingClientRect().x - temp.getBoundingClientRect().x,\n              y:\n                dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n              rotateZ: 0,\n            },\n            onComplete: () => {\n              temp.parentNode.removeChild(temp);\n            },\n          })\n          .play();\n      }\n    };\n  }\n\n  win = (winn) => {\n    alert(winn + \" wins\");\n  };\n\n  handlePlay = async (e) => {\n    console.log(e.target);\n    var card = e.target.id.split(\"-\");\n    var temp = document.createElement(\"img\");\n    temp.id = e.target.id;\n    temp.src = require(\"./cards/\" + card[0] + \"-\" + card[1] + \".png\");\n    temp.style.height = e.target.style.height;\n    temp.style.width = e.target.style.width;\n    document.getElementsByClassName(\"player\")[0].appendChild(temp);\n    temp.style.position = \"absolute\";\n    temp.className = \"tempplayer\";\n    temp.style.opacity = 0;\n    this.timeline\n      .to(temp, 0.01, {\n        css: {\n          x:\n            e.target.getBoundingClientRect().x -\n            temp.getBoundingClientRect().x +\n            50,\n          y:\n            e.target.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n        },\n      })\n      .to(temp, 0.01, {\n        css: {\n          opacity: 1,\n        },\n        onComplete: () => {\n          ws.send(\n            JSON.stringify({\n              action: \"opplayedanim\",\n              card: { color: card[0], num: card[1] },\n              user: this.state.user, \n              room:this.state.room \n            })\n          );\n        },\n      });\n    if (card[0] === \"black\") {\n      this.putblackcard(card, e);\n    } else if (\n      card[0] === this.state.tablecard.color ||\n      card[1] === this.state.tablecard.num\n    ) {\n      this.putcard(card, e);\n    } else if (this.state.tablecard.color === \"black\") {\n      this.putcard(card, e);\n    }\n  };\n\n  nextturn = (turn, addcards) => {\n    if (turn === this.state.user) {\n      document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"auto\";\n      if (\n        (this.state.tablecard.num === \"+2\" ||\n          this.state.tablecard.num === \"+4\") &&\n        addcards.length !== 0\n      ) {\n        this.drawTwoCards(addcards);\n        ws.send(JSON.stringify({ action: \"d2\", user: this.state.user, room:this.state.room }));\n      } else if (\n        (this.state.tablecard.num === \"+2\" ||\n          this.state.tablecard.num === \"+4\") &&\n        addcards.length === 0\n      ) {\n      }\n    } else {\n      document.getElementsByClassName(\"player\")[0].style.pointerEvents = \"none\";\n    }\n  };\n\n  drawTwoCards = (addcards) => {\n    for (let data of addcards) {\n      let e = { target: document.getElementsByClassName(\"tablecard\")[0] };\n      let dest = document.getElementsByClassName(\"player\")[0].lastChild;\n      let temp = document.createElement(\"img\");\n      temp.src = require(\"./cards/back-.png\");\n      temp.style.height = e.target.style.height;\n      temp.style.width = e.target.style.width;\n      document.getElementsByClassName(\"stack\")[0].appendChild(temp);\n      temp.style.position = \"absolute\";\n      temp.className = \"tempplayer\";\n      temp.style.opacity = 0;\n      ws.send(\n        JSON.stringify({\n          action: \"drawanim\",\n          number: addcards.length,\n          user: this.state.user, room:this.state.room \n        })\n      );\n      this.timeline\n        .to(temp, 0.01, {\n          css: {\n            x:\n              e.target.getBoundingClientRect().x -\n              temp.getBoundingClientRect().x +\n              50,\n            y:\n              e.target.getBoundingClientRect().y -\n              temp.getBoundingClientRect().y,\n          },\n        })\n        .to(temp, 0.25, { css: { opacity: 1 } })\n        .to(temp, 0.25, {\n          css: {\n            rotateY: 90,\n          },\n          onComplete: () => {\n            temp.src = require(\"./cards/\" +\n              data.color +\n              \"-\" +\n              data.num +\n              \".png\");\n          },\n        })\n        .to(temp, 0.25, { css: { rotateY: 0 } })\n        .to(temp, 0.5, {\n          css: {\n            x:\n              dest.getBoundingClientRect().x -\n              temp.getBoundingClientRect().x +\n              50,\n            y: dest.getBoundingClientRect().y - temp.getBoundingClientRect().y,\n          },\n          onComplete: () => {\n            this.state.playercards.push(data);\n            temp.parentNode.removeChild(temp);\n            this.setState({ playercards: this.state.playercards });\n          },\n        })\n        .play();\n    }\n  };\n  drawCard = (addcards) => {\n    this.state.playercards.push(...addcards);\n    console.log(this.state.playercards);\n    this.setState({ playercards: this.state.playercards });\n  };\n\n  putblackcard = async (card, e) => {\n    this.state.playercards.splice(\n      this.state.playercards.indexOf(\n        this.state.playercards.find(\n          (x) => x.num === card[1] && x.color === card[0]\n        )\n      ),\n      1\n    );\n    this.setState({ playercards: this.state.playercards });\n    let temp = document.getElementsByClassName(\"tempplayer\")[0];\n    var box = document\n      .getElementsByClassName(\"tablecard\")[0]\n      .getBoundingClientRect();\n    if (card[1] === \"W\") {\n      let userInput = prompt(\n        \"What color do you want your Wild card to be?\",\n        \"R, Y, G or B?\"\n      );\n      switch (userInput.toUpperCase()) {\n        case \"R\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"0\", color: \"red\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"Y\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"0\", color: \"yellow\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"G\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"0\", color: \"green\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"B\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"wplayed\",\n                    tablecard: { num: \"0\", color: \"blue\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        default:\n          console.log(\"nothing\");\n      }\n    } else if (\n      this.state.playercards.filter(\n        (x) => x.color === card[0] || x.num === card[1]\n      ).length === 0\n    ) {\n      let userInput = prompt(\n        \"What color do you want your +4 card to be?\",\n        \"R, Y, G or B?\"\n      );\n      switch (userInput.toUpperCase()) {\n        case \"R\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"0\", color: \"red\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"Y\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"0\", color: \"yellow\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"G\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"0\", color: \"green\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        case \"B\":\n          this.timeline\n            .to(temp, 0.5, {\n              css: {\n                x: box.x - temp.getBoundingClientRect().x + 50,\n                y: box.y - temp.getBoundingClientRect().y,\n              },\n              onComplete: () => {\n                ws.send(\n                  JSON.stringify({\n                    action: \"4played\",\n                    tablecard: { num: \"0\", color: \"blue\" },\n                    played: this.state.user, room:this.state.room \n                  })\n                );\n                temp.parentNode.removeChild(temp);\n              },\n            })\n            .play();\n          break;\n        default:\n          console.log(\"nothing\");\n      }\n    }\n  };\n\n  putcard = async (card, e) => {\n    this.state.playercards.splice(\n      this.state.playercards.indexOf(\n        this.state.playercards.find(\n          (x) => x.num === card[1] && x.color === card[0]\n        )\n      ),\n      1\n    );\n    this.setState({ playercards: this.state.playercards });\n    let temp = document.getElementsByClassName(\"tempplayer\")[0];\n    var box = document\n      .getElementsByClassName(\"tablecard\")[0]\n      .getBoundingClientRect();\n    this.timeline\n      .to(temp, 0.5, {\n        css: {\n          x: box.x - temp.getBoundingClientRect().x + 50,\n          y: box.y - temp.getBoundingClientRect().y,\n        },\n        onComplete: () => {\n          if (card[1] === \"R\") {\n            ws.send(\n              JSON.stringify({\n                action: \"rplayed\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user, room:this.state.room \n              })\n            );\n          } else if (card[1] === \"S\") {\n            ws.send(\n              JSON.stringify({\n                action: \"splayed\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user, room:this.state.room \n              })\n            );\n          } else if (card[1] === \"+2\") {\n            ws.send(\n              JSON.stringify({\n                action: \"2played\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user, room:this.state.room \n              })\n            );\n          } else {\n            ws.send(\n              JSON.stringify({\n                action: \"played\",\n                tablecard: { num: card[1], color: card[0] },\n                played: this.state.user, room:this.state.room \n              })\n            );\n          }\n          temp.parentNode.removeChild(temp);\n        },\n      })\n      .play();\n  };\n\n  ready = (e) => {\n    ws.send(JSON.stringify({ action: \"start\", user: this.state.user, room:this.state.room  }));\n    e.target.style.display = \"none\";\n  };\n\n  drawCarde = () => {\n    ws.send(JSON.stringify({ action: \"draw\", played: this.state.user, room:this.state.room  }));\n  };\n\n  render() {\n    return (\n      <div className=\"gamearea\" style={gamearea}>\n        <button onClick={this.ready}>ready</button>\n        <PacmanLoader\n          color=\"yellow\"\n          css=\"margin-top:20%;margin-left:45%;\"\n          loading={this.state.loading}\n        ></PacmanLoader>\n        {!this.state.loading ? (\n          <div>\n            <div className=\"gridItem\" >\n              <div\n                className=\"op1\"\n                style={{\n                  transform: \"rotateZ(180deg)\",\n                  height: \"33%\",\n                  width: \"auto\",\n                  marginTop:'5%'\n                }}\n              >\n                <div\n                  className=\"op1p\"\n                  style={{\n                    width: \"33%\",\n                    marginLeft: \"33%\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {this.state.op1.name ? this.state.op1.name : \"\"}\n                </div>\n                <div className=\"whereop1resides\" style={playery}>\n                  {this.state.op1.num ? (\n                    <Opo\n                      cardnum={this.state.op1.num}\n                      name={this.state.op1.name}\n                    ></Opo>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"gridItem\" id=\"mid\" style={mid}>\n              <div\n                className=\"op2\"\n                style={{\n                  transform: \"rotateZ(90deg)\",\n                  height: \"auto\",\n                  width: \"auto\",\n                }}\n              >\n                <div\n                  className=\"op2p\"\n                  style={{\n                    width: \"33%\",\n                    marginLeft: \"33%\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {this.state.op2.name ? this.state.op2.name : \"\"}\n                </div>\n                <div className=\"whereop2resides\" style={playerx}>\n                  {this.state.op2.num ? (\n                    <Opo\n                      cardnum={this.state.op2.num}\n                      name={this.state.op2.name}\n                    ></Opo>\n                  ) : null}\n                </div>\n              </div>\n              <div className=\"stack\" style={stack}>\n                <div style={{ marginLeft: \"20%\" }}>\n                  <img\n                    src={require(\"./cards/\" +\n                      this.state.tablecard.color +\n                      \"-\" +\n                      this.state.tablecard.num +\n                      \".png\")}\n                    className=\"tablecard\"\n                    style={{ height: \"75px\", width: \"50px\" }}\n                    id={\n                      this.state.tablecard.color +\n                      \"-\" +\n                      this.state.tablecard.num\n                    }\n                    alt={\n                      \"cards/\" +\n                      this.state.tablecard.color +\n                      \"-\" +\n                      this.state.tablecard.num +\n                      \".png\"\n                    }\n                  ></img>\n                  <img\n                    src={require(\"./cards/back-.png\")}\n                    alt={\"deck\"}\n                    style={{\n                      height: \"75px\",\n                      width: \"50px\",\n                      background: \"black\",\n                    }}\n                    onClick={this.drawCarde}\n                  ></img>\n                </div>\n              </div>\n              <div\n                className=\"op3\"\n                style={{\n                  transform: \"rotateZ(270deg)\",\n                  height: \"auto\",\n                  width: \"auto\",\n                }}\n              >\n                <div\n                  className=\"op3p\"\n                  style={{\n                    width: \"33%\",\n                    marginLeft: \"33%\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {this.state.op3.name ? this.state.op3.name : \"\"}\n                </div>\n                <div className=\"whereop3resides\" style={playerx}>\n                  {this.state.op3.num ? (\n                    <Opo\n                      cardnum={this.state.op3.num}\n                      name={this.state.op3.name}\n                    ></Opo>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"gridItem\" id=\"playerplace\">\n              <div\n                className=\"playerp\"\n                style={{ width: \"33%\", marginLeft: \"33%\", textAlign: \"center\" }}\n              >\n                {this.state.user}\n              </div>\n              <div className=\"player\" style={player}>\n                {this.state.playercards.map((data) => {\n                  return (\n                    <img\n                      src={require(\"./cards/\" +\n                        data.color +\n                        \"-\" +\n                        data.num +\n                        \".png\")}\n                      style={{ height: \"75px\", width: \"50px\" }}\n                      id={data.color + \"-\" + data.num}\n                      alt={\"cards/\" + data.color + \"-\" + data.num + \".png\"}\n                      onClick={this.handlePlay}\n                    ></img>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}